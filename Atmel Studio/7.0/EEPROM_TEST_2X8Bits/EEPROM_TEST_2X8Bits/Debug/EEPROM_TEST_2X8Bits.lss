
EEPROM_TEST_2X8Bits.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000008d0  00000964  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000097  00800106  00800106  0000096a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000096a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00000a08  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001091  00000000  00000000  00000b20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000098e  00000000  00000000  00001bb1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000098c  00000000  00000000  0000253f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002bc  00000000  00000000  00002ecc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000073f  00000000  00000000  00003188  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000966  00000000  00000000  000038c7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  0000422d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	e2 c0       	rjmp	.+452    	; 0x1ea <__vector_18>
  26:	39 c0       	rjmp	.+114    	; 0x9a <__vector_19>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d4 e0       	ldi	r29, 0x04	; 4
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
  40:	11 e0       	ldi	r17, 0x01	; 1
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	b1 e0       	ldi	r27, 0x01	; 1
  46:	e0 ed       	ldi	r30, 0xD0	; 208
  48:	f8 e0       	ldi	r31, 0x08	; 8
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	a6 30       	cpi	r26, 0x06	; 6
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	21 e0       	ldi	r18, 0x01	; 1
  58:	a6 e0       	ldi	r26, 0x06	; 6
  5a:	b1 e0       	ldi	r27, 0x01	; 1
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	ad 39       	cpi	r26, 0x9D	; 157
  62:	b2 07       	cpc	r27, r18
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	0a d1       	rcall	.+532    	; 0x27c <main>
  68:	31 c4       	rjmp	.+2146   	; 0x8cc <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <UART_Init>:
	TX_Head = 0;
	TX_Tail = 0; 
	
	// returning ErrorUart (no-cost operation) 
	return ErrorUart;
}
  6c:	82 e0       	ldi	r24, 0x02	; 2
  6e:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fe0c0>
  72:	88 eb       	ldi	r24, 0xB8	; 184
  74:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fe0c1>
  78:	86 e0       	ldi	r24, 0x06	; 6
  7a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7fe0c2>
  7e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fe0c5>
  82:	87 e6       	ldi	r24, 0x67	; 103
  84:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fe0c4>
  88:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <RX_Tail>
  8c:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <RX_Head>
  90:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <TX_Tail>
  94:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <TX_Head>
  98:	08 95       	ret

0000009a <__vector_19>:
  9a:	1f 92       	push	r1
  9c:	0f 92       	push	r0
  9e:	0f b6       	in	r0, 0x3f	; 63
  a0:	0f 92       	push	r0
  a2:	11 24       	eor	r1, r1
  a4:	2f 93       	push	r18
  a6:	8f 93       	push	r24
  a8:	9f 93       	push	r25
  aa:	ef 93       	push	r30
  ac:	ff 93       	push	r31
  ae:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <TX_Tail>
  b2:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <TX_Head>
  b6:	98 17       	cp	r25, r24
  b8:	d9 f0       	breq	.+54     	; 0xf0 <__vector_19+0x56>
  ba:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <TX_Tail>
  be:	9f 5f       	subi	r25, 0xFF	; 255
  c0:	89 2f       	mov	r24, r25
  c2:	86 95       	lsr	r24
  c4:	2b ee       	ldi	r18, 0xEB	; 235
  c6:	82 9f       	mul	r24, r18
  c8:	81 2d       	mov	r24, r1
  ca:	11 24       	eor	r1, r1
  cc:	82 95       	swap	r24
  ce:	86 95       	lsr	r24
  d0:	87 70       	andi	r24, 0x07	; 7
  d2:	26 e4       	ldi	r18, 0x46	; 70
  d4:	82 9f       	mul	r24, r18
  d6:	90 19       	sub	r25, r0
  d8:	11 24       	eor	r1, r1
  da:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <TX_Tail>
  de:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <TX_Tail>
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	e4 5f       	subi	r30, 0xF4	; 244
  e6:	fe 4f       	sbci	r31, 0xFE	; 254
  e8:	80 81       	ld	r24, Z
  ea:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fe0c6>
  ee:	05 c0       	rjmp	.+10     	; 0xfa <__vector_19+0x60>
  f0:	e1 ec       	ldi	r30, 0xC1	; 193
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	80 81       	ld	r24, Z
  f6:	8f 7d       	andi	r24, 0xDF	; 223
  f8:	80 83       	st	Z, r24
  fa:	ff 91       	pop	r31
  fc:	ef 91       	pop	r30
  fe:	9f 91       	pop	r25
 100:	8f 91       	pop	r24
 102:	2f 91       	pop	r18
 104:	0f 90       	pop	r0
 106:	0f be       	out	0x3f, r0	; 63
 108:	0f 90       	pop	r0
 10a:	1f 90       	pop	r1
 10c:	18 95       	reti

0000010e <UART_PutChar>:
 10e:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <TX_Head>
 112:	2f 5f       	subi	r18, 0xFF	; 255
 114:	92 2f       	mov	r25, r18
 116:	96 95       	lsr	r25
 118:	3b ee       	ldi	r19, 0xEB	; 235
 11a:	93 9f       	mul	r25, r19
 11c:	91 2d       	mov	r25, r1
 11e:	11 24       	eor	r1, r1
 120:	92 95       	swap	r25
 122:	96 95       	lsr	r25
 124:	97 70       	andi	r25, 0x07	; 7
 126:	36 e4       	ldi	r19, 0x46	; 70
 128:	93 9f       	mul	r25, r19
 12a:	20 19       	sub	r18, r0
 12c:	11 24       	eor	r1, r1
 12e:	92 2f       	mov	r25, r18
 130:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <TX_Tail>
 134:	92 13       	cpse	r25, r18
 136:	06 c0       	rjmp	.+12     	; 0x144 <UART_PutChar+0x36>
 138:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <ErrorUart>
 13c:	84 60       	ori	r24, 0x04	; 4
 13e:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <ErrorUart>
 142:	08 95       	ret
 144:	e9 2f       	mov	r30, r25
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	e4 5f       	subi	r30, 0xF4	; 244
 14a:	fe 4f       	sbci	r31, 0xFE	; 254
 14c:	80 83       	st	Z, r24
 14e:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <TX_Head>
 152:	e1 ec       	ldi	r30, 0xC1	; 193
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	80 81       	ld	r24, Z
 158:	80 62       	ori	r24, 0x20	; 32
 15a:	80 83       	st	Z, r24
 15c:	08 95       	ret

0000015e <Uart_TxCountDataWaiting>:
 15e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <TX_Head>
 162:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <TX_Tail>
 166:	89 17       	cp	r24, r25
 168:	30 f4       	brcc	.+12     	; 0x176 <Uart_TxCountDataWaiting+0x18>
 16a:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <TX_Head>
 16e:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <TX_Tail>
 172:	89 1b       	sub	r24, r25
 174:	01 c0       	rjmp	.+2      	; 0x178 <Uart_TxCountDataWaiting+0x1a>
 176:	80 e0       	ldi	r24, 0x00	; 0
 178:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <TX_Head>
 17c:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <TX_Tail>
 180:	29 17       	cp	r18, r25
 182:	30 f4       	brcc	.+12     	; 0x190 <Uart_TxCountDataWaiting+0x32>
 184:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <TX_Head>
 188:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <TX_Tail>
 18c:	89 1b       	sub	r24, r25
 18e:	8a 5b       	subi	r24, 0xBA	; 186
 190:	08 95       	ret

00000192 <Uart_PutString>:
 192:	0f 93       	push	r16
 194:	1f 93       	push	r17
 196:	cf 93       	push	r28
 198:	df 93       	push	r29
 19a:	8c 01       	movw	r16, r24
 19c:	e0 df       	rcall	.-64     	; 0x15e <Uart_TxCountDataWaiting>
 19e:	96 e4       	ldi	r25, 0x46	; 70
 1a0:	98 1b       	sub	r25, r24
 1a2:	f8 01       	movw	r30, r16
 1a4:	01 90       	ld	r0, Z+
 1a6:	00 20       	and	r0, r0
 1a8:	e9 f7       	brne	.-6      	; 0x1a4 <Uart_PutString+0x12>
 1aa:	31 97       	sbiw	r30, 0x01	; 1
 1ac:	de 2f       	mov	r29, r30
 1ae:	d0 1b       	sub	r29, r16
 1b0:	d9 17       	cp	r29, r25
 1b2:	40 f0       	brcs	.+16     	; 0x1c4 <Uart_PutString+0x32>
 1b4:	0b c0       	rjmp	.+22     	; 0x1cc <Uart_PutString+0x3a>
 1b6:	f8 01       	movw	r30, r16
 1b8:	ec 0f       	add	r30, r28
 1ba:	f1 1d       	adc	r31, r1
 1bc:	80 81       	ld	r24, Z
 1be:	a7 df       	rcall	.-178    	; 0x10e <UART_PutChar>
 1c0:	cf 5f       	subi	r28, 0xFF	; 255
 1c2:	01 c0       	rjmp	.+2      	; 0x1c6 <Uart_PutString+0x34>
 1c4:	c0 e0       	ldi	r28, 0x00	; 0
 1c6:	cd 17       	cp	r28, r29
 1c8:	b0 f3       	brcs	.-20     	; 0x1b6 <Uart_PutString+0x24>
 1ca:	05 c0       	rjmp	.+10     	; 0x1d6 <Uart_PutString+0x44>
 1cc:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <ErrorUart>
 1d0:	84 60       	ori	r24, 0x04	; 4
 1d2:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <ErrorUart>
 1d6:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <ErrorUart>
 1da:	df 91       	pop	r29
 1dc:	cf 91       	pop	r28
 1de:	1f 91       	pop	r17
 1e0:	0f 91       	pop	r16
 1e2:	08 95       	ret

000001e4 <Uart_SetELOEndCharDetected>:
 * @param  value Value of flag to be set
 * @return void
 */
void Uart_SetELOEndCharDetected(uint8_t value)
{
	EloEndCharDetected = value;
 1e4:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
 1e8:	08 95       	ret

000001ea <__vector_18>:
 * When interrupt occures, the new data has to be stored in circular buffer.
 * Head pointer increases, only if buffer is not full.
 *
*/
ISR(USART_RX_vect)
{
 1ea:	1f 92       	push	r1
 1ec:	0f 92       	push	r0
 1ee:	0f b6       	in	r0, 0x3f	; 63
 1f0:	0f 92       	push	r0
 1f2:	11 24       	eor	r1, r1
 1f4:	2f 93       	push	r18
 1f6:	3f 93       	push	r19
 1f8:	4f 93       	push	r20
 1fa:	5f 93       	push	r21
 1fc:	6f 93       	push	r22
 1fe:	7f 93       	push	r23
 200:	8f 93       	push	r24
 202:	9f 93       	push	r25
 204:	af 93       	push	r26
 206:	bf 93       	push	r27
 208:	ef 93       	push	r30
 20a:	ff 93       	push	r31
	char data;			// Temporary (to empty UDR)
	uint8_t tmpRXHead;	// Temporary (for computations) 
	
	data = UDR_REG;		// empty UDR in temporary variable 
 20c:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fe0c6>
						// this permits to receive another data (avoid loss)
	
	tmpRXHead = RX_Head + 1;			// Increase position of tmp head 
 210:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <RX_Head>
 214:	9f 5f       	subi	r25, 0xFF	; 255
	tmpRXHead %= UART_RX_BUFFER_SIZE;	// cycling buffer position if max reached
 216:	89 2f       	mov	r24, r25
 218:	86 95       	lsr	r24
 21a:	eb ee       	ldi	r30, 0xEB	; 235
 21c:	8e 9f       	mul	r24, r30
 21e:	e1 2d       	mov	r30, r1
 220:	11 24       	eor	r1, r1
 222:	e2 95       	swap	r30
 224:	e6 95       	lsr	r30
 226:	e7 70       	andi	r30, 0x07	; 7
 228:	86 e4       	ldi	r24, 0x46	; 70
 22a:	e8 9f       	mul	r30, r24
 22c:	90 19       	sub	r25, r0
 22e:	11 24       	eor	r1, r1
	
	// Is RX_Buffer full ? 
	if (tmpRXHead == RX_Tail)
 230:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <RX_Tail>
 234:	98 13       	cpse	r25, r24
 236:	06 c0       	rjmp	.+12     	; 0x244 <__EEPROM_REGION_LENGTH__+0x44>
	{
		// --> ERROR : RX Buffer is full 
		ErrorUart |= UART_ERROR_RX_BUFFER_FULL; // Buffer is full, handle exeption ! 
 238:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <ErrorUart>
 23c:	82 60       	ori	r24, 0x02	; 2
 23e:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <ErrorUart>
 242:	0b c0       	rjmp	.+22     	; 0x25a <__EEPROM_REGION_LENGTH__+0x5a>
	}
	else
	{
		RX_Head = tmpRXHead ;			// Save new pointer position
 244:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <RX_Head>
		RX_Buffer[tmpRXHead] = data;	// Save data in buffer
 248:	e9 2f       	mov	r30, r25
 24a:	f0 e0       	ldi	r31, 0x00	; 0
 24c:	ee 5a       	subi	r30, 0xAE	; 174
 24e:	fe 4f       	sbci	r31, 0xFE	; 254
 250:	20 83       	st	Z, r18
		
		// ELO Protocole handling
		if (data == '*')
 252:	2a 32       	cpi	r18, 0x2A	; 42
 254:	11 f4       	brne	.+4      	; 0x25a <__EEPROM_REGION_LENGTH__+0x5a>
		{
			Uart_SetELOEndCharDetected(0x01);
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	c5 df       	rcall	.-118    	; 0x1e4 <Uart_SetELOEndCharDetected>
		}
	}
}
 25a:	ff 91       	pop	r31
 25c:	ef 91       	pop	r30
 25e:	bf 91       	pop	r27
 260:	af 91       	pop	r26
 262:	9f 91       	pop	r25
 264:	8f 91       	pop	r24
 266:	7f 91       	pop	r23
 268:	6f 91       	pop	r22
 26a:	5f 91       	pop	r21
 26c:	4f 91       	pop	r20
 26e:	3f 91       	pop	r19
 270:	2f 91       	pop	r18
 272:	0f 90       	pop	r0
 274:	0f be       	out	0x3f, r0	; 63
 276:	0f 90       	pop	r0
 278:	1f 90       	pop	r1
 27a:	18 95       	reti

0000027c <main>:

int main(void)
{
    /* Replace with your application code */
	
	UART_Init();
 27c:	f7 de       	rcall	.-530    	; 0x6c <UART_Init>
	sei();
 27e:	78 94       	sei

    while (1) 
    {
		high_value_s = (score >> 8) & 0xFF;
 280:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 284:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <__data_start+0x1>
 288:	60 93 9c 01 	sts	0x019C, r22	; 0x80019c <high_value_s>
		low_value_s = score & 0xFF;
 28c:	80 93 9b 01 	sts	0x019B, r24	; 0x80019b <low_value_s>
		
		eeprom_write_byte((uint8_t *)0, (score >> 8) & 0xFF);
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	d6 d2       	rcall	.+1452   	; 0x842 <eeprom_write_byte>
		eeprom_write_byte((uint8_t *)1, score & 0xFF);
 296:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	d1 d2       	rcall	.+1442   	; 0x842 <eeprom_write_byte>
		
		bestscore = (eeprom_read_byte((uint8_t *)0) << 8);
 2a0:	80 e0       	ldi	r24, 0x00	; 0
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	c6 d2       	rcall	.+1420   	; 0x832 <eeprom_read_byte>
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	c9 2f       	mov	r28, r25
 2aa:	d8 2f       	mov	r29, r24
 2ac:	d0 93 9a 01 	sts	0x019A, r29	; 0x80019a <bestscore+0x1>
 2b0:	c0 93 99 01 	sts	0x0199, r28	; 0x800199 <bestscore>
		bestscore = bestscore + eeprom_read_byte((uint8_t *)1);
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	bc d2       	rcall	.+1400   	; 0x832 <eeprom_read_byte>
 2ba:	c8 0f       	add	r28, r24
 2bc:	d1 1d       	adc	r29, r1
 2be:	d0 93 9a 01 	sts	0x019A, r29	; 0x80019a <bestscore+0x1>
 2c2:	c0 93 99 01 	sts	0x0199, r28	; 0x800199 <bestscore>
		
		sprintf(uartMsg, "%d*", bestscore);
 2c6:	df 93       	push	r29
 2c8:	cf 93       	push	r28
 2ca:	82 e0       	ldi	r24, 0x02	; 2
 2cc:	91 e0       	ldi	r25, 0x01	; 1
 2ce:	9f 93       	push	r25
 2d0:	8f 93       	push	r24
 2d2:	88 e9       	ldi	r24, 0x98	; 152
 2d4:	91 e0       	ldi	r25, 0x01	; 1
 2d6:	9f 93       	push	r25
 2d8:	8f 93       	push	r24
 2da:	0a d0       	rcall	.+20     	; 0x2f0 <sprintf>
		
		Uart_PutString(uartMsg);
 2dc:	88 e9       	ldi	r24, 0x98	; 152
 2de:	91 e0       	ldi	r25, 0x01	; 1
 2e0:	58 df       	rcall	.-336    	; 0x192 <Uart_PutString>
 2e2:	0f 90       	pop	r0
 2e4:	0f 90       	pop	r0
 2e6:	0f 90       	pop	r0
 2e8:	0f 90       	pop	r0
 2ea:	0f 90       	pop	r0
 2ec:	0f 90       	pop	r0
 2ee:	ff cf       	rjmp	.-2      	; 0x2ee <main+0x72>

000002f0 <sprintf>:
 2f0:	ae e0       	ldi	r26, 0x0E	; 14
 2f2:	b0 e0       	ldi	r27, 0x00	; 0
 2f4:	ed e7       	ldi	r30, 0x7D	; 125
 2f6:	f1 e0       	ldi	r31, 0x01	; 1
 2f8:	c0 c2       	rjmp	.+1408   	; 0x87a <__prologue_saves__+0x1c>
 2fa:	0d 89       	ldd	r16, Y+21	; 0x15
 2fc:	1e 89       	ldd	r17, Y+22	; 0x16
 2fe:	86 e0       	ldi	r24, 0x06	; 6
 300:	8c 83       	std	Y+4, r24	; 0x04
 302:	1a 83       	std	Y+2, r17	; 0x02
 304:	09 83       	std	Y+1, r16	; 0x01
 306:	8f ef       	ldi	r24, 0xFF	; 255
 308:	9f e7       	ldi	r25, 0x7F	; 127
 30a:	9e 83       	std	Y+6, r25	; 0x06
 30c:	8d 83       	std	Y+5, r24	; 0x05
 30e:	ae 01       	movw	r20, r28
 310:	47 5e       	subi	r20, 0xE7	; 231
 312:	5f 4f       	sbci	r21, 0xFF	; 255
 314:	6f 89       	ldd	r22, Y+23	; 0x17
 316:	78 8d       	ldd	r23, Y+24	; 0x18
 318:	ce 01       	movw	r24, r28
 31a:	01 96       	adiw	r24, 0x01	; 1
 31c:	08 d0       	rcall	.+16     	; 0x32e <vfprintf>
 31e:	ef 81       	ldd	r30, Y+7	; 0x07
 320:	f8 85       	ldd	r31, Y+8	; 0x08
 322:	e0 0f       	add	r30, r16
 324:	f1 1f       	adc	r31, r17
 326:	10 82       	st	Z, r1
 328:	2e 96       	adiw	r28, 0x0e	; 14
 32a:	e4 e0       	ldi	r30, 0x04	; 4
 32c:	c2 c2       	rjmp	.+1412   	; 0x8b2 <__epilogue_restores__+0x1c>

0000032e <vfprintf>:
 32e:	ab e0       	ldi	r26, 0x0B	; 11
 330:	b0 e0       	ldi	r27, 0x00	; 0
 332:	ec e9       	ldi	r30, 0x9C	; 156
 334:	f1 e0       	ldi	r31, 0x01	; 1
 336:	93 c2       	rjmp	.+1318   	; 0x85e <__prologue_saves__>
 338:	6c 01       	movw	r12, r24
 33a:	7b 01       	movw	r14, r22
 33c:	8a 01       	movw	r16, r20
 33e:	fc 01       	movw	r30, r24
 340:	17 82       	std	Z+7, r1	; 0x07
 342:	16 82       	std	Z+6, r1	; 0x06
 344:	83 81       	ldd	r24, Z+3	; 0x03
 346:	81 ff       	sbrs	r24, 1
 348:	bf c1       	rjmp	.+894    	; 0x6c8 <__stack+0x1c9>
 34a:	ce 01       	movw	r24, r28
 34c:	01 96       	adiw	r24, 0x01	; 1
 34e:	3c 01       	movw	r6, r24
 350:	f6 01       	movw	r30, r12
 352:	93 81       	ldd	r25, Z+3	; 0x03
 354:	f7 01       	movw	r30, r14
 356:	93 fd       	sbrc	r25, 3
 358:	85 91       	lpm	r24, Z+
 35a:	93 ff       	sbrs	r25, 3
 35c:	81 91       	ld	r24, Z+
 35e:	7f 01       	movw	r14, r30
 360:	88 23       	and	r24, r24
 362:	09 f4       	brne	.+2      	; 0x366 <vfprintf+0x38>
 364:	ad c1       	rjmp	.+858    	; 0x6c0 <__stack+0x1c1>
 366:	85 32       	cpi	r24, 0x25	; 37
 368:	39 f4       	brne	.+14     	; 0x378 <vfprintf+0x4a>
 36a:	93 fd       	sbrc	r25, 3
 36c:	85 91       	lpm	r24, Z+
 36e:	93 ff       	sbrs	r25, 3
 370:	81 91       	ld	r24, Z+
 372:	7f 01       	movw	r14, r30
 374:	85 32       	cpi	r24, 0x25	; 37
 376:	21 f4       	brne	.+8      	; 0x380 <vfprintf+0x52>
 378:	b6 01       	movw	r22, r12
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	c0 d1       	rcall	.+896    	; 0x6fe <fputc>
 37e:	e8 cf       	rjmp	.-48     	; 0x350 <vfprintf+0x22>
 380:	91 2c       	mov	r9, r1
 382:	21 2c       	mov	r2, r1
 384:	31 2c       	mov	r3, r1
 386:	ff e1       	ldi	r31, 0x1F	; 31
 388:	f3 15       	cp	r31, r3
 38a:	d8 f0       	brcs	.+54     	; 0x3c2 <vfprintf+0x94>
 38c:	8b 32       	cpi	r24, 0x2B	; 43
 38e:	79 f0       	breq	.+30     	; 0x3ae <vfprintf+0x80>
 390:	38 f4       	brcc	.+14     	; 0x3a0 <vfprintf+0x72>
 392:	80 32       	cpi	r24, 0x20	; 32
 394:	79 f0       	breq	.+30     	; 0x3b4 <vfprintf+0x86>
 396:	83 32       	cpi	r24, 0x23	; 35
 398:	a1 f4       	brne	.+40     	; 0x3c2 <vfprintf+0x94>
 39a:	23 2d       	mov	r18, r3
 39c:	20 61       	ori	r18, 0x10	; 16
 39e:	1d c0       	rjmp	.+58     	; 0x3da <vfprintf+0xac>
 3a0:	8d 32       	cpi	r24, 0x2D	; 45
 3a2:	61 f0       	breq	.+24     	; 0x3bc <vfprintf+0x8e>
 3a4:	80 33       	cpi	r24, 0x30	; 48
 3a6:	69 f4       	brne	.+26     	; 0x3c2 <vfprintf+0x94>
 3a8:	23 2d       	mov	r18, r3
 3aa:	21 60       	ori	r18, 0x01	; 1
 3ac:	16 c0       	rjmp	.+44     	; 0x3da <vfprintf+0xac>
 3ae:	83 2d       	mov	r24, r3
 3b0:	82 60       	ori	r24, 0x02	; 2
 3b2:	38 2e       	mov	r3, r24
 3b4:	e3 2d       	mov	r30, r3
 3b6:	e4 60       	ori	r30, 0x04	; 4
 3b8:	3e 2e       	mov	r3, r30
 3ba:	2a c0       	rjmp	.+84     	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 3bc:	f3 2d       	mov	r31, r3
 3be:	f8 60       	ori	r31, 0x08	; 8
 3c0:	1d c0       	rjmp	.+58     	; 0x3fc <vfprintf+0xce>
 3c2:	37 fc       	sbrc	r3, 7
 3c4:	2d c0       	rjmp	.+90     	; 0x420 <__DATA_REGION_LENGTH__+0x20>
 3c6:	20 ed       	ldi	r18, 0xD0	; 208
 3c8:	28 0f       	add	r18, r24
 3ca:	2a 30       	cpi	r18, 0x0A	; 10
 3cc:	40 f0       	brcs	.+16     	; 0x3de <vfprintf+0xb0>
 3ce:	8e 32       	cpi	r24, 0x2E	; 46
 3d0:	b9 f4       	brne	.+46     	; 0x400 <__DATA_REGION_LENGTH__>
 3d2:	36 fc       	sbrc	r3, 6
 3d4:	75 c1       	rjmp	.+746    	; 0x6c0 <__stack+0x1c1>
 3d6:	23 2d       	mov	r18, r3
 3d8:	20 64       	ori	r18, 0x40	; 64
 3da:	32 2e       	mov	r3, r18
 3dc:	19 c0       	rjmp	.+50     	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 3de:	36 fe       	sbrs	r3, 6
 3e0:	06 c0       	rjmp	.+12     	; 0x3ee <vfprintf+0xc0>
 3e2:	8a e0       	ldi	r24, 0x0A	; 10
 3e4:	98 9e       	mul	r9, r24
 3e6:	20 0d       	add	r18, r0
 3e8:	11 24       	eor	r1, r1
 3ea:	92 2e       	mov	r9, r18
 3ec:	11 c0       	rjmp	.+34     	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 3ee:	ea e0       	ldi	r30, 0x0A	; 10
 3f0:	2e 9e       	mul	r2, r30
 3f2:	20 0d       	add	r18, r0
 3f4:	11 24       	eor	r1, r1
 3f6:	22 2e       	mov	r2, r18
 3f8:	f3 2d       	mov	r31, r3
 3fa:	f0 62       	ori	r31, 0x20	; 32
 3fc:	3f 2e       	mov	r3, r31
 3fe:	08 c0       	rjmp	.+16     	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 400:	8c 36       	cpi	r24, 0x6C	; 108
 402:	21 f4       	brne	.+8      	; 0x40c <__DATA_REGION_LENGTH__+0xc>
 404:	83 2d       	mov	r24, r3
 406:	80 68       	ori	r24, 0x80	; 128
 408:	38 2e       	mov	r3, r24
 40a:	02 c0       	rjmp	.+4      	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 40c:	88 36       	cpi	r24, 0x68	; 104
 40e:	41 f4       	brne	.+16     	; 0x420 <__DATA_REGION_LENGTH__+0x20>
 410:	f7 01       	movw	r30, r14
 412:	93 fd       	sbrc	r25, 3
 414:	85 91       	lpm	r24, Z+
 416:	93 ff       	sbrs	r25, 3
 418:	81 91       	ld	r24, Z+
 41a:	7f 01       	movw	r14, r30
 41c:	81 11       	cpse	r24, r1
 41e:	b3 cf       	rjmp	.-154    	; 0x386 <vfprintf+0x58>
 420:	98 2f       	mov	r25, r24
 422:	9f 7d       	andi	r25, 0xDF	; 223
 424:	95 54       	subi	r25, 0x45	; 69
 426:	93 30       	cpi	r25, 0x03	; 3
 428:	28 f4       	brcc	.+10     	; 0x434 <__DATA_REGION_LENGTH__+0x34>
 42a:	0c 5f       	subi	r16, 0xFC	; 252
 42c:	1f 4f       	sbci	r17, 0xFF	; 255
 42e:	9f e3       	ldi	r25, 0x3F	; 63
 430:	99 83       	std	Y+1, r25	; 0x01
 432:	0d c0       	rjmp	.+26     	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
 434:	83 36       	cpi	r24, 0x63	; 99
 436:	31 f0       	breq	.+12     	; 0x444 <__DATA_REGION_LENGTH__+0x44>
 438:	83 37       	cpi	r24, 0x73	; 115
 43a:	71 f0       	breq	.+28     	; 0x458 <__DATA_REGION_LENGTH__+0x58>
 43c:	83 35       	cpi	r24, 0x53	; 83
 43e:	09 f0       	breq	.+2      	; 0x442 <__DATA_REGION_LENGTH__+0x42>
 440:	55 c0       	rjmp	.+170    	; 0x4ec <__DATA_REGION_LENGTH__+0xec>
 442:	20 c0       	rjmp	.+64     	; 0x484 <__DATA_REGION_LENGTH__+0x84>
 444:	f8 01       	movw	r30, r16
 446:	80 81       	ld	r24, Z
 448:	89 83       	std	Y+1, r24	; 0x01
 44a:	0e 5f       	subi	r16, 0xFE	; 254
 44c:	1f 4f       	sbci	r17, 0xFF	; 255
 44e:	88 24       	eor	r8, r8
 450:	83 94       	inc	r8
 452:	91 2c       	mov	r9, r1
 454:	53 01       	movw	r10, r6
 456:	12 c0       	rjmp	.+36     	; 0x47c <__DATA_REGION_LENGTH__+0x7c>
 458:	28 01       	movw	r4, r16
 45a:	f2 e0       	ldi	r31, 0x02	; 2
 45c:	4f 0e       	add	r4, r31
 45e:	51 1c       	adc	r5, r1
 460:	f8 01       	movw	r30, r16
 462:	a0 80       	ld	r10, Z
 464:	b1 80       	ldd	r11, Z+1	; 0x01
 466:	36 fe       	sbrs	r3, 6
 468:	03 c0       	rjmp	.+6      	; 0x470 <__DATA_REGION_LENGTH__+0x70>
 46a:	69 2d       	mov	r22, r9
 46c:	70 e0       	ldi	r23, 0x00	; 0
 46e:	02 c0       	rjmp	.+4      	; 0x474 <__DATA_REGION_LENGTH__+0x74>
 470:	6f ef       	ldi	r22, 0xFF	; 255
 472:	7f ef       	ldi	r23, 0xFF	; 255
 474:	c5 01       	movw	r24, r10
 476:	38 d1       	rcall	.+624    	; 0x6e8 <strnlen>
 478:	4c 01       	movw	r8, r24
 47a:	82 01       	movw	r16, r4
 47c:	f3 2d       	mov	r31, r3
 47e:	ff 77       	andi	r31, 0x7F	; 127
 480:	3f 2e       	mov	r3, r31
 482:	15 c0       	rjmp	.+42     	; 0x4ae <__DATA_REGION_LENGTH__+0xae>
 484:	28 01       	movw	r4, r16
 486:	22 e0       	ldi	r18, 0x02	; 2
 488:	42 0e       	add	r4, r18
 48a:	51 1c       	adc	r5, r1
 48c:	f8 01       	movw	r30, r16
 48e:	a0 80       	ld	r10, Z
 490:	b1 80       	ldd	r11, Z+1	; 0x01
 492:	36 fe       	sbrs	r3, 6
 494:	03 c0       	rjmp	.+6      	; 0x49c <__DATA_REGION_LENGTH__+0x9c>
 496:	69 2d       	mov	r22, r9
 498:	70 e0       	ldi	r23, 0x00	; 0
 49a:	02 c0       	rjmp	.+4      	; 0x4a0 <__DATA_REGION_LENGTH__+0xa0>
 49c:	6f ef       	ldi	r22, 0xFF	; 255
 49e:	7f ef       	ldi	r23, 0xFF	; 255
 4a0:	c5 01       	movw	r24, r10
 4a2:	17 d1       	rcall	.+558    	; 0x6d2 <strnlen_P>
 4a4:	4c 01       	movw	r8, r24
 4a6:	f3 2d       	mov	r31, r3
 4a8:	f0 68       	ori	r31, 0x80	; 128
 4aa:	3f 2e       	mov	r3, r31
 4ac:	82 01       	movw	r16, r4
 4ae:	33 fc       	sbrc	r3, 3
 4b0:	19 c0       	rjmp	.+50     	; 0x4e4 <__DATA_REGION_LENGTH__+0xe4>
 4b2:	82 2d       	mov	r24, r2
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	88 16       	cp	r8, r24
 4b8:	99 06       	cpc	r9, r25
 4ba:	a0 f4       	brcc	.+40     	; 0x4e4 <__DATA_REGION_LENGTH__+0xe4>
 4bc:	b6 01       	movw	r22, r12
 4be:	80 e2       	ldi	r24, 0x20	; 32
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	1d d1       	rcall	.+570    	; 0x6fe <fputc>
 4c4:	2a 94       	dec	r2
 4c6:	f5 cf       	rjmp	.-22     	; 0x4b2 <__DATA_REGION_LENGTH__+0xb2>
 4c8:	f5 01       	movw	r30, r10
 4ca:	37 fc       	sbrc	r3, 7
 4cc:	85 91       	lpm	r24, Z+
 4ce:	37 fe       	sbrs	r3, 7
 4d0:	81 91       	ld	r24, Z+
 4d2:	5f 01       	movw	r10, r30
 4d4:	b6 01       	movw	r22, r12
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	12 d1       	rcall	.+548    	; 0x6fe <fputc>
 4da:	21 10       	cpse	r2, r1
 4dc:	2a 94       	dec	r2
 4de:	21 e0       	ldi	r18, 0x01	; 1
 4e0:	82 1a       	sub	r8, r18
 4e2:	91 08       	sbc	r9, r1
 4e4:	81 14       	cp	r8, r1
 4e6:	91 04       	cpc	r9, r1
 4e8:	79 f7       	brne	.-34     	; 0x4c8 <__DATA_REGION_LENGTH__+0xc8>
 4ea:	e1 c0       	rjmp	.+450    	; 0x6ae <__stack+0x1af>
 4ec:	84 36       	cpi	r24, 0x64	; 100
 4ee:	11 f0       	breq	.+4      	; 0x4f4 <__DATA_REGION_LENGTH__+0xf4>
 4f0:	89 36       	cpi	r24, 0x69	; 105
 4f2:	39 f5       	brne	.+78     	; 0x542 <__stack+0x43>
 4f4:	f8 01       	movw	r30, r16
 4f6:	37 fe       	sbrs	r3, 7
 4f8:	07 c0       	rjmp	.+14     	; 0x508 <__stack+0x9>
 4fa:	60 81       	ld	r22, Z
 4fc:	71 81       	ldd	r23, Z+1	; 0x01
 4fe:	82 81       	ldd	r24, Z+2	; 0x02
 500:	93 81       	ldd	r25, Z+3	; 0x03
 502:	0c 5f       	subi	r16, 0xFC	; 252
 504:	1f 4f       	sbci	r17, 0xFF	; 255
 506:	08 c0       	rjmp	.+16     	; 0x518 <__stack+0x19>
 508:	60 81       	ld	r22, Z
 50a:	71 81       	ldd	r23, Z+1	; 0x01
 50c:	07 2e       	mov	r0, r23
 50e:	00 0c       	add	r0, r0
 510:	88 0b       	sbc	r24, r24
 512:	99 0b       	sbc	r25, r25
 514:	0e 5f       	subi	r16, 0xFE	; 254
 516:	1f 4f       	sbci	r17, 0xFF	; 255
 518:	f3 2d       	mov	r31, r3
 51a:	ff 76       	andi	r31, 0x6F	; 111
 51c:	3f 2e       	mov	r3, r31
 51e:	97 ff       	sbrs	r25, 7
 520:	09 c0       	rjmp	.+18     	; 0x534 <__stack+0x35>
 522:	90 95       	com	r25
 524:	80 95       	com	r24
 526:	70 95       	com	r23
 528:	61 95       	neg	r22
 52a:	7f 4f       	sbci	r23, 0xFF	; 255
 52c:	8f 4f       	sbci	r24, 0xFF	; 255
 52e:	9f 4f       	sbci	r25, 0xFF	; 255
 530:	f0 68       	ori	r31, 0x80	; 128
 532:	3f 2e       	mov	r3, r31
 534:	2a e0       	ldi	r18, 0x0A	; 10
 536:	30 e0       	ldi	r19, 0x00	; 0
 538:	a3 01       	movw	r20, r6
 53a:	1d d1       	rcall	.+570    	; 0x776 <__ultoa_invert>
 53c:	88 2e       	mov	r8, r24
 53e:	86 18       	sub	r8, r6
 540:	44 c0       	rjmp	.+136    	; 0x5ca <__stack+0xcb>
 542:	85 37       	cpi	r24, 0x75	; 117
 544:	31 f4       	brne	.+12     	; 0x552 <__stack+0x53>
 546:	23 2d       	mov	r18, r3
 548:	2f 7e       	andi	r18, 0xEF	; 239
 54a:	b2 2e       	mov	r11, r18
 54c:	2a e0       	ldi	r18, 0x0A	; 10
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	25 c0       	rjmp	.+74     	; 0x59c <__stack+0x9d>
 552:	93 2d       	mov	r25, r3
 554:	99 7f       	andi	r25, 0xF9	; 249
 556:	b9 2e       	mov	r11, r25
 558:	8f 36       	cpi	r24, 0x6F	; 111
 55a:	c1 f0       	breq	.+48     	; 0x58c <__stack+0x8d>
 55c:	18 f4       	brcc	.+6      	; 0x564 <__stack+0x65>
 55e:	88 35       	cpi	r24, 0x58	; 88
 560:	79 f0       	breq	.+30     	; 0x580 <__stack+0x81>
 562:	ae c0       	rjmp	.+348    	; 0x6c0 <__stack+0x1c1>
 564:	80 37       	cpi	r24, 0x70	; 112
 566:	19 f0       	breq	.+6      	; 0x56e <__stack+0x6f>
 568:	88 37       	cpi	r24, 0x78	; 120
 56a:	21 f0       	breq	.+8      	; 0x574 <__stack+0x75>
 56c:	a9 c0       	rjmp	.+338    	; 0x6c0 <__stack+0x1c1>
 56e:	e9 2f       	mov	r30, r25
 570:	e0 61       	ori	r30, 0x10	; 16
 572:	be 2e       	mov	r11, r30
 574:	b4 fe       	sbrs	r11, 4
 576:	0d c0       	rjmp	.+26     	; 0x592 <__stack+0x93>
 578:	fb 2d       	mov	r31, r11
 57a:	f4 60       	ori	r31, 0x04	; 4
 57c:	bf 2e       	mov	r11, r31
 57e:	09 c0       	rjmp	.+18     	; 0x592 <__stack+0x93>
 580:	34 fe       	sbrs	r3, 4
 582:	0a c0       	rjmp	.+20     	; 0x598 <__stack+0x99>
 584:	29 2f       	mov	r18, r25
 586:	26 60       	ori	r18, 0x06	; 6
 588:	b2 2e       	mov	r11, r18
 58a:	06 c0       	rjmp	.+12     	; 0x598 <__stack+0x99>
 58c:	28 e0       	ldi	r18, 0x08	; 8
 58e:	30 e0       	ldi	r19, 0x00	; 0
 590:	05 c0       	rjmp	.+10     	; 0x59c <__stack+0x9d>
 592:	20 e1       	ldi	r18, 0x10	; 16
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	02 c0       	rjmp	.+4      	; 0x59c <__stack+0x9d>
 598:	20 e1       	ldi	r18, 0x10	; 16
 59a:	32 e0       	ldi	r19, 0x02	; 2
 59c:	f8 01       	movw	r30, r16
 59e:	b7 fe       	sbrs	r11, 7
 5a0:	07 c0       	rjmp	.+14     	; 0x5b0 <__stack+0xb1>
 5a2:	60 81       	ld	r22, Z
 5a4:	71 81       	ldd	r23, Z+1	; 0x01
 5a6:	82 81       	ldd	r24, Z+2	; 0x02
 5a8:	93 81       	ldd	r25, Z+3	; 0x03
 5aa:	0c 5f       	subi	r16, 0xFC	; 252
 5ac:	1f 4f       	sbci	r17, 0xFF	; 255
 5ae:	06 c0       	rjmp	.+12     	; 0x5bc <__stack+0xbd>
 5b0:	60 81       	ld	r22, Z
 5b2:	71 81       	ldd	r23, Z+1	; 0x01
 5b4:	80 e0       	ldi	r24, 0x00	; 0
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	0e 5f       	subi	r16, 0xFE	; 254
 5ba:	1f 4f       	sbci	r17, 0xFF	; 255
 5bc:	a3 01       	movw	r20, r6
 5be:	db d0       	rcall	.+438    	; 0x776 <__ultoa_invert>
 5c0:	88 2e       	mov	r8, r24
 5c2:	86 18       	sub	r8, r6
 5c4:	fb 2d       	mov	r31, r11
 5c6:	ff 77       	andi	r31, 0x7F	; 127
 5c8:	3f 2e       	mov	r3, r31
 5ca:	36 fe       	sbrs	r3, 6
 5cc:	0d c0       	rjmp	.+26     	; 0x5e8 <__stack+0xe9>
 5ce:	23 2d       	mov	r18, r3
 5d0:	2e 7f       	andi	r18, 0xFE	; 254
 5d2:	a2 2e       	mov	r10, r18
 5d4:	89 14       	cp	r8, r9
 5d6:	58 f4       	brcc	.+22     	; 0x5ee <__stack+0xef>
 5d8:	34 fe       	sbrs	r3, 4
 5da:	0b c0       	rjmp	.+22     	; 0x5f2 <__stack+0xf3>
 5dc:	32 fc       	sbrc	r3, 2
 5de:	09 c0       	rjmp	.+18     	; 0x5f2 <__stack+0xf3>
 5e0:	83 2d       	mov	r24, r3
 5e2:	8e 7e       	andi	r24, 0xEE	; 238
 5e4:	a8 2e       	mov	r10, r24
 5e6:	05 c0       	rjmp	.+10     	; 0x5f2 <__stack+0xf3>
 5e8:	b8 2c       	mov	r11, r8
 5ea:	a3 2c       	mov	r10, r3
 5ec:	03 c0       	rjmp	.+6      	; 0x5f4 <__stack+0xf5>
 5ee:	b8 2c       	mov	r11, r8
 5f0:	01 c0       	rjmp	.+2      	; 0x5f4 <__stack+0xf5>
 5f2:	b9 2c       	mov	r11, r9
 5f4:	a4 fe       	sbrs	r10, 4
 5f6:	0f c0       	rjmp	.+30     	; 0x616 <__stack+0x117>
 5f8:	fe 01       	movw	r30, r28
 5fa:	e8 0d       	add	r30, r8
 5fc:	f1 1d       	adc	r31, r1
 5fe:	80 81       	ld	r24, Z
 600:	80 33       	cpi	r24, 0x30	; 48
 602:	21 f4       	brne	.+8      	; 0x60c <__stack+0x10d>
 604:	9a 2d       	mov	r25, r10
 606:	99 7e       	andi	r25, 0xE9	; 233
 608:	a9 2e       	mov	r10, r25
 60a:	09 c0       	rjmp	.+18     	; 0x61e <__stack+0x11f>
 60c:	a2 fe       	sbrs	r10, 2
 60e:	06 c0       	rjmp	.+12     	; 0x61c <__stack+0x11d>
 610:	b3 94       	inc	r11
 612:	b3 94       	inc	r11
 614:	04 c0       	rjmp	.+8      	; 0x61e <__stack+0x11f>
 616:	8a 2d       	mov	r24, r10
 618:	86 78       	andi	r24, 0x86	; 134
 61a:	09 f0       	breq	.+2      	; 0x61e <__stack+0x11f>
 61c:	b3 94       	inc	r11
 61e:	a3 fc       	sbrc	r10, 3
 620:	10 c0       	rjmp	.+32     	; 0x642 <__stack+0x143>
 622:	a0 fe       	sbrs	r10, 0
 624:	06 c0       	rjmp	.+12     	; 0x632 <__stack+0x133>
 626:	b2 14       	cp	r11, r2
 628:	80 f4       	brcc	.+32     	; 0x64a <__stack+0x14b>
 62a:	28 0c       	add	r2, r8
 62c:	92 2c       	mov	r9, r2
 62e:	9b 18       	sub	r9, r11
 630:	0d c0       	rjmp	.+26     	; 0x64c <__stack+0x14d>
 632:	b2 14       	cp	r11, r2
 634:	58 f4       	brcc	.+22     	; 0x64c <__stack+0x14d>
 636:	b6 01       	movw	r22, r12
 638:	80 e2       	ldi	r24, 0x20	; 32
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	60 d0       	rcall	.+192    	; 0x6fe <fputc>
 63e:	b3 94       	inc	r11
 640:	f8 cf       	rjmp	.-16     	; 0x632 <__stack+0x133>
 642:	b2 14       	cp	r11, r2
 644:	18 f4       	brcc	.+6      	; 0x64c <__stack+0x14d>
 646:	2b 18       	sub	r2, r11
 648:	02 c0       	rjmp	.+4      	; 0x64e <__stack+0x14f>
 64a:	98 2c       	mov	r9, r8
 64c:	21 2c       	mov	r2, r1
 64e:	a4 fe       	sbrs	r10, 4
 650:	0f c0       	rjmp	.+30     	; 0x670 <__stack+0x171>
 652:	b6 01       	movw	r22, r12
 654:	80 e3       	ldi	r24, 0x30	; 48
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	52 d0       	rcall	.+164    	; 0x6fe <fputc>
 65a:	a2 fe       	sbrs	r10, 2
 65c:	16 c0       	rjmp	.+44     	; 0x68a <__stack+0x18b>
 65e:	a1 fc       	sbrc	r10, 1
 660:	03 c0       	rjmp	.+6      	; 0x668 <__stack+0x169>
 662:	88 e7       	ldi	r24, 0x78	; 120
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	02 c0       	rjmp	.+4      	; 0x66c <__stack+0x16d>
 668:	88 e5       	ldi	r24, 0x58	; 88
 66a:	90 e0       	ldi	r25, 0x00	; 0
 66c:	b6 01       	movw	r22, r12
 66e:	0c c0       	rjmp	.+24     	; 0x688 <__stack+0x189>
 670:	8a 2d       	mov	r24, r10
 672:	86 78       	andi	r24, 0x86	; 134
 674:	51 f0       	breq	.+20     	; 0x68a <__stack+0x18b>
 676:	a1 fe       	sbrs	r10, 1
 678:	02 c0       	rjmp	.+4      	; 0x67e <__stack+0x17f>
 67a:	8b e2       	ldi	r24, 0x2B	; 43
 67c:	01 c0       	rjmp	.+2      	; 0x680 <__stack+0x181>
 67e:	80 e2       	ldi	r24, 0x20	; 32
 680:	a7 fc       	sbrc	r10, 7
 682:	8d e2       	ldi	r24, 0x2D	; 45
 684:	b6 01       	movw	r22, r12
 686:	90 e0       	ldi	r25, 0x00	; 0
 688:	3a d0       	rcall	.+116    	; 0x6fe <fputc>
 68a:	89 14       	cp	r8, r9
 68c:	30 f4       	brcc	.+12     	; 0x69a <__stack+0x19b>
 68e:	b6 01       	movw	r22, r12
 690:	80 e3       	ldi	r24, 0x30	; 48
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	34 d0       	rcall	.+104    	; 0x6fe <fputc>
 696:	9a 94       	dec	r9
 698:	f8 cf       	rjmp	.-16     	; 0x68a <__stack+0x18b>
 69a:	8a 94       	dec	r8
 69c:	f3 01       	movw	r30, r6
 69e:	e8 0d       	add	r30, r8
 6a0:	f1 1d       	adc	r31, r1
 6a2:	80 81       	ld	r24, Z
 6a4:	b6 01       	movw	r22, r12
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	2a d0       	rcall	.+84     	; 0x6fe <fputc>
 6aa:	81 10       	cpse	r8, r1
 6ac:	f6 cf       	rjmp	.-20     	; 0x69a <__stack+0x19b>
 6ae:	22 20       	and	r2, r2
 6b0:	09 f4       	brne	.+2      	; 0x6b4 <__stack+0x1b5>
 6b2:	4e ce       	rjmp	.-868    	; 0x350 <vfprintf+0x22>
 6b4:	b6 01       	movw	r22, r12
 6b6:	80 e2       	ldi	r24, 0x20	; 32
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	21 d0       	rcall	.+66     	; 0x6fe <fputc>
 6bc:	2a 94       	dec	r2
 6be:	f7 cf       	rjmp	.-18     	; 0x6ae <__stack+0x1af>
 6c0:	f6 01       	movw	r30, r12
 6c2:	86 81       	ldd	r24, Z+6	; 0x06
 6c4:	97 81       	ldd	r25, Z+7	; 0x07
 6c6:	02 c0       	rjmp	.+4      	; 0x6cc <__stack+0x1cd>
 6c8:	8f ef       	ldi	r24, 0xFF	; 255
 6ca:	9f ef       	ldi	r25, 0xFF	; 255
 6cc:	2b 96       	adiw	r28, 0x0b	; 11
 6ce:	e2 e1       	ldi	r30, 0x12	; 18
 6d0:	e2 c0       	rjmp	.+452    	; 0x896 <__epilogue_restores__>

000006d2 <strnlen_P>:
 6d2:	fc 01       	movw	r30, r24
 6d4:	05 90       	lpm	r0, Z+
 6d6:	61 50       	subi	r22, 0x01	; 1
 6d8:	70 40       	sbci	r23, 0x00	; 0
 6da:	01 10       	cpse	r0, r1
 6dc:	d8 f7       	brcc	.-10     	; 0x6d4 <strnlen_P+0x2>
 6de:	80 95       	com	r24
 6e0:	90 95       	com	r25
 6e2:	8e 0f       	add	r24, r30
 6e4:	9f 1f       	adc	r25, r31
 6e6:	08 95       	ret

000006e8 <strnlen>:
 6e8:	fc 01       	movw	r30, r24
 6ea:	61 50       	subi	r22, 0x01	; 1
 6ec:	70 40       	sbci	r23, 0x00	; 0
 6ee:	01 90       	ld	r0, Z+
 6f0:	01 10       	cpse	r0, r1
 6f2:	d8 f7       	brcc	.-10     	; 0x6ea <strnlen+0x2>
 6f4:	80 95       	com	r24
 6f6:	90 95       	com	r25
 6f8:	8e 0f       	add	r24, r30
 6fa:	9f 1f       	adc	r25, r31
 6fc:	08 95       	ret

000006fe <fputc>:
 6fe:	0f 93       	push	r16
 700:	1f 93       	push	r17
 702:	cf 93       	push	r28
 704:	df 93       	push	r29
 706:	fb 01       	movw	r30, r22
 708:	23 81       	ldd	r18, Z+3	; 0x03
 70a:	21 fd       	sbrc	r18, 1
 70c:	03 c0       	rjmp	.+6      	; 0x714 <fputc+0x16>
 70e:	8f ef       	ldi	r24, 0xFF	; 255
 710:	9f ef       	ldi	r25, 0xFF	; 255
 712:	2c c0       	rjmp	.+88     	; 0x76c <fputc+0x6e>
 714:	22 ff       	sbrs	r18, 2
 716:	16 c0       	rjmp	.+44     	; 0x744 <fputc+0x46>
 718:	46 81       	ldd	r20, Z+6	; 0x06
 71a:	57 81       	ldd	r21, Z+7	; 0x07
 71c:	24 81       	ldd	r18, Z+4	; 0x04
 71e:	35 81       	ldd	r19, Z+5	; 0x05
 720:	42 17       	cp	r20, r18
 722:	53 07       	cpc	r21, r19
 724:	44 f4       	brge	.+16     	; 0x736 <fputc+0x38>
 726:	a0 81       	ld	r26, Z
 728:	b1 81       	ldd	r27, Z+1	; 0x01
 72a:	9d 01       	movw	r18, r26
 72c:	2f 5f       	subi	r18, 0xFF	; 255
 72e:	3f 4f       	sbci	r19, 0xFF	; 255
 730:	31 83       	std	Z+1, r19	; 0x01
 732:	20 83       	st	Z, r18
 734:	8c 93       	st	X, r24
 736:	26 81       	ldd	r18, Z+6	; 0x06
 738:	37 81       	ldd	r19, Z+7	; 0x07
 73a:	2f 5f       	subi	r18, 0xFF	; 255
 73c:	3f 4f       	sbci	r19, 0xFF	; 255
 73e:	37 83       	std	Z+7, r19	; 0x07
 740:	26 83       	std	Z+6, r18	; 0x06
 742:	14 c0       	rjmp	.+40     	; 0x76c <fputc+0x6e>
 744:	8b 01       	movw	r16, r22
 746:	ec 01       	movw	r28, r24
 748:	fb 01       	movw	r30, r22
 74a:	00 84       	ldd	r0, Z+8	; 0x08
 74c:	f1 85       	ldd	r31, Z+9	; 0x09
 74e:	e0 2d       	mov	r30, r0
 750:	09 95       	icall
 752:	89 2b       	or	r24, r25
 754:	e1 f6       	brne	.-72     	; 0x70e <fputc+0x10>
 756:	d8 01       	movw	r26, r16
 758:	16 96       	adiw	r26, 0x06	; 6
 75a:	8d 91       	ld	r24, X+
 75c:	9c 91       	ld	r25, X
 75e:	17 97       	sbiw	r26, 0x07	; 7
 760:	01 96       	adiw	r24, 0x01	; 1
 762:	17 96       	adiw	r26, 0x07	; 7
 764:	9c 93       	st	X, r25
 766:	8e 93       	st	-X, r24
 768:	16 97       	sbiw	r26, 0x06	; 6
 76a:	ce 01       	movw	r24, r28
 76c:	df 91       	pop	r29
 76e:	cf 91       	pop	r28
 770:	1f 91       	pop	r17
 772:	0f 91       	pop	r16
 774:	08 95       	ret

00000776 <__ultoa_invert>:
 776:	fa 01       	movw	r30, r20
 778:	aa 27       	eor	r26, r26
 77a:	28 30       	cpi	r18, 0x08	; 8
 77c:	51 f1       	breq	.+84     	; 0x7d2 <__ultoa_invert+0x5c>
 77e:	20 31       	cpi	r18, 0x10	; 16
 780:	81 f1       	breq	.+96     	; 0x7e2 <__ultoa_invert+0x6c>
 782:	e8 94       	clt
 784:	6f 93       	push	r22
 786:	6e 7f       	andi	r22, 0xFE	; 254
 788:	6e 5f       	subi	r22, 0xFE	; 254
 78a:	7f 4f       	sbci	r23, 0xFF	; 255
 78c:	8f 4f       	sbci	r24, 0xFF	; 255
 78e:	9f 4f       	sbci	r25, 0xFF	; 255
 790:	af 4f       	sbci	r26, 0xFF	; 255
 792:	b1 e0       	ldi	r27, 0x01	; 1
 794:	3e d0       	rcall	.+124    	; 0x812 <__ultoa_invert+0x9c>
 796:	b4 e0       	ldi	r27, 0x04	; 4
 798:	3c d0       	rcall	.+120    	; 0x812 <__ultoa_invert+0x9c>
 79a:	67 0f       	add	r22, r23
 79c:	78 1f       	adc	r23, r24
 79e:	89 1f       	adc	r24, r25
 7a0:	9a 1f       	adc	r25, r26
 7a2:	a1 1d       	adc	r26, r1
 7a4:	68 0f       	add	r22, r24
 7a6:	79 1f       	adc	r23, r25
 7a8:	8a 1f       	adc	r24, r26
 7aa:	91 1d       	adc	r25, r1
 7ac:	a1 1d       	adc	r26, r1
 7ae:	6a 0f       	add	r22, r26
 7b0:	71 1d       	adc	r23, r1
 7b2:	81 1d       	adc	r24, r1
 7b4:	91 1d       	adc	r25, r1
 7b6:	a1 1d       	adc	r26, r1
 7b8:	20 d0       	rcall	.+64     	; 0x7fa <__ultoa_invert+0x84>
 7ba:	09 f4       	brne	.+2      	; 0x7be <__ultoa_invert+0x48>
 7bc:	68 94       	set
 7be:	3f 91       	pop	r19
 7c0:	2a e0       	ldi	r18, 0x0A	; 10
 7c2:	26 9f       	mul	r18, r22
 7c4:	11 24       	eor	r1, r1
 7c6:	30 19       	sub	r19, r0
 7c8:	30 5d       	subi	r19, 0xD0	; 208
 7ca:	31 93       	st	Z+, r19
 7cc:	de f6       	brtc	.-74     	; 0x784 <__ultoa_invert+0xe>
 7ce:	cf 01       	movw	r24, r30
 7d0:	08 95       	ret
 7d2:	46 2f       	mov	r20, r22
 7d4:	47 70       	andi	r20, 0x07	; 7
 7d6:	40 5d       	subi	r20, 0xD0	; 208
 7d8:	41 93       	st	Z+, r20
 7da:	b3 e0       	ldi	r27, 0x03	; 3
 7dc:	0f d0       	rcall	.+30     	; 0x7fc <__ultoa_invert+0x86>
 7de:	c9 f7       	brne	.-14     	; 0x7d2 <__ultoa_invert+0x5c>
 7e0:	f6 cf       	rjmp	.-20     	; 0x7ce <__ultoa_invert+0x58>
 7e2:	46 2f       	mov	r20, r22
 7e4:	4f 70       	andi	r20, 0x0F	; 15
 7e6:	40 5d       	subi	r20, 0xD0	; 208
 7e8:	4a 33       	cpi	r20, 0x3A	; 58
 7ea:	18 f0       	brcs	.+6      	; 0x7f2 <__ultoa_invert+0x7c>
 7ec:	49 5d       	subi	r20, 0xD9	; 217
 7ee:	31 fd       	sbrc	r19, 1
 7f0:	40 52       	subi	r20, 0x20	; 32
 7f2:	41 93       	st	Z+, r20
 7f4:	02 d0       	rcall	.+4      	; 0x7fa <__ultoa_invert+0x84>
 7f6:	a9 f7       	brne	.-22     	; 0x7e2 <__ultoa_invert+0x6c>
 7f8:	ea cf       	rjmp	.-44     	; 0x7ce <__ultoa_invert+0x58>
 7fa:	b4 e0       	ldi	r27, 0x04	; 4
 7fc:	a6 95       	lsr	r26
 7fe:	97 95       	ror	r25
 800:	87 95       	ror	r24
 802:	77 95       	ror	r23
 804:	67 95       	ror	r22
 806:	ba 95       	dec	r27
 808:	c9 f7       	brne	.-14     	; 0x7fc <__ultoa_invert+0x86>
 80a:	00 97       	sbiw	r24, 0x00	; 0
 80c:	61 05       	cpc	r22, r1
 80e:	71 05       	cpc	r23, r1
 810:	08 95       	ret
 812:	9b 01       	movw	r18, r22
 814:	ac 01       	movw	r20, r24
 816:	0a 2e       	mov	r0, r26
 818:	06 94       	lsr	r0
 81a:	57 95       	ror	r21
 81c:	47 95       	ror	r20
 81e:	37 95       	ror	r19
 820:	27 95       	ror	r18
 822:	ba 95       	dec	r27
 824:	c9 f7       	brne	.-14     	; 0x818 <__ultoa_invert+0xa2>
 826:	62 0f       	add	r22, r18
 828:	73 1f       	adc	r23, r19
 82a:	84 1f       	adc	r24, r20
 82c:	95 1f       	adc	r25, r21
 82e:	a0 1d       	adc	r26, r0
 830:	08 95       	ret

00000832 <eeprom_read_byte>:
 832:	f9 99       	sbic	0x1f, 1	; 31
 834:	fe cf       	rjmp	.-4      	; 0x832 <eeprom_read_byte>
 836:	92 bd       	out	0x22, r25	; 34
 838:	81 bd       	out	0x21, r24	; 33
 83a:	f8 9a       	sbi	0x1f, 0	; 31
 83c:	99 27       	eor	r25, r25
 83e:	80 b5       	in	r24, 0x20	; 32
 840:	08 95       	ret

00000842 <eeprom_write_byte>:
 842:	26 2f       	mov	r18, r22

00000844 <eeprom_write_r18>:
 844:	f9 99       	sbic	0x1f, 1	; 31
 846:	fe cf       	rjmp	.-4      	; 0x844 <eeprom_write_r18>
 848:	1f ba       	out	0x1f, r1	; 31
 84a:	92 bd       	out	0x22, r25	; 34
 84c:	81 bd       	out	0x21, r24	; 33
 84e:	20 bd       	out	0x20, r18	; 32
 850:	0f b6       	in	r0, 0x3f	; 63
 852:	f8 94       	cli
 854:	fa 9a       	sbi	0x1f, 2	; 31
 856:	f9 9a       	sbi	0x1f, 1	; 31
 858:	0f be       	out	0x3f, r0	; 63
 85a:	01 96       	adiw	r24, 0x01	; 1
 85c:	08 95       	ret

0000085e <__prologue_saves__>:
 85e:	2f 92       	push	r2
 860:	3f 92       	push	r3
 862:	4f 92       	push	r4
 864:	5f 92       	push	r5
 866:	6f 92       	push	r6
 868:	7f 92       	push	r7
 86a:	8f 92       	push	r8
 86c:	9f 92       	push	r9
 86e:	af 92       	push	r10
 870:	bf 92       	push	r11
 872:	cf 92       	push	r12
 874:	df 92       	push	r13
 876:	ef 92       	push	r14
 878:	ff 92       	push	r15
 87a:	0f 93       	push	r16
 87c:	1f 93       	push	r17
 87e:	cf 93       	push	r28
 880:	df 93       	push	r29
 882:	cd b7       	in	r28, 0x3d	; 61
 884:	de b7       	in	r29, 0x3e	; 62
 886:	ca 1b       	sub	r28, r26
 888:	db 0b       	sbc	r29, r27
 88a:	0f b6       	in	r0, 0x3f	; 63
 88c:	f8 94       	cli
 88e:	de bf       	out	0x3e, r29	; 62
 890:	0f be       	out	0x3f, r0	; 63
 892:	cd bf       	out	0x3d, r28	; 61
 894:	09 94       	ijmp

00000896 <__epilogue_restores__>:
 896:	2a 88       	ldd	r2, Y+18	; 0x12
 898:	39 88       	ldd	r3, Y+17	; 0x11
 89a:	48 88       	ldd	r4, Y+16	; 0x10
 89c:	5f 84       	ldd	r5, Y+15	; 0x0f
 89e:	6e 84       	ldd	r6, Y+14	; 0x0e
 8a0:	7d 84       	ldd	r7, Y+13	; 0x0d
 8a2:	8c 84       	ldd	r8, Y+12	; 0x0c
 8a4:	9b 84       	ldd	r9, Y+11	; 0x0b
 8a6:	aa 84       	ldd	r10, Y+10	; 0x0a
 8a8:	b9 84       	ldd	r11, Y+9	; 0x09
 8aa:	c8 84       	ldd	r12, Y+8	; 0x08
 8ac:	df 80       	ldd	r13, Y+7	; 0x07
 8ae:	ee 80       	ldd	r14, Y+6	; 0x06
 8b0:	fd 80       	ldd	r15, Y+5	; 0x05
 8b2:	0c 81       	ldd	r16, Y+4	; 0x04
 8b4:	1b 81       	ldd	r17, Y+3	; 0x03
 8b6:	aa 81       	ldd	r26, Y+2	; 0x02
 8b8:	b9 81       	ldd	r27, Y+1	; 0x01
 8ba:	ce 0f       	add	r28, r30
 8bc:	d1 1d       	adc	r29, r1
 8be:	0f b6       	in	r0, 0x3f	; 63
 8c0:	f8 94       	cli
 8c2:	de bf       	out	0x3e, r29	; 62
 8c4:	0f be       	out	0x3f, r0	; 63
 8c6:	cd bf       	out	0x3d, r28	; 61
 8c8:	ed 01       	movw	r28, r26
 8ca:	08 95       	ret

000008cc <_exit>:
 8cc:	f8 94       	cli

000008ce <__stop_program>:
 8ce:	ff cf       	rjmp	.-2      	; 0x8ce <__stop_program>
