
Timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000112  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000be  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000112  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000144  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000180  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006a7  00000000  00000000  000001a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000061b  00000000  00000000  0000084f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000203  00000000  00000000  00000e6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001070  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000034f  00000000  00000000  000010a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000018  00000000  00000000  000013f3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 5a 00 	call	0xb4	; 0xb4 <main>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <Init_Timer>:
#define F_CPU 16000000UL
#include <avr/io.h>

void Init_Timer(void)
{
	TCCR1A |= ((1<<COM1A1) | (1<<WGM11));
  80:	e0 e8       	ldi	r30, 0x80	; 128
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	80 81       	ld	r24, Z
  86:	82 68       	ori	r24, 0x82	; 130
  88:	80 83       	st	Z, r24
	TCCR1B |= ((1<<WGM13) | (1<<WGM12) | (1<<CS10));
  8a:	e1 e8       	ldi	r30, 0x81	; 129
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	80 81       	ld	r24, Z
  90:	89 61       	ori	r24, 0x19	; 25
  92:	80 83       	st	Z, r24
	
	ICR1 = 380;
  94:	8c e7       	ldi	r24, 0x7C	; 124
  96:	91 e0       	ldi	r25, 0x01	; 1
  98:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
  9c:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
	OCR1A = 159;
  a0:	8f e9       	ldi	r24, 0x9F	; 159
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  a8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	
	DDRB |= (1<<PINB1);
  ac:	84 b1       	in	r24, 0x04	; 4
  ae:	82 60       	ori	r24, 0x02	; 2
  b0:	84 b9       	out	0x04, r24	; 4
  b2:	08 95       	ret

000000b4 <main>:
}

int main(void)
{
    Init_Timer();
  b4:	0e 94 40 00 	call	0x80	; 0x80 <Init_Timer>
  b8:	ff cf       	rjmp	.-2      	; 0xb8 <main+0x4>

000000ba <_exit>:
  ba:	f8 94       	cli

000000bc <__stop_program>:
  bc:	ff cf       	rjmp	.-2      	; 0xbc <__stop_program>
