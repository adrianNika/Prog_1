
SD_TEST_LIB.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000196  00800100  00003570  00003604  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003570  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000446  00800296  00800296  0000379a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000379a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000037f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a8  00000000  00000000  00003834  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000425e  00000000  00000000  00003adc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d52  00000000  00000000  00007d3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002a7b  00000000  00000000  00008a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000cc0  00000000  00000000  0000b508  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000013b3  00000000  00000000  0000c1c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004a8e  00000000  00000000  0000d57b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000370  00000000  00000000  00012009  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 14 01 	jmp	0x228	; 0x228 <__vector_18>
      4c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__vector_19>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e0 e7       	ldi	r30, 0x70	; 112
      7c:	f5 e3       	ldi	r31, 0x35	; 53
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a6 39       	cpi	r26, 0x96	; 150
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	26 e0       	ldi	r18, 0x06	; 6
      8c:	a6 e9       	ldi	r26, 0x96	; 150
      8e:	b2 e0       	ldi	r27, 0x02	; 2
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ac 3d       	cpi	r26, 0xDC	; 220
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <main>
      9e:	0c 94 b6 1a 	jmp	0x356c	; 0x356c <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <UART_Init>:
	TX_Head = 0;
	TX_Tail = 0; 
	
	// returning ErrorUart (no-cost operation) 
	return ErrorUart;
}
      a6:	82 e0       	ldi	r24, 0x02	; 2
      a8:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
      ac:	88 eb       	ldi	r24, 0xB8	; 184
      ae:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
      b2:	86 e0       	ldi	r24, 0x06	; 6
      b4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
      b8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
      bc:	8f ec       	ldi	r24, 0xCF	; 207
      be:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
      c2:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <RX_Tail>
      c6:	10 92 9b 02 	sts	0x029B, r1	; 0x80029b <RX_Head>
      ca:	10 92 98 02 	sts	0x0298, r1	; 0x800298 <TX_Tail>
      ce:	10 92 99 02 	sts	0x0299, r1	; 0x800299 <TX_Head>
      d2:	08 95       	ret

000000d4 <__vector_19>:
      d4:	1f 92       	push	r1
      d6:	0f 92       	push	r0
      d8:	0f b6       	in	r0, 0x3f	; 63
      da:	0f 92       	push	r0
      dc:	11 24       	eor	r1, r1
      de:	2f 93       	push	r18
      e0:	8f 93       	push	r24
      e2:	9f 93       	push	r25
      e4:	ef 93       	push	r30
      e6:	ff 93       	push	r31
      e8:	90 91 98 02 	lds	r25, 0x0298	; 0x800298 <TX_Tail>
      ec:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <TX_Head>
      f0:	98 17       	cp	r25, r24
      f2:	d9 f0       	breq	.+54     	; 0x12a <__vector_19+0x56>
      f4:	90 91 98 02 	lds	r25, 0x0298	; 0x800298 <TX_Tail>
      f8:	9f 5f       	subi	r25, 0xFF	; 255
      fa:	89 2f       	mov	r24, r25
      fc:	86 95       	lsr	r24
      fe:	2b ee       	ldi	r18, 0xEB	; 235
     100:	82 9f       	mul	r24, r18
     102:	81 2d       	mov	r24, r1
     104:	11 24       	eor	r1, r1
     106:	82 95       	swap	r24
     108:	86 95       	lsr	r24
     10a:	87 70       	andi	r24, 0x07	; 7
     10c:	26 e4       	ldi	r18, 0x46	; 70
     10e:	82 9f       	mul	r24, r18
     110:	90 19       	sub	r25, r0
     112:	11 24       	eor	r1, r1
     114:	90 93 98 02 	sts	0x0298, r25	; 0x800298 <TX_Tail>
     118:	e0 91 98 02 	lds	r30, 0x0298	; 0x800298 <TX_Tail>
     11c:	f0 e0       	ldi	r31, 0x00	; 0
     11e:	e4 56       	subi	r30, 0x64	; 100
     120:	fd 4f       	sbci	r31, 0xFD	; 253
     122:	80 81       	ld	r24, Z
     124:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     128:	05 c0       	rjmp	.+10     	; 0x134 <__vector_19+0x60>
     12a:	e1 ec       	ldi	r30, 0xC1	; 193
     12c:	f0 e0       	ldi	r31, 0x00	; 0
     12e:	80 81       	ld	r24, Z
     130:	8f 7d       	andi	r24, 0xDF	; 223
     132:	80 83       	st	Z, r24
     134:	ff 91       	pop	r31
     136:	ef 91       	pop	r30
     138:	9f 91       	pop	r25
     13a:	8f 91       	pop	r24
     13c:	2f 91       	pop	r18
     13e:	0f 90       	pop	r0
     140:	0f be       	out	0x3f, r0	; 63
     142:	0f 90       	pop	r0
     144:	1f 90       	pop	r1
     146:	18 95       	reti

00000148 <UART_PutChar>:
     148:	20 91 99 02 	lds	r18, 0x0299	; 0x800299 <TX_Head>
     14c:	2f 5f       	subi	r18, 0xFF	; 255
     14e:	92 2f       	mov	r25, r18
     150:	96 95       	lsr	r25
     152:	3b ee       	ldi	r19, 0xEB	; 235
     154:	93 9f       	mul	r25, r19
     156:	91 2d       	mov	r25, r1
     158:	11 24       	eor	r1, r1
     15a:	92 95       	swap	r25
     15c:	96 95       	lsr	r25
     15e:	97 70       	andi	r25, 0x07	; 7
     160:	36 e4       	ldi	r19, 0x46	; 70
     162:	93 9f       	mul	r25, r19
     164:	20 19       	sub	r18, r0
     166:	11 24       	eor	r1, r1
     168:	92 2f       	mov	r25, r18
     16a:	20 91 98 02 	lds	r18, 0x0298	; 0x800298 <TX_Tail>
     16e:	92 13       	cpse	r25, r18
     170:	06 c0       	rjmp	.+12     	; 0x17e <UART_PutChar+0x36>
     172:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <ErrorUart>
     176:	84 60       	ori	r24, 0x04	; 4
     178:	80 93 97 02 	sts	0x0297, r24	; 0x800297 <ErrorUart>
     17c:	08 95       	ret
     17e:	e9 2f       	mov	r30, r25
     180:	f0 e0       	ldi	r31, 0x00	; 0
     182:	e4 56       	subi	r30, 0x64	; 100
     184:	fd 4f       	sbci	r31, 0xFD	; 253
     186:	80 83       	st	Z, r24
     188:	90 93 99 02 	sts	0x0299, r25	; 0x800299 <TX_Head>
     18c:	e1 ec       	ldi	r30, 0xC1	; 193
     18e:	f0 e0       	ldi	r31, 0x00	; 0
     190:	80 81       	ld	r24, Z
     192:	80 62       	ori	r24, 0x20	; 32
     194:	80 83       	st	Z, r24
     196:	08 95       	ret

00000198 <Uart_TxCountDataWaiting>:
     198:	90 91 99 02 	lds	r25, 0x0299	; 0x800299 <TX_Head>
     19c:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <TX_Tail>
     1a0:	89 17       	cp	r24, r25
     1a2:	30 f4       	brcc	.+12     	; 0x1b0 <Uart_TxCountDataWaiting+0x18>
     1a4:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <TX_Head>
     1a8:	90 91 98 02 	lds	r25, 0x0298	; 0x800298 <TX_Tail>
     1ac:	89 1b       	sub	r24, r25
     1ae:	01 c0       	rjmp	.+2      	; 0x1b2 <Uart_TxCountDataWaiting+0x1a>
     1b0:	80 e0       	ldi	r24, 0x00	; 0
     1b2:	20 91 99 02 	lds	r18, 0x0299	; 0x800299 <TX_Head>
     1b6:	90 91 98 02 	lds	r25, 0x0298	; 0x800298 <TX_Tail>
     1ba:	29 17       	cp	r18, r25
     1bc:	30 f4       	brcc	.+12     	; 0x1ca <Uart_TxCountDataWaiting+0x32>
     1be:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <TX_Head>
     1c2:	90 91 98 02 	lds	r25, 0x0298	; 0x800298 <TX_Tail>
     1c6:	89 1b       	sub	r24, r25
     1c8:	8a 5b       	subi	r24, 0xBA	; 186
     1ca:	08 95       	ret

000001cc <Uart_PutString>:
     1cc:	0f 93       	push	r16
     1ce:	1f 93       	push	r17
     1d0:	cf 93       	push	r28
     1d2:	df 93       	push	r29
     1d4:	8c 01       	movw	r16, r24
     1d6:	0e 94 cc 00 	call	0x198	; 0x198 <Uart_TxCountDataWaiting>
     1da:	96 e4       	ldi	r25, 0x46	; 70
     1dc:	98 1b       	sub	r25, r24
     1de:	f8 01       	movw	r30, r16
     1e0:	01 90       	ld	r0, Z+
     1e2:	00 20       	and	r0, r0
     1e4:	e9 f7       	brne	.-6      	; 0x1e0 <Uart_PutString+0x14>
     1e6:	31 97       	sbiw	r30, 0x01	; 1
     1e8:	de 2f       	mov	r29, r30
     1ea:	d0 1b       	sub	r29, r16
     1ec:	d9 17       	cp	r29, r25
     1ee:	48 f0       	brcs	.+18     	; 0x202 <Uart_PutString+0x36>
     1f0:	0c c0       	rjmp	.+24     	; 0x20a <Uart_PutString+0x3e>
     1f2:	f8 01       	movw	r30, r16
     1f4:	ec 0f       	add	r30, r28
     1f6:	f1 1d       	adc	r31, r1
     1f8:	80 81       	ld	r24, Z
     1fa:	0e 94 a4 00 	call	0x148	; 0x148 <UART_PutChar>
     1fe:	cf 5f       	subi	r28, 0xFF	; 255
     200:	01 c0       	rjmp	.+2      	; 0x204 <Uart_PutString+0x38>
     202:	c0 e0       	ldi	r28, 0x00	; 0
     204:	cd 17       	cp	r28, r29
     206:	a8 f3       	brcs	.-22     	; 0x1f2 <Uart_PutString+0x26>
     208:	05 c0       	rjmp	.+10     	; 0x214 <Uart_PutString+0x48>
     20a:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <ErrorUart>
     20e:	84 60       	ori	r24, 0x04	; 4
     210:	80 93 97 02 	sts	0x0297, r24	; 0x800297 <ErrorUart>
     214:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <ErrorUart>
     218:	df 91       	pop	r29
     21a:	cf 91       	pop	r28
     21c:	1f 91       	pop	r17
     21e:	0f 91       	pop	r16
     220:	08 95       	ret

00000222 <Uart_SetELOEndCharDetected>:
 * @param  value Value of flag to be set
 * @return void
 */
void Uart_SetELOEndCharDetected(uint8_t value)
{
	EloEndCharDetected = value;
     222:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <__data_end>
     226:	08 95       	ret

00000228 <__vector_18>:
 * When interrupt occures, the new data has to be stored in circular buffer.
 * Head pointer increases, only if buffer is not full.
 *
*/
ISR(USART_RX_vect)
{
     228:	1f 92       	push	r1
     22a:	0f 92       	push	r0
     22c:	0f b6       	in	r0, 0x3f	; 63
     22e:	0f 92       	push	r0
     230:	11 24       	eor	r1, r1
     232:	2f 93       	push	r18
     234:	3f 93       	push	r19
     236:	4f 93       	push	r20
     238:	5f 93       	push	r21
     23a:	6f 93       	push	r22
     23c:	7f 93       	push	r23
     23e:	8f 93       	push	r24
     240:	9f 93       	push	r25
     242:	af 93       	push	r26
     244:	bf 93       	push	r27
     246:	ef 93       	push	r30
     248:	ff 93       	push	r31
	char data;			// Temporary (to empty UDR)
	uint8_t tmpRXHead;	// Temporary (for computations) 
	
	data = UDR_REG;		// empty UDR in temporary variable 
     24a:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
						// this permits to receive another data (avoid loss)
	
	tmpRXHead = RX_Head + 1;			// Increase position of tmp head 
     24e:	90 91 9b 02 	lds	r25, 0x029B	; 0x80029b <RX_Head>
     252:	9f 5f       	subi	r25, 0xFF	; 255
	tmpRXHead %= UART_RX_BUFFER_SIZE;	// cycling buffer position if max reached
     254:	89 2f       	mov	r24, r25
     256:	86 95       	lsr	r24
     258:	eb ee       	ldi	r30, 0xEB	; 235
     25a:	8e 9f       	mul	r24, r30
     25c:	e1 2d       	mov	r30, r1
     25e:	11 24       	eor	r1, r1
     260:	e2 95       	swap	r30
     262:	e6 95       	lsr	r30
     264:	e7 70       	andi	r30, 0x07	; 7
     266:	86 e4       	ldi	r24, 0x46	; 70
     268:	e8 9f       	mul	r30, r24
     26a:	90 19       	sub	r25, r0
     26c:	11 24       	eor	r1, r1
	
	// Is RX_Buffer full ? 
	if (tmpRXHead == RX_Tail)
     26e:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <RX_Tail>
     272:	98 13       	cpse	r25, r24
     274:	06 c0       	rjmp	.+12     	; 0x282 <__vector_18+0x5a>
	{
		// --> ERROR : RX Buffer is full 
		ErrorUart |= UART_ERROR_RX_BUFFER_FULL; // Buffer is full, handle exeption ! 
     276:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <ErrorUart>
     27a:	82 60       	ori	r24, 0x02	; 2
     27c:	80 93 97 02 	sts	0x0297, r24	; 0x800297 <ErrorUart>
     280:	0c c0       	rjmp	.+24     	; 0x29a <__vector_18+0x72>
	}
	else
	{
		RX_Head = tmpRXHead ;			// Save new pointer position
     282:	90 93 9b 02 	sts	0x029B, r25	; 0x80029b <RX_Head>
		RX_Buffer[tmpRXHead] = data;	// Save data in buffer
     286:	e9 2f       	mov	r30, r25
     288:	f0 e0       	ldi	r31, 0x00	; 0
     28a:	ee 51       	subi	r30, 0x1E	; 30
     28c:	fd 4f       	sbci	r31, 0xFD	; 253
     28e:	20 83       	st	Z, r18
		
		// ELO Protocole handling
		if (data == '*')
     290:	2a 32       	cpi	r18, 0x2A	; 42
     292:	19 f4       	brne	.+6      	; 0x29a <__vector_18+0x72>
		{
			Uart_SetELOEndCharDetected(0x01);
     294:	81 e0       	ldi	r24, 0x01	; 1
     296:	0e 94 11 01 	call	0x222	; 0x222 <Uart_SetELOEndCharDetected>
		}
	}
}
     29a:	ff 91       	pop	r31
     29c:	ef 91       	pop	r30
     29e:	bf 91       	pop	r27
     2a0:	af 91       	pop	r26
     2a2:	9f 91       	pop	r25
     2a4:	8f 91       	pop	r24
     2a6:	7f 91       	pop	r23
     2a8:	6f 91       	pop	r22
     2aa:	5f 91       	pop	r21
     2ac:	4f 91       	pop	r20
     2ae:	3f 91       	pop	r19
     2b0:	2f 91       	pop	r18
     2b2:	0f 90       	pop	r0
     2b4:	0f be       	out	0x3f, r0	; 63
     2b6:	0f 90       	pop	r0
     2b8:	1f 90       	pop	r1
     2ba:	18 95       	reti

000002bc <SPI_Init>:
/*______________________________________________________________________________________________
	Return the file pointer
_______________________________________________________________________________________________*/
FSIZE_t FAT_getFptr(FILE_SD* fp){
	return fp->fptr;
}
     2bc:	84 b1       	in	r24, 0x04	; 4
     2be:	8c 62       	ori	r24, 0x2C	; 44
     2c0:	84 b9       	out	0x04, r24	; 4
     2c2:	84 b1       	in	r24, 0x04	; 4
     2c4:	84 60       	ori	r24, 0x04	; 4
     2c6:	84 b9       	out	0x04, r24	; 4
     2c8:	80 e5       	ldi	r24, 0x50	; 80
     2ca:	8c bd       	out	0x2c, r24	; 44
     2cc:	81 e0       	ldi	r24, 0x01	; 1
     2ce:	8d bd       	out	0x2d, r24	; 45
     2d0:	8c b5       	in	r24, 0x2c	; 44
     2d2:	82 60       	ori	r24, 0x02	; 2
     2d4:	8c bd       	out	0x2c, r24	; 44
     2d6:	08 95       	ret

000002d8 <SPI_SendByte>:
     2d8:	8e bd       	out	0x2e, r24	; 46
     2da:	0d b4       	in	r0, 0x2d	; 45
     2dc:	07 fe       	sbrs	r0, 7
     2de:	fd cf       	rjmp	.-6      	; 0x2da <SPI_SendByte+0x2>
     2e0:	08 95       	ret

000002e2 <sd_assert_cs>:
     2e2:	8f ef       	ldi	r24, 0xFF	; 255
     2e4:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <SPI_SendByte>
     2e8:	85 b1       	in	r24, 0x05	; 5
     2ea:	8b 7f       	andi	r24, 0xFB	; 251
     2ec:	85 b9       	out	0x05, r24	; 5
     2ee:	8f ef       	ldi	r24, 0xFF	; 255
     2f0:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <SPI_SendByte>
     2f4:	08 95       	ret

000002f6 <sd_command>:
     2f6:	ff 92       	push	r15
     2f8:	0f 93       	push	r16
     2fa:	1f 93       	push	r17
     2fc:	cf 93       	push	r28
     2fe:	df 93       	push	r29
     300:	d4 2f       	mov	r29, r20
     302:	15 2f       	mov	r17, r21
     304:	06 2f       	mov	r16, r22
     306:	f7 2e       	mov	r15, r23
     308:	c2 2f       	mov	r28, r18
     30a:	80 64       	ori	r24, 0x40	; 64
     30c:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <SPI_SendByte>
     310:	8f 2d       	mov	r24, r15
     312:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <SPI_SendByte>
     316:	80 2f       	mov	r24, r16
     318:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <SPI_SendByte>
     31c:	81 2f       	mov	r24, r17
     31e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <SPI_SendByte>
     322:	8d 2f       	mov	r24, r29
     324:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <SPI_SendByte>
     328:	8c 2f       	mov	r24, r28
     32a:	81 60       	ori	r24, 0x01	; 1
     32c:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <SPI_SendByte>
     330:	df 91       	pop	r29
     332:	cf 91       	pop	r28
     334:	1f 91       	pop	r17
     336:	0f 91       	pop	r16
     338:	ff 90       	pop	r15
     33a:	08 95       	ret

0000033c <sd_deassert_cs>:
     33c:	8f ef       	ldi	r24, 0xFF	; 255
     33e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <SPI_SendByte>
     342:	85 b1       	in	r24, 0x05	; 5
     344:	84 60       	ori	r24, 0x04	; 4
     346:	85 b9       	out	0x05, r24	; 5
     348:	8f ef       	ldi	r24, 0xFF	; 255
     34a:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <SPI_SendByte>
     34e:	08 95       	ret

00000350 <SPI_ReceiveByte>:
     350:	8f ef       	ldi	r24, 0xFF	; 255
     352:	8e bd       	out	0x2e, r24	; 46
     354:	0d b4       	in	r0, 0x2d	; 45
     356:	07 fe       	sbrs	r0, 7
     358:	fd cf       	rjmp	.-6      	; 0x354 <SPI_ReceiveByte+0x4>
     35a:	8e b5       	in	r24, 0x2e	; 46
     35c:	08 95       	ret

0000035e <_FAT_fillBufferArray>:
     35e:	20 e0       	ldi	r18, 0x00	; 0
     360:	30 e0       	ldi	r19, 0x00	; 0
     362:	08 c0       	rjmp	.+16     	; 0x374 <_FAT_fillBufferArray+0x16>
     364:	f9 01       	movw	r30, r18
     366:	e8 0f       	add	r30, r24
     368:	f9 1f       	adc	r31, r25
     36a:	e5 52       	subi	r30, 0x25	; 37
     36c:	fb 4f       	sbci	r31, 0xFB	; 251
     36e:	40 83       	st	Z, r20
     370:	2f 5f       	subi	r18, 0xFF	; 255
     372:	3f 4f       	sbci	r19, 0xFF	; 255
     374:	26 17       	cp	r18, r22
     376:	37 07       	cpc	r19, r23
     378:	a8 f3       	brcs	.-22     	; 0x364 <_FAT_fillBufferArray+0x6>
     37a:	08 95       	ret

0000037c <_FAT_getSFN>:
     37c:	da 01       	movw	r26, r20
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	23 c0       	rjmp	.+70     	; 0x3ca <_FAT_getSFN+0x4e>
     384:	e9 2f       	mov	r30, r25
     386:	f0 e0       	ldi	r31, 0x00	; 0
     388:	20 e2       	ldi	r18, 0x20	; 32
     38a:	82 9f       	mul	r24, r18
     38c:	e0 0d       	add	r30, r0
     38e:	f1 1d       	adc	r31, r1
     390:	11 24       	eor	r1, r1
     392:	e5 52       	subi	r30, 0x25	; 37
     394:	fb 4f       	sbci	r31, 0xFB	; 251
     396:	20 81       	ld	r18, Z
     398:	5f eb       	ldi	r21, 0xBF	; 191
     39a:	52 0f       	add	r21, r18
     39c:	5a 31       	cpi	r21, 0x1A	; 26
     39e:	08 f4       	brcc	.+2      	; 0x3a2 <_FAT_getSFN+0x26>
     3a0:	20 5e       	subi	r18, 0xE0	; 224
     3a2:	98 30       	cpi	r25, 0x08	; 8
     3a4:	41 f4       	brne	.+16     	; 0x3b6 <_FAT_getSFN+0x3a>
     3a6:	61 30       	cpi	r22, 0x01	; 1
     3a8:	31 f0       	breq	.+12     	; 0x3b6 <_FAT_getSFN+0x3a>
     3aa:	fd 01       	movw	r30, r26
     3ac:	e3 0f       	add	r30, r19
     3ae:	f1 1d       	adc	r31, r1
     3b0:	4e e2       	ldi	r20, 0x2E	; 46
     3b2:	40 83       	st	Z, r20
     3b4:	3f 5f       	subi	r19, 0xFF	; 255
     3b6:	20 32       	cpi	r18, 0x20	; 32
     3b8:	11 f4       	brne	.+4      	; 0x3be <_FAT_getSFN+0x42>
     3ba:	61 30       	cpi	r22, 0x01	; 1
     3bc:	29 f4       	brne	.+10     	; 0x3c8 <_FAT_getSFN+0x4c>
     3be:	fd 01       	movw	r30, r26
     3c0:	e3 0f       	add	r30, r19
     3c2:	f1 1d       	adc	r31, r1
     3c4:	20 83       	st	Z, r18
     3c6:	3f 5f       	subi	r19, 0xFF	; 255
     3c8:	9f 5f       	subi	r25, 0xFF	; 255
     3ca:	9b 30       	cpi	r25, 0x0B	; 11
     3cc:	d8 f2       	brcs	.-74     	; 0x384 <_FAT_getSFN+0x8>
     3ce:	83 2f       	mov	r24, r19
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	fc 01       	movw	r30, r24
     3d4:	31 97       	sbiw	r30, 0x01	; 1
     3d6:	ea 0f       	add	r30, r26
     3d8:	fb 1f       	adc	r31, r27
     3da:	20 81       	ld	r18, Z
     3dc:	2e 32       	cpi	r18, 0x2E	; 46
     3de:	09 f4       	brne	.+2      	; 0x3e2 <_FAT_getSFN+0x66>
     3e0:	10 82       	st	Z, r1
     3e2:	fd 01       	movw	r30, r26
     3e4:	e8 0f       	add	r30, r24
     3e6:	f9 1f       	adc	r31, r25
     3e8:	10 82       	st	Z, r1
     3ea:	08 95       	ret

000003ec <_FAT_clusterToSector>:
     3ec:	0f 93       	push	r16
     3ee:	1f 93       	push	r17
     3f0:	9b 01       	movw	r18, r22
     3f2:	ac 01       	movw	r20, r24
     3f4:	22 50       	subi	r18, 0x02	; 2
     3f6:	31 09       	sbc	r19, r1
     3f8:	41 09       	sbc	r20, r1
     3fa:	51 09       	sbc	r21, r1
     3fc:	e9 e2       	ldi	r30, 0x29	; 41
     3fe:	f3 e0       	ldi	r31, 0x03	; 3
     400:	a0 a5       	ldd	r26, Z+40	; 0x28
     402:	b0 e0       	ldi	r27, 0x00	; 0
     404:	0e 94 b2 17 	call	0x2f64	; 0x2f64 <__muluhisi3>
     408:	26 8d       	ldd	r18, Z+30	; 0x1e
     40a:	37 8d       	ldd	r19, Z+31	; 0x1f
     40c:	ab 01       	movw	r20, r22
     40e:	bc 01       	movw	r22, r24
     410:	42 0f       	add	r20, r18
     412:	53 1f       	adc	r21, r19
     414:	61 1d       	adc	r22, r1
     416:	71 1d       	adc	r23, r1
     418:	80 81       	ld	r24, Z
     41a:	91 81       	ldd	r25, Z+1	; 0x01
     41c:	a2 81       	ldd	r26, Z+2	; 0x02
     41e:	b3 81       	ldd	r27, Z+3	; 0x03
     420:	8a 01       	movw	r16, r20
     422:	9b 01       	movw	r18, r22
     424:	08 0f       	add	r16, r24
     426:	19 1f       	adc	r17, r25
     428:	2a 1f       	adc	r18, r26
     42a:	3b 1f       	adc	r19, r27
     42c:	c9 01       	movw	r24, r18
     42e:	b8 01       	movw	r22, r16
     430:	1f 91       	pop	r17
     432:	0f 91       	pop	r16
     434:	08 95       	ret

00000436 <_FAT_moveWindow>:
     436:	cf 92       	push	r12
     438:	df 92       	push	r13
     43a:	ef 92       	push	r14
     43c:	ff 92       	push	r15
     43e:	cf 93       	push	r28
     440:	df 93       	push	r29
     442:	ec 01       	movw	r28, r24
     444:	6a 01       	movw	r12, r20
     446:	7b 01       	movw	r14, r22
     448:	42 30       	cpi	r20, 0x02	; 2
     44a:	51 05       	cpc	r21, r1
     44c:	61 05       	cpc	r22, r1
     44e:	71 05       	cpc	r23, r1
     450:	58 f4       	brcc	.+22     	; 0x468 <_FAT_moveWindow+0x32>
     452:	80 91 45 03 	lds	r24, 0x0345	; 0x800345 <fat_obj+0x1c>
     456:	90 91 46 03 	lds	r25, 0x0346	; 0x800346 <fat_obj+0x1d>
     45a:	a0 e0       	ldi	r26, 0x00	; 0
     45c:	b0 e0       	ldi	r27, 0x00	; 0
     45e:	88 87       	std	Y+8, r24	; 0x08
     460:	99 87       	std	Y+9, r25	; 0x09
     462:	aa 87       	std	Y+10, r26	; 0x0a
     464:	bb 87       	std	Y+11, r27	; 0x0b
     466:	08 c0       	rjmp	.+16     	; 0x478 <_FAT_moveWindow+0x42>
     468:	cb 01       	movw	r24, r22
     46a:	ba 01       	movw	r22, r20
     46c:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_FAT_clusterToSector>
     470:	68 87       	std	Y+8, r22	; 0x08
     472:	79 87       	std	Y+9, r23	; 0x09
     474:	8a 87       	std	Y+10, r24	; 0x0a
     476:	9b 87       	std	Y+11, r25	; 0x0b
     478:	cc 82       	std	Y+4, r12	; 0x04
     47a:	dd 82       	std	Y+5, r13	; 0x05
     47c:	ee 82       	std	Y+6, r14	; 0x06
     47e:	ff 82       	std	Y+7, r15	; 0x07
     480:	19 8a       	std	Y+17, r1	; 0x11
     482:	18 8a       	std	Y+16, r1	; 0x10
     484:	18 8e       	std	Y+24, r1	; 0x18
     486:	1b 8a       	std	Y+19, r1	; 0x13
     488:	1a 8a       	std	Y+18, r1	; 0x12
     48a:	df 91       	pop	r29
     48c:	cf 91       	pop	r28
     48e:	ff 90       	pop	r15
     490:	ef 90       	pop	r14
     492:	df 90       	pop	r13
     494:	cf 90       	pop	r12
     496:	08 95       	ret

00000498 <_FAT_freset>:
     498:	cf 93       	push	r28
     49a:	df 93       	push	r29
     49c:	ec 01       	movw	r28, r24
     49e:	1f 8e       	std	Y+31, r1	; 0x1f
     4a0:	1e 8e       	std	Y+30, r1	; 0x1e
     4a2:	1e a2       	std	Y+38, r1	; 0x26
     4a4:	81 e0       	ldi	r24, 0x01	; 1
     4a6:	8c a3       	std	Y+36, r24	; 0x24
     4a8:	18 82       	st	Y, r1
     4aa:	19 82       	std	Y+1, r1	; 0x01
     4ac:	1a 82       	std	Y+2, r1	; 0x02
     4ae:	1b 82       	std	Y+3, r1	; 0x03
     4b0:	19 a2       	std	Y+33, r1	; 0x21
     4b2:	68 85       	ldd	r22, Y+8	; 0x08
     4b4:	79 85       	ldd	r23, Y+9	; 0x09
     4b6:	8a 85       	ldd	r24, Y+10	; 0x0a
     4b8:	9b 85       	ldd	r25, Y+11	; 0x0b
     4ba:	6c 87       	std	Y+12, r22	; 0x0c
     4bc:	7d 87       	std	Y+13, r23	; 0x0d
     4be:	8e 87       	std	Y+14, r24	; 0x0e
     4c0:	9f 87       	std	Y+15, r25	; 0x0f
     4c2:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_FAT_clusterToSector>
     4c6:	68 8f       	std	Y+24, r22	; 0x18
     4c8:	79 8f       	std	Y+25, r23	; 0x19
     4ca:	8a 8f       	std	Y+26, r24	; 0x1a
     4cc:	9b 8f       	std	Y+27, r25	; 0x1b
     4ce:	1d 8e       	std	Y+29, r1	; 0x1d
     4d0:	1c 8e       	std	Y+28, r1	; 0x1c
     4d2:	df 91       	pop	r29
     4d4:	cf 91       	pop	r28
     4d6:	08 95       	ret

000004d8 <_FAT_parse_long_names_>:
     4d8:	0f 93       	push	r16
     4da:	cf 93       	push	r28
     4dc:	df 93       	push	r29
     4de:	ec 01       	movw	r28, r24
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	25 c0       	rjmp	.+74     	; 0x52e <_FAT_parse_long_names_+0x56>
     4e4:	e9 2f       	mov	r30, r25
     4e6:	f0 e0       	ldi	r31, 0x00	; 0
     4e8:	e6 0f       	add	r30, r22
     4ea:	f1 1d       	adc	r31, r1
     4ec:	da 01       	movw	r26, r20
     4ee:	aa 0f       	add	r26, r26
     4f0:	bb 1f       	adc	r27, r27
     4f2:	a2 95       	swap	r26
     4f4:	b2 95       	swap	r27
     4f6:	b0 7f       	andi	r27, 0xF0	; 240
     4f8:	ba 27       	eor	r27, r26
     4fa:	a0 7f       	andi	r26, 0xF0	; 240
     4fc:	ba 27       	eor	r27, r26
     4fe:	ea 0f       	add	r30, r26
     500:	fb 1f       	adc	r31, r27
     502:	e5 52       	subi	r30, 0x25	; 37
     504:	fb 4f       	sbci	r31, 0xFB	; 251
     506:	30 81       	ld	r19, Z
     508:	33 23       	and	r19, r19
     50a:	81 f0       	breq	.+32     	; 0x52c <_FAT_parse_long_names_+0x54>
     50c:	3f 3f       	cpi	r19, 0xFF	; 255
     50e:	89 f0       	breq	.+34     	; 0x532 <_FAT_parse_long_names_+0x5a>
     510:	2f 3f       	cpi	r18, 0xFF	; 255
     512:	79 f0       	breq	.+30     	; 0x532 <_FAT_parse_long_names_+0x5a>
     514:	fe 01       	movw	r30, r28
     516:	e2 0f       	add	r30, r18
     518:	f1 1d       	adc	r31, r1
     51a:	30 83       	st	Z, r19
     51c:	80 91 52 03 	lds	r24, 0x0352	; 0x800352 <null_is_set>
     520:	81 11       	cpse	r24, r1
     522:	03 c0       	rjmp	.+6      	; 0x52a <_FAT_parse_long_names_+0x52>
     524:	81 e0       	ldi	r24, 0x01	; 1
     526:	80 93 53 03 	sts	0x0353, r24	; 0x800353 <set_null>
     52a:	2f 5f       	subi	r18, 0xFF	; 255
     52c:	9e 5f       	subi	r25, 0xFE	; 254
     52e:	90 17       	cp	r25, r16
     530:	c8 f2       	brcs	.-78     	; 0x4e4 <_FAT_parse_long_names_+0xc>
     532:	82 2f       	mov	r24, r18
     534:	df 91       	pop	r29
     536:	cf 91       	pop	r28
     538:	0f 91       	pop	r16
     53a:	08 95       	ret

0000053c <_FAT_parse_long_names>:
     53c:	ef 92       	push	r14
     53e:	ff 92       	push	r15
     540:	0f 93       	push	r16
     542:	1f 93       	push	r17
     544:	cf 93       	push	r28
     546:	df 93       	push	r29
     548:	ec 01       	movw	r28, r24
     54a:	7b 01       	movw	r14, r22
     54c:	fb 01       	movw	r30, r22
     54e:	ee 0f       	add	r30, r30
     550:	ff 1f       	adc	r31, r31
     552:	e2 95       	swap	r30
     554:	f2 95       	swap	r31
     556:	f0 7f       	andi	r31, 0xF0	; 240
     558:	fe 27       	eor	r31, r30
     55a:	e0 7f       	andi	r30, 0xF0	; 240
     55c:	fe 27       	eor	r31, r30
     55e:	e5 52       	subi	r30, 0x25	; 37
     560:	fb 4f       	sbci	r31, 0xFB	; 251
     562:	10 81       	ld	r17, Z
     564:	1f 7b       	andi	r17, 0xBF	; 191
     566:	21 2f       	mov	r18, r17
     568:	30 e0       	ldi	r19, 0x00	; 0
     56a:	21 50       	subi	r18, 0x01	; 1
     56c:	31 09       	sbc	r19, r1
     56e:	8d e0       	ldi	r24, 0x0D	; 13
     570:	28 9f       	mul	r18, r24
     572:	20 2d       	mov	r18, r0
     574:	11 24       	eor	r1, r1
     576:	0a e0       	ldi	r16, 0x0A	; 10
     578:	ab 01       	movw	r20, r22
     57a:	61 e0       	ldi	r22, 0x01	; 1
     57c:	ce 01       	movw	r24, r28
     57e:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <_FAT_parse_long_names_>
     582:	0c e0       	ldi	r16, 0x0C	; 12
     584:	28 2f       	mov	r18, r24
     586:	a7 01       	movw	r20, r14
     588:	6e e0       	ldi	r22, 0x0E	; 14
     58a:	ce 01       	movw	r24, r28
     58c:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <_FAT_parse_long_names_>
     590:	04 e0       	ldi	r16, 0x04	; 4
     592:	28 2f       	mov	r18, r24
     594:	a7 01       	movw	r20, r14
     596:	6c e1       	ldi	r22, 0x1C	; 28
     598:	ce 01       	movw	r24, r28
     59a:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <_FAT_parse_long_names_>
     59e:	90 91 53 03 	lds	r25, 0x0353	; 0x800353 <set_null>
     5a2:	99 23       	and	r25, r25
     5a4:	41 f0       	breq	.+16     	; 0x5b6 <_FAT_parse_long_names+0x7a>
     5a6:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <set_null>
     5aa:	91 e0       	ldi	r25, 0x01	; 1
     5ac:	90 93 52 03 	sts	0x0352, r25	; 0x800352 <null_is_set>
     5b0:	c8 0f       	add	r28, r24
     5b2:	d1 1d       	adc	r29, r1
     5b4:	18 82       	st	Y, r1
     5b6:	11 30       	cpi	r17, 0x01	; 1
     5b8:	11 f4       	brne	.+4      	; 0x5be <_FAT_parse_long_names+0x82>
     5ba:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <null_is_set>
     5be:	df 91       	pop	r29
     5c0:	cf 91       	pop	r28
     5c2:	1f 91       	pop	r17
     5c4:	0f 91       	pop	r16
     5c6:	ff 90       	pop	r15
     5c8:	ef 90       	pop	r14
     5ca:	08 95       	ret

000005cc <sd_read_response1>:
     5cc:	cf 93       	push	r28
     5ce:	df 93       	push	r29
     5d0:	c0 e0       	ldi	r28, 0x00	; 0
     5d2:	03 c0       	rjmp	.+6      	; 0x5da <sd_read_response1+0xe>
     5d4:	cf 5f       	subi	r28, 0xFF	; 255
     5d6:	c1 31       	cpi	r28, 0x11	; 17
     5d8:	28 f4       	brcc	.+10     	; 0x5e4 <sd_read_response1+0x18>
     5da:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_ReceiveByte>
     5de:	d8 2f       	mov	r29, r24
     5e0:	8f 3f       	cpi	r24, 0xFF	; 255
     5e2:	c1 f3       	breq	.-16     	; 0x5d4 <sd_read_response1+0x8>
     5e4:	1f 92       	push	r1
     5e6:	df 93       	push	r29
     5e8:	80 e0       	ldi	r24, 0x00	; 0
     5ea:	91 e0       	ldi	r25, 0x01	; 1
     5ec:	9f 93       	push	r25
     5ee:	8f 93       	push	r24
     5f0:	8f e9       	ldi	r24, 0x9F	; 159
     5f2:	94 e0       	ldi	r25, 0x04	; 4
     5f4:	9f 93       	push	r25
     5f6:	8f 93       	push	r24
     5f8:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <sprintf>
     5fc:	0f 90       	pop	r0
     5fe:	0f 90       	pop	r0
     600:	0f 90       	pop	r0
     602:	0f 90       	pop	r0
     604:	0f 90       	pop	r0
     606:	0f 90       	pop	r0
     608:	8d 2f       	mov	r24, r29
     60a:	df 91       	pop	r29
     60c:	cf 91       	pop	r28
     60e:	08 95       	ret

00000610 <sd_read_response3_7>:
     610:	cf 93       	push	r28
     612:	df 93       	push	r29
     614:	ec 01       	movw	r28, r24
     616:	0e 94 e6 02 	call	0x5cc	; 0x5cc <sd_read_response1>
     61a:	88 83       	st	Y, r24
     61c:	82 30       	cpi	r24, 0x02	; 2
     61e:	60 f4       	brcc	.+24     	; 0x638 <sd_read_response3_7+0x28>
     620:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_ReceiveByte>
     624:	89 83       	std	Y+1, r24	; 0x01
     626:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_ReceiveByte>
     62a:	8a 83       	std	Y+2, r24	; 0x02
     62c:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_ReceiveByte>
     630:	8b 83       	std	Y+3, r24	; 0x03
     632:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_ReceiveByte>
     636:	8c 83       	std	Y+4, r24	; 0x04
     638:	df 91       	pop	r29
     63a:	cf 91       	pop	r28
     63c:	08 95       	ret

0000063e <sd_command_ACMD41>:
     63e:	cf 93       	push	r28
     640:	df 93       	push	r29
     642:	c4 e6       	ldi	r28, 0x64	; 100
     644:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sd_assert_cs>
     648:	20 e0       	ldi	r18, 0x00	; 0
     64a:	40 e0       	ldi	r20, 0x00	; 0
     64c:	50 e0       	ldi	r21, 0x00	; 0
     64e:	ba 01       	movw	r22, r20
     650:	87 e3       	ldi	r24, 0x37	; 55
     652:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <sd_command>
     656:	0e 94 e6 02 	call	0x5cc	; 0x5cc <sd_read_response1>
     65a:	0e 94 9e 01 	call	0x33c	; 0x33c <sd_deassert_cs>
     65e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sd_assert_cs>
     662:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <SD_CardType>
     666:	81 30       	cpi	r24, 0x01	; 1
     668:	41 f4       	brne	.+16     	; 0x67a <sd_command_ACMD41+0x3c>
     66a:	20 e0       	ldi	r18, 0x00	; 0
     66c:	40 e0       	ldi	r20, 0x00	; 0
     66e:	50 e0       	ldi	r21, 0x00	; 0
     670:	ba 01       	movw	r22, r20
     672:	89 e2       	ldi	r24, 0x29	; 41
     674:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <sd_command>
     678:	08 c0       	rjmp	.+16     	; 0x68a <sd_command_ACMD41+0x4c>
     67a:	20 e0       	ldi	r18, 0x00	; 0
     67c:	40 e0       	ldi	r20, 0x00	; 0
     67e:	50 e0       	ldi	r21, 0x00	; 0
     680:	60 e0       	ldi	r22, 0x00	; 0
     682:	70 e4       	ldi	r23, 0x40	; 64
     684:	89 e2       	ldi	r24, 0x29	; 41
     686:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <sd_command>
     68a:	0e 94 e6 02 	call	0x5cc	; 0x5cc <sd_read_response1>
     68e:	d8 2f       	mov	r29, r24
     690:	0e 94 9e 01 	call	0x33c	; 0x33c <sd_deassert_cs>
     694:	c1 50       	subi	r28, 0x01	; 1
     696:	8f e3       	ldi	r24, 0x3F	; 63
     698:	9c e9       	ldi	r25, 0x9C	; 156
     69a:	01 97       	sbiw	r24, 0x01	; 1
     69c:	f1 f7       	brne	.-4      	; 0x69a <sd_command_ACMD41+0x5c>
     69e:	00 c0       	rjmp	.+0      	; 0x6a0 <sd_command_ACMD41+0x62>
     6a0:	00 00       	nop
     6a2:	dd 23       	and	r29, r29
     6a4:	11 f0       	breq	.+4      	; 0x6aa <sd_command_ACMD41+0x6c>
     6a6:	c1 11       	cpse	r28, r1
     6a8:	cd cf       	rjmp	.-102    	; 0x644 <sd_command_ACMD41+0x6>
     6aa:	c1 11       	cpse	r28, r1
     6ac:	02 c0       	rjmp	.+4      	; 0x6b2 <sd_command_ACMD41+0x74>
     6ae:	81 e0       	ldi	r24, 0x01	; 1
     6b0:	01 c0       	rjmp	.+2      	; 0x6b4 <sd_command_ACMD41+0x76>
     6b2:	8d 2f       	mov	r24, r29
     6b4:	df 91       	pop	r29
     6b6:	cf 91       	pop	r28
     6b8:	08 95       	ret

000006ba <sd_init>:
     6ba:	1f 93       	push	r17
     6bc:	cf 93       	push	r28
     6be:	df 93       	push	r29
     6c0:	00 d0       	rcall	.+0      	; 0x6c2 <sd_init+0x8>
     6c2:	00 d0       	rcall	.+0      	; 0x6c4 <sd_init+0xa>
     6c4:	1f 92       	push	r1
     6c6:	cd b7       	in	r28, 0x3d	; 61
     6c8:	de b7       	in	r29, 0x3e	; 62
     6ca:	0e 94 5e 01 	call	0x2bc	; 0x2bc <SPI_Init>
     6ce:	8f e9       	ldi	r24, 0x9F	; 159
     6d0:	9f e0       	ldi	r25, 0x0F	; 15
     6d2:	01 97       	sbiw	r24, 0x01	; 1
     6d4:	f1 f7       	brne	.-4      	; 0x6d2 <sd_init+0x18>
     6d6:	00 c0       	rjmp	.+0      	; 0x6d8 <sd_init+0x1e>
     6d8:	00 00       	nop
     6da:	0e 94 9e 01 	call	0x33c	; 0x33c <sd_deassert_cs>
     6de:	10 e0       	ldi	r17, 0x00	; 0
     6e0:	04 c0       	rjmp	.+8      	; 0x6ea <sd_init+0x30>
     6e2:	8f ef       	ldi	r24, 0xFF	; 255
     6e4:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <SPI_SendByte>
     6e8:	1f 5f       	subi	r17, 0xFF	; 255
     6ea:	1a 30       	cpi	r17, 0x0A	; 10
     6ec:	d0 f3       	brcs	.-12     	; 0x6e2 <sd_init+0x28>
     6ee:	10 e0       	ldi	r17, 0x00	; 0
     6f0:	16 c0       	rjmp	.+44     	; 0x71e <sd_init+0x64>
     6f2:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sd_assert_cs>
     6f6:	24 e9       	ldi	r18, 0x94	; 148
     6f8:	40 e0       	ldi	r20, 0x00	; 0
     6fa:	50 e0       	ldi	r21, 0x00	; 0
     6fc:	ba 01       	movw	r22, r20
     6fe:	80 e0       	ldi	r24, 0x00	; 0
     700:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <sd_command>
     704:	0e 94 e6 02 	call	0x5cc	; 0x5cc <sd_read_response1>
     708:	89 83       	std	Y+1, r24	; 0x01
     70a:	0e 94 9e 01 	call	0x33c	; 0x33c <sd_deassert_cs>
     70e:	1f 5f       	subi	r17, 0xFF	; 255
     710:	1b 30       	cpi	r17, 0x0B	; 11
     712:	28 f0       	brcs	.+10     	; 0x71e <sd_init+0x64>
     714:	85 b1       	in	r24, 0x05	; 5
     716:	84 60       	ori	r24, 0x04	; 4
     718:	85 b9       	out	0x05, r24	; 5
     71a:	11 e0       	ldi	r17, 0x01	; 1
     71c:	6a c0       	rjmp	.+212    	; 0x7f2 <sd_init+0x138>
     71e:	89 81       	ldd	r24, Y+1	; 0x01
     720:	81 30       	cpi	r24, 0x01	; 1
     722:	39 f7       	brne	.-50     	; 0x6f2 <sd_init+0x38>
     724:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sd_assert_cs>
     728:	26 e8       	ldi	r18, 0x86	; 134
     72a:	4a ea       	ldi	r20, 0xAA	; 170
     72c:	51 e0       	ldi	r21, 0x01	; 1
     72e:	60 e0       	ldi	r22, 0x00	; 0
     730:	70 e0       	ldi	r23, 0x00	; 0
     732:	88 e0       	ldi	r24, 0x08	; 8
     734:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <sd_command>
     738:	ce 01       	movw	r24, r28
     73a:	01 96       	adiw	r24, 0x01	; 1
     73c:	0e 94 08 03 	call	0x610	; 0x610 <sd_read_response3_7>
     740:	0e 94 9e 01 	call	0x33c	; 0x33c <sd_deassert_cs>
     744:	8c b5       	in	r24, 0x2c	; 44
     746:	8d 7f       	andi	r24, 0xFD	; 253
     748:	8c bd       	out	0x2c, r24	; 44
     74a:	89 81       	ldd	r24, Y+1	; 0x01
     74c:	81 30       	cpi	r24, 0x01	; 1
     74e:	c1 f5       	brne	.+112    	; 0x7c0 <sd_init+0x106>
     750:	8c 81       	ldd	r24, Y+4	; 0x04
     752:	81 30       	cpi	r24, 0x01	; 1
     754:	09 f0       	breq	.+2      	; 0x758 <sd_init+0x9e>
     756:	42 c0       	rjmp	.+132    	; 0x7dc <sd_init+0x122>
     758:	8d 81       	ldd	r24, Y+5	; 0x05
     75a:	8a 3a       	cpi	r24, 0xAA	; 170
     75c:	09 f0       	breq	.+2      	; 0x760 <sd_init+0xa6>
     75e:	40 c0       	rjmp	.+128    	; 0x7e0 <sd_init+0x126>
     760:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sd_assert_cs>
     764:	20 e0       	ldi	r18, 0x00	; 0
     766:	40 e0       	ldi	r20, 0x00	; 0
     768:	50 e0       	ldi	r21, 0x00	; 0
     76a:	ba 01       	movw	r22, r20
     76c:	8a e3       	ldi	r24, 0x3A	; 58
     76e:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <sd_command>
     772:	ce 01       	movw	r24, r28
     774:	01 96       	adiw	r24, 0x01	; 1
     776:	0e 94 08 03 	call	0x610	; 0x610 <sd_read_response3_7>
     77a:	0e 94 9e 01 	call	0x33c	; 0x33c <sd_deassert_cs>
     77e:	0e 94 1f 03 	call	0x63e	; 0x63e <sd_command_ACMD41>
     782:	18 2f       	mov	r17, r24
     784:	81 11       	cpse	r24, r1
     786:	2e c0       	rjmp	.+92     	; 0x7e4 <sd_init+0x12a>
     788:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sd_assert_cs>
     78c:	20 e0       	ldi	r18, 0x00	; 0
     78e:	40 e0       	ldi	r20, 0x00	; 0
     790:	50 e0       	ldi	r21, 0x00	; 0
     792:	ba 01       	movw	r22, r20
     794:	8a e3       	ldi	r24, 0x3A	; 58
     796:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <sd_command>
     79a:	ce 01       	movw	r24, r28
     79c:	01 96       	adiw	r24, 0x01	; 1
     79e:	0e 94 08 03 	call	0x610	; 0x610 <sd_read_response3_7>
     7a2:	0e 94 9e 01 	call	0x33c	; 0x33c <sd_deassert_cs>
     7a6:	8a 81       	ldd	r24, Y+2	; 0x02
     7a8:	88 23       	and	r24, r24
     7aa:	f4 f4       	brge	.+60     	; 0x7e8 <sd_init+0x12e>
     7ac:	86 ff       	sbrs	r24, 6
     7ae:	04 c0       	rjmp	.+8      	; 0x7b8 <sd_init+0xfe>
     7b0:	83 e0       	ldi	r24, 0x03	; 3
     7b2:	80 93 56 04 	sts	0x0456, r24	; 0x800456 <SD_CardType>
     7b6:	1d c0       	rjmp	.+58     	; 0x7f2 <sd_init+0x138>
     7b8:	82 e0       	ldi	r24, 0x02	; 2
     7ba:	80 93 56 04 	sts	0x0456, r24	; 0x800456 <SD_CardType>
     7be:	19 c0       	rjmp	.+50     	; 0x7f2 <sd_init+0x138>
     7c0:	85 30       	cpi	r24, 0x05	; 5
     7c2:	a1 f4       	brne	.+40     	; 0x7ec <sd_init+0x132>
     7c4:	81 e0       	ldi	r24, 0x01	; 1
     7c6:	80 93 56 04 	sts	0x0456, r24	; 0x800456 <SD_CardType>
     7ca:	0e 94 1f 03 	call	0x63e	; 0x63e <sd_command_ACMD41>
     7ce:	18 2f       	mov	r17, r24
     7d0:	82 fd       	sbrc	r24, 2
     7d2:	0e c0       	rjmp	.+28     	; 0x7f0 <sd_init+0x136>
     7d4:	88 23       	and	r24, r24
     7d6:	69 f0       	breq	.+26     	; 0x7f2 <sd_init+0x138>
     7d8:	11 e0       	ldi	r17, 0x01	; 1
     7da:	0b c0       	rjmp	.+22     	; 0x7f2 <sd_init+0x138>
     7dc:	14 e0       	ldi	r17, 0x04	; 4
     7de:	09 c0       	rjmp	.+18     	; 0x7f2 <sd_init+0x138>
     7e0:	13 e0       	ldi	r17, 0x03	; 3
     7e2:	07 c0       	rjmp	.+14     	; 0x7f2 <sd_init+0x138>
     7e4:	11 e0       	ldi	r17, 0x01	; 1
     7e6:	05 c0       	rjmp	.+10     	; 0x7f2 <sd_init+0x138>
     7e8:	15 e0       	ldi	r17, 0x05	; 5
     7ea:	03 c0       	rjmp	.+6      	; 0x7f2 <sd_init+0x138>
     7ec:	12 e0       	ldi	r17, 0x02	; 2
     7ee:	01 c0       	rjmp	.+2      	; 0x7f2 <sd_init+0x138>
     7f0:	16 e0       	ldi	r17, 0x06	; 6
     7f2:	81 2f       	mov	r24, r17
     7f4:	0f 90       	pop	r0
     7f6:	0f 90       	pop	r0
     7f8:	0f 90       	pop	r0
     7fa:	0f 90       	pop	r0
     7fc:	0f 90       	pop	r0
     7fe:	df 91       	pop	r29
     800:	cf 91       	pop	r28
     802:	1f 91       	pop	r17
     804:	08 95       	ret

00000806 <sd_write_single_block>:
     806:	bf 92       	push	r11
     808:	cf 92       	push	r12
     80a:	df 92       	push	r13
     80c:	ef 92       	push	r14
     80e:	ff 92       	push	r15
     810:	0f 93       	push	r16
     812:	1f 93       	push	r17
     814:	cf 93       	push	r28
     816:	df 93       	push	r29
     818:	6b 01       	movw	r12, r22
     81a:	7c 01       	movw	r14, r24
     81c:	8a 01       	movw	r16, r20
     81e:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <SD_CardType>
     822:	81 30       	cpi	r24, 0x01	; 1
     824:	49 f4       	brne	.+18     	; 0x838 <sd_write_single_block+0x32>
     826:	0b 2e       	mov	r0, r27
     828:	b9 e0       	ldi	r27, 0x09	; 9
     82a:	cc 0c       	add	r12, r12
     82c:	dd 1c       	adc	r13, r13
     82e:	ee 1c       	adc	r14, r14
     830:	ff 1c       	adc	r15, r15
     832:	ba 95       	dec	r27
     834:	d1 f7       	brne	.-12     	; 0x82a <sd_write_single_block+0x24>
     836:	b0 2d       	mov	r27, r0
     838:	8f ef       	ldi	r24, 0xFF	; 255
     83a:	80 93 57 04 	sts	0x0457, r24	; 0x800457 <SD_ResponseToken>
     83e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sd_assert_cs>
     842:	20 e0       	ldi	r18, 0x00	; 0
     844:	b7 01       	movw	r22, r14
     846:	a6 01       	movw	r20, r12
     848:	88 e1       	ldi	r24, 0x18	; 24
     84a:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <sd_command>
     84e:	0e 94 e6 02 	call	0x5cc	; 0x5cc <sd_read_response1>
     852:	b8 2e       	mov	r11, r24
     854:	81 11       	cpse	r24, r1
     856:	4e c0       	rjmp	.+156    	; 0x8f4 <sd_write_single_block+0xee>
     858:	8e ef       	ldi	r24, 0xFE	; 254
     85a:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <SPI_SendByte>
     85e:	c0 e0       	ldi	r28, 0x00	; 0
     860:	d0 e0       	ldi	r29, 0x00	; 0
     862:	07 c0       	rjmp	.+14     	; 0x872 <sd_write_single_block+0x6c>
     864:	f8 01       	movw	r30, r16
     866:	ec 0f       	add	r30, r28
     868:	fd 1f       	adc	r31, r29
     86a:	80 81       	ld	r24, Z
     86c:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <SPI_SendByte>
     870:	21 96       	adiw	r28, 0x01	; 1
     872:	c1 15       	cp	r28, r1
     874:	82 e0       	ldi	r24, 0x02	; 2
     876:	d8 07       	cpc	r29, r24
     878:	a8 f3       	brcs	.-22     	; 0x864 <sd_write_single_block+0x5e>
     87a:	c1 2c       	mov	r12, r1
     87c:	d1 2c       	mov	r13, r1
     87e:	76 01       	movw	r14, r12
     880:	06 c0       	rjmp	.+12     	; 0x88e <sd_write_single_block+0x88>
     882:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_ReceiveByte>
     886:	b8 2e       	mov	r11, r24
     888:	8f ef       	ldi	r24, 0xFF	; 255
     88a:	b8 12       	cpse	r11, r24
     88c:	11 c0       	rjmp	.+34     	; 0x8b0 <sd_write_single_block+0xaa>
     88e:	8f ef       	ldi	r24, 0xFF	; 255
     890:	c8 1a       	sub	r12, r24
     892:	d8 0a       	sbc	r13, r24
     894:	e8 0a       	sbc	r14, r24
     896:	f8 0a       	sbc	r15, r24
     898:	c7 01       	movw	r24, r14
     89a:	b6 01       	movw	r22, r12
     89c:	0e 94 29 16 	call	0x2c52	; 0x2c52 <__floatunsisf>
     8a0:	20 e0       	ldi	r18, 0x00	; 0
     8a2:	34 e2       	ldi	r19, 0x24	; 36
     8a4:	44 e7       	ldi	r20, 0x74	; 116
     8a6:	58 e4       	ldi	r21, 0x48	; 72
     8a8:	0e 94 7c 15 	call	0x2af8	; 0x2af8 <__cmpsf2>
     8ac:	88 23       	and	r24, r24
     8ae:	4c f3       	brlt	.-46     	; 0x882 <sd_write_single_block+0x7c>
     8b0:	8b 2d       	mov	r24, r11
     8b2:	8f 71       	andi	r24, 0x1F	; 31
     8b4:	85 30       	cpi	r24, 0x05	; 5
     8b6:	f1 f4       	brne	.+60     	; 0x8f4 <sd_write_single_block+0xee>
     8b8:	80 93 57 04 	sts	0x0457, r24	; 0x800457 <SD_ResponseToken>
     8bc:	c1 2c       	mov	r12, r1
     8be:	d1 2c       	mov	r13, r1
     8c0:	76 01       	movw	r14, r12
     8c2:	14 c0       	rjmp	.+40     	; 0x8ec <sd_write_single_block+0xe6>
     8c4:	8f ef       	ldi	r24, 0xFF	; 255
     8c6:	c8 1a       	sub	r12, r24
     8c8:	d8 0a       	sbc	r13, r24
     8ca:	e8 0a       	sbc	r14, r24
     8cc:	f8 0a       	sbc	r15, r24
     8ce:	c7 01       	movw	r24, r14
     8d0:	b6 01       	movw	r22, r12
     8d2:	0e 94 29 16 	call	0x2c52	; 0x2c52 <__floatunsisf>
     8d6:	20 e0       	ldi	r18, 0x00	; 0
     8d8:	34 e2       	ldi	r19, 0x24	; 36
     8da:	44 e7       	ldi	r20, 0x74	; 116
     8dc:	58 e4       	ldi	r21, 0x48	; 72
     8de:	0e 94 db 16 	call	0x2db6	; 0x2db6 <__gesf2>
     8e2:	18 16       	cp	r1, r24
     8e4:	1c f4       	brge	.+6      	; 0x8ec <sd_write_single_block+0xe6>
     8e6:	10 92 57 04 	sts	0x0457, r1	; 0x800457 <SD_ResponseToken>
     8ea:	04 c0       	rjmp	.+8      	; 0x8f4 <sd_write_single_block+0xee>
     8ec:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_ReceiveByte>
     8f0:	88 23       	and	r24, r24
     8f2:	41 f3       	breq	.-48     	; 0x8c4 <sd_write_single_block+0xbe>
     8f4:	0e 94 9e 01 	call	0x33c	; 0x33c <sd_deassert_cs>
     8f8:	8b 2d       	mov	r24, r11
     8fa:	df 91       	pop	r29
     8fc:	cf 91       	pop	r28
     8fe:	1f 91       	pop	r17
     900:	0f 91       	pop	r16
     902:	ff 90       	pop	r15
     904:	ef 90       	pop	r14
     906:	df 90       	pop	r13
     908:	cf 90       	pop	r12
     90a:	bf 90       	pop	r11
     90c:	08 95       	ret

0000090e <_FAT_clearCluster>:
     90e:	cf 92       	push	r12
     910:	df 92       	push	r13
     912:	ef 92       	push	r14
     914:	ff 92       	push	r15
     916:	1f 93       	push	r17
     918:	cf 93       	push	r28
     91a:	df 93       	push	r29
     91c:	6b 01       	movw	r12, r22
     91e:	7c 01       	movw	r14, r24
     920:	14 2f       	mov	r17, r20
     922:	40 e0       	ldi	r20, 0x00	; 0
     924:	60 e0       	ldi	r22, 0x00	; 0
     926:	72 e0       	ldi	r23, 0x02	; 2
     928:	80 e0       	ldi	r24, 0x00	; 0
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	0e 94 af 01 	call	0x35e	; 0x35e <_FAT_fillBufferArray>
     930:	c7 01       	movw	r24, r14
     932:	b6 01       	movw	r22, r12
     934:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_FAT_clusterToSector>
     938:	6b 01       	movw	r12, r22
     93a:	7c 01       	movw	r14, r24
     93c:	c0 e0       	ldi	r28, 0x00	; 0
     93e:	d0 e0       	ldi	r29, 0x00	; 0
     940:	80 e0       	ldi	r24, 0x00	; 0
     942:	11 c0       	rjmp	.+34     	; 0x966 <_FAT_clearCluster+0x58>
     944:	4b ed       	ldi	r20, 0xDB	; 219
     946:	54 e0       	ldi	r21, 0x04	; 4
     948:	c7 01       	movw	r24, r14
     94a:	b6 01       	movw	r22, r12
     94c:	6c 0f       	add	r22, r28
     94e:	7d 1f       	adc	r23, r29
     950:	81 1d       	adc	r24, r1
     952:	91 1d       	adc	r25, r1
     954:	0e 94 03 04 	call	0x806	; 0x806 <sd_write_single_block>
     958:	90 91 57 04 	lds	r25, 0x0457	; 0x800457 <SD_ResponseToken>
     95c:	95 30       	cpi	r25, 0x05	; 5
     95e:	51 f4       	brne	.+20     	; 0x974 <_FAT_clearCluster+0x66>
     960:	11 11       	cpse	r17, r1
     962:	09 c0       	rjmp	.+18     	; 0x976 <_FAT_clearCluster+0x68>
     964:	21 96       	adiw	r28, 0x01	; 1
     966:	20 91 51 03 	lds	r18, 0x0351	; 0x800351 <fat_obj+0x28>
     96a:	30 e0       	ldi	r19, 0x00	; 0
     96c:	c2 17       	cp	r28, r18
     96e:	d3 07       	cpc	r29, r19
     970:	48 f3       	brcs	.-46     	; 0x944 <_FAT_clearCluster+0x36>
     972:	01 c0       	rjmp	.+2      	; 0x976 <_FAT_clearCluster+0x68>
     974:	8c e0       	ldi	r24, 0x0C	; 12
     976:	df 91       	pop	r29
     978:	cf 91       	pop	r28
     97a:	1f 91       	pop	r17
     97c:	ff 90       	pop	r15
     97e:	ef 90       	pop	r14
     980:	df 90       	pop	r13
     982:	cf 90       	pop	r12
     984:	08 95       	ret

00000986 <sd_read_single_block>:
     986:	af 92       	push	r10
     988:	bf 92       	push	r11
     98a:	cf 92       	push	r12
     98c:	df 92       	push	r13
     98e:	ef 92       	push	r14
     990:	ff 92       	push	r15
     992:	0f 93       	push	r16
     994:	1f 93       	push	r17
     996:	cf 93       	push	r28
     998:	df 93       	push	r29
     99a:	6b 01       	movw	r12, r22
     99c:	7c 01       	movw	r14, r24
     99e:	ea 01       	movw	r28, r20
     9a0:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <SD_CardType>
     9a4:	81 30       	cpi	r24, 0x01	; 1
     9a6:	49 f4       	brne	.+18     	; 0x9ba <sd_read_single_block+0x34>
     9a8:	0b 2e       	mov	r0, r27
     9aa:	b9 e0       	ldi	r27, 0x09	; 9
     9ac:	cc 0c       	add	r12, r12
     9ae:	dd 1c       	adc	r13, r13
     9b0:	ee 1c       	adc	r14, r14
     9b2:	ff 1c       	adc	r15, r15
     9b4:	ba 95       	dec	r27
     9b6:	d1 f7       	brne	.-12     	; 0x9ac <sd_read_single_block+0x26>
     9b8:	b0 2d       	mov	r27, r0
     9ba:	8f ef       	ldi	r24, 0xFF	; 255
     9bc:	80 93 57 04 	sts	0x0457, r24	; 0x800457 <SD_ResponseToken>
     9c0:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sd_assert_cs>
     9c4:	20 e0       	ldi	r18, 0x00	; 0
     9c6:	b7 01       	movw	r22, r14
     9c8:	a6 01       	movw	r20, r12
     9ca:	81 e1       	ldi	r24, 0x11	; 17
     9cc:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <sd_command>
     9d0:	0e 94 e6 02 	call	0x5cc	; 0x5cc <sd_read_response1>
     9d4:	a8 2e       	mov	r10, r24
     9d6:	8f ef       	ldi	r24, 0xFF	; 255
     9d8:	a8 12       	cpse	r10, r24
     9da:	08 c0       	rjmp	.+16     	; 0x9ec <sd_read_single_block+0x66>
     9dc:	38 c0       	rjmp	.+112    	; 0xa4e <sd_read_single_block+0xc8>
     9de:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_ReceiveByte>
     9e2:	b8 2e       	mov	r11, r24
     9e4:	8f ef       	ldi	r24, 0xFF	; 255
     9e6:	b8 16       	cp	r11, r24
     9e8:	29 f0       	breq	.+10     	; 0x9f4 <sd_read_single_block+0x6e>
     9ea:	15 c0       	rjmp	.+42     	; 0xa16 <sd_read_single_block+0x90>
     9ec:	c1 2c       	mov	r12, r1
     9ee:	d1 2c       	mov	r13, r1
     9f0:	76 01       	movw	r14, r12
     9f2:	b1 2c       	mov	r11, r1
     9f4:	8f ef       	ldi	r24, 0xFF	; 255
     9f6:	c8 1a       	sub	r12, r24
     9f8:	d8 0a       	sbc	r13, r24
     9fa:	e8 0a       	sbc	r14, r24
     9fc:	f8 0a       	sbc	r15, r24
     9fe:	c7 01       	movw	r24, r14
     a00:	b6 01       	movw	r22, r12
     a02:	0e 94 29 16 	call	0x2c52	; 0x2c52 <__floatunsisf>
     a06:	20 e0       	ldi	r18, 0x00	; 0
     a08:	30 e5       	ldi	r19, 0x50	; 80
     a0a:	43 ec       	ldi	r20, 0xC3	; 195
     a0c:	57 e4       	ldi	r21, 0x47	; 71
     a0e:	0e 94 7c 15 	call	0x2af8	; 0x2af8 <__cmpsf2>
     a12:	81 11       	cpse	r24, r1
     a14:	e4 cf       	rjmp	.-56     	; 0x9de <sd_read_single_block+0x58>
     a16:	8e ef       	ldi	r24, 0xFE	; 254
     a18:	b8 12       	cpse	r11, r24
     a1a:	17 c0       	rjmp	.+46     	; 0xa4a <sd_read_single_block+0xc4>
     a1c:	0b c0       	rjmp	.+22     	; 0xa34 <sd_read_single_block+0xae>
     a1e:	7e 01       	movw	r14, r28
     a20:	8f ef       	ldi	r24, 0xFF	; 255
     a22:	e8 1a       	sub	r14, r24
     a24:	f8 0a       	sbc	r15, r24
     a26:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_ReceiveByte>
     a2a:	88 83       	st	Y, r24
     a2c:	0f 5f       	subi	r16, 0xFF	; 255
     a2e:	1f 4f       	sbci	r17, 0xFF	; 255
     a30:	e7 01       	movw	r28, r14
     a32:	02 c0       	rjmp	.+4      	; 0xa38 <sd_read_single_block+0xb2>
     a34:	00 e0       	ldi	r16, 0x00	; 0
     a36:	10 e0       	ldi	r17, 0x00	; 0
     a38:	01 15       	cp	r16, r1
     a3a:	82 e0       	ldi	r24, 0x02	; 2
     a3c:	18 07       	cpc	r17, r24
     a3e:	78 f3       	brcs	.-34     	; 0xa1e <sd_read_single_block+0x98>
     a40:	18 82       	st	Y, r1
     a42:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_ReceiveByte>
     a46:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_ReceiveByte>
     a4a:	b0 92 57 04 	sts	0x0457, r11	; 0x800457 <SD_ResponseToken>
     a4e:	0e 94 9e 01 	call	0x33c	; 0x33c <sd_deassert_cs>
     a52:	8a 2d       	mov	r24, r10
     a54:	df 91       	pop	r29
     a56:	cf 91       	pop	r28
     a58:	1f 91       	pop	r17
     a5a:	0f 91       	pop	r16
     a5c:	ff 90       	pop	r15
     a5e:	ef 90       	pop	r14
     a60:	df 90       	pop	r13
     a62:	cf 90       	pop	r12
     a64:	bf 90       	pop	r11
     a66:	af 90       	pop	r10
     a68:	08 95       	ret

00000a6a <FAT_tableFindFree>:
     a6a:	3f 92       	push	r3
     a6c:	4f 92       	push	r4
     a6e:	5f 92       	push	r5
     a70:	6f 92       	push	r6
     a72:	7f 92       	push	r7
     a74:	8f 92       	push	r8
     a76:	9f 92       	push	r9
     a78:	af 92       	push	r10
     a7a:	bf 92       	push	r11
     a7c:	cf 92       	push	r12
     a7e:	df 92       	push	r13
     a80:	ef 92       	push	r14
     a82:	ff 92       	push	r15
     a84:	0f 93       	push	r16
     a86:	1f 93       	push	r17
     a88:	cf 93       	push	r28
     a8a:	df 93       	push	r29
     a8c:	38 2e       	mov	r3, r24
     a8e:	c0 91 41 03 	lds	r28, 0x0341	; 0x800341 <fat_obj+0x18>
     a92:	d0 91 42 03 	lds	r29, 0x0342	; 0x800342 <fat_obj+0x19>
     a96:	c1 2c       	mov	r12, r1
     a98:	d1 2c       	mov	r13, r1
     a9a:	76 01       	movw	r14, r12
     a9c:	00 e0       	ldi	r16, 0x00	; 0
     a9e:	10 e0       	ldi	r17, 0x00	; 0
     aa0:	81 2c       	mov	r8, r1
     aa2:	91 2c       	mov	r9, r1
     aa4:	54 01       	movw	r10, r8
     aa6:	41 2c       	mov	r4, r1
     aa8:	51 2c       	mov	r5, r1
     aaa:	32 01       	movw	r6, r4
     aac:	5f c0       	rjmp	.+190    	; 0xb6c <FAT_tableFindFree+0x102>
     aae:	60 91 49 03 	lds	r22, 0x0349	; 0x800349 <fat_obj+0x20>
     ab2:	70 91 4a 03 	lds	r23, 0x034A	; 0x80034a <fat_obj+0x21>
     ab6:	60 0f       	add	r22, r16
     ab8:	71 1f       	adc	r23, r17
     aba:	80 e0       	ldi	r24, 0x00	; 0
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	4b ed       	ldi	r20, 0xDB	; 219
     ac0:	54 e0       	ldi	r21, 0x04	; 4
     ac2:	0e 94 c3 04 	call	0x986	; 0x986 <sd_read_single_block>
     ac6:	81 11       	cpse	r24, r1
     ac8:	67 c0       	rjmp	.+206    	; 0xb98 <FAT_tableFindFree+0x12e>
     aca:	80 e0       	ldi	r24, 0x00	; 0
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	48 c0       	rjmp	.+144    	; 0xb60 <FAT_tableFindFree+0xf6>
     ad0:	20 91 50 03 	lds	r18, 0x0350	; 0x800350 <fat_obj+0x27>
     ad4:	22 30       	cpi	r18, 0x02	; 2
     ad6:	a9 f4       	brne	.+42     	; 0xb02 <FAT_tableFindFree+0x98>
     ad8:	fc 01       	movw	r30, r24
     ada:	e5 52       	subi	r30, 0x25	; 37
     adc:	fb 4f       	sbci	r31, 0xFB	; 251
     ade:	c0 80       	ld	r12, Z
     ae0:	fc 01       	movw	r30, r24
     ae2:	e4 52       	subi	r30, 0x24	; 36
     ae4:	fb 4f       	sbci	r31, 0xFB	; 251
     ae6:	d0 80       	ld	r13, Z
     ae8:	fc 01       	movw	r30, r24
     aea:	e3 52       	subi	r30, 0x23	; 35
     aec:	fb 4f       	sbci	r31, 0xFB	; 251
     aee:	e0 80       	ld	r14, Z
     af0:	fc 01       	movw	r30, r24
     af2:	33 96       	adiw	r30, 0x03	; 3
     af4:	e5 52       	subi	r30, 0x25	; 37
     af6:	fb 4f       	sbci	r31, 0xFB	; 251
     af8:	04 96       	adiw	r24, 0x04	; 4
     afa:	f0 80       	ld	r15, Z
     afc:	2f e0       	ldi	r18, 0x0F	; 15
     afe:	f2 22       	and	r15, r18
     b00:	0c c0       	rjmp	.+24     	; 0xb1a <FAT_tableFindFree+0xb0>
     b02:	21 30       	cpi	r18, 0x01	; 1
     b04:	51 f4       	brne	.+20     	; 0xb1a <FAT_tableFindFree+0xb0>
     b06:	fc 01       	movw	r30, r24
     b08:	e5 52       	subi	r30, 0x25	; 37
     b0a:	fb 4f       	sbci	r31, 0xFB	; 251
     b0c:	c0 80       	ld	r12, Z
     b0e:	fc 01       	movw	r30, r24
     b10:	31 96       	adiw	r30, 0x01	; 1
     b12:	e5 52       	subi	r30, 0x25	; 37
     b14:	fb 4f       	sbci	r31, 0xFB	; 251
     b16:	02 96       	adiw	r24, 0x02	; 2
     b18:	d0 80       	ld	r13, Z
     b1a:	c1 14       	cp	r12, r1
     b1c:	d1 04       	cpc	r13, r1
     b1e:	e1 04       	cpc	r14, r1
     b20:	f1 04       	cpc	r15, r1
     b22:	41 f4       	brne	.+16     	; 0xb34 <FAT_tableFindFree+0xca>
     b24:	2f ef       	ldi	r18, 0xFF	; 255
     b26:	42 1a       	sub	r4, r18
     b28:	52 0a       	sbc	r5, r18
     b2a:	62 0a       	sbc	r6, r18
     b2c:	72 0a       	sbc	r7, r18
     b2e:	23 e0       	ldi	r18, 0x03	; 3
     b30:	32 16       	cp	r3, r18
     b32:	b9 f1       	breq	.+110    	; 0xba2 <FAT_tableFindFree+0x138>
     b34:	2f ef       	ldi	r18, 0xFF	; 255
     b36:	82 1a       	sub	r8, r18
     b38:	92 0a       	sbc	r9, r18
     b3a:	a2 0a       	sbc	r10, r18
     b3c:	b2 0a       	sbc	r11, r18
     b3e:	40 91 3d 03 	lds	r20, 0x033D	; 0x80033d <fat_obj+0x14>
     b42:	50 91 3e 03 	lds	r21, 0x033E	; 0x80033e <fat_obj+0x15>
     b46:	60 91 3f 03 	lds	r22, 0x033F	; 0x80033f <fat_obj+0x16>
     b4a:	70 91 40 03 	lds	r23, 0x0340	; 0x800340 <fat_obj+0x17>
     b4e:	4e 5f       	subi	r20, 0xFE	; 254
     b50:	5f 4f       	sbci	r21, 0xFF	; 255
     b52:	6f 4f       	sbci	r22, 0xFF	; 255
     b54:	7f 4f       	sbci	r23, 0xFF	; 255
     b56:	48 15       	cp	r20, r8
     b58:	59 05       	cpc	r21, r9
     b5a:	6a 05       	cpc	r22, r10
     b5c:	7b 05       	cpc	r23, r11
     b5e:	20 f0       	brcs	.+8      	; 0xb68 <FAT_tableFindFree+0xfe>
     b60:	8c 17       	cp	r24, r28
     b62:	9d 07       	cpc	r25, r29
     b64:	08 f4       	brcc	.+2      	; 0xb68 <FAT_tableFindFree+0xfe>
     b66:	b4 cf       	rjmp	.-152    	; 0xad0 <FAT_tableFindFree+0x66>
     b68:	0f 5f       	subi	r16, 0xFF	; 255
     b6a:	1f 4f       	sbci	r17, 0xFF	; 255
     b6c:	c8 01       	movw	r24, r16
     b6e:	a0 e0       	ldi	r26, 0x00	; 0
     b70:	b0 e0       	ldi	r27, 0x00	; 0
     b72:	40 91 35 03 	lds	r20, 0x0335	; 0x800335 <fat_obj+0xc>
     b76:	50 91 36 03 	lds	r21, 0x0336	; 0x800336 <fat_obj+0xd>
     b7a:	60 91 37 03 	lds	r22, 0x0337	; 0x800337 <fat_obj+0xe>
     b7e:	70 91 38 03 	lds	r23, 0x0338	; 0x800338 <fat_obj+0xf>
     b82:	84 17       	cp	r24, r20
     b84:	95 07       	cpc	r25, r21
     b86:	a6 07       	cpc	r26, r22
     b88:	b7 07       	cpc	r27, r23
     b8a:	08 f4       	brcc	.+2      	; 0xb8e <FAT_tableFindFree+0x124>
     b8c:	90 cf       	rjmp	.-224    	; 0xaae <FAT_tableFindFree+0x44>
     b8e:	64 2d       	mov	r22, r4
     b90:	75 2d       	mov	r23, r5
     b92:	86 2d       	mov	r24, r6
     b94:	97 2d       	mov	r25, r7
     b96:	09 c0       	rjmp	.+18     	; 0xbaa <FAT_tableFindFree+0x140>
     b98:	60 e0       	ldi	r22, 0x00	; 0
     b9a:	70 e0       	ldi	r23, 0x00	; 0
     b9c:	80 e0       	ldi	r24, 0x00	; 0
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	04 c0       	rjmp	.+8      	; 0xbaa <FAT_tableFindFree+0x140>
     ba2:	68 2d       	mov	r22, r8
     ba4:	79 2d       	mov	r23, r9
     ba6:	8a 2d       	mov	r24, r10
     ba8:	9b 2d       	mov	r25, r11
     baa:	df 91       	pop	r29
     bac:	cf 91       	pop	r28
     bae:	1f 91       	pop	r17
     bb0:	0f 91       	pop	r16
     bb2:	ff 90       	pop	r15
     bb4:	ef 90       	pop	r14
     bb6:	df 90       	pop	r13
     bb8:	cf 90       	pop	r12
     bba:	bf 90       	pop	r11
     bbc:	af 90       	pop	r10
     bbe:	9f 90       	pop	r9
     bc0:	8f 90       	pop	r8
     bc2:	7f 90       	pop	r7
     bc4:	6f 90       	pop	r6
     bc6:	5f 90       	pop	r5
     bc8:	4f 90       	pop	r4
     bca:	3f 90       	pop	r3
     bcc:	08 95       	ret

00000bce <_FAT_tableReadSet>:
     bce:	3f 92       	push	r3
     bd0:	4f 92       	push	r4
     bd2:	5f 92       	push	r5
     bd4:	6f 92       	push	r6
     bd6:	7f 92       	push	r7
     bd8:	8f 92       	push	r8
     bda:	9f 92       	push	r9
     bdc:	af 92       	push	r10
     bde:	bf 92       	push	r11
     be0:	cf 92       	push	r12
     be2:	df 92       	push	r13
     be4:	ef 92       	push	r14
     be6:	ff 92       	push	r15
     be8:	0f 93       	push	r16
     bea:	1f 93       	push	r17
     bec:	cf 93       	push	r28
     bee:	df 93       	push	r29
     bf0:	00 d0       	rcall	.+0      	; 0xbf2 <_FAT_tableReadSet+0x24>
     bf2:	00 d0       	rcall	.+0      	; 0xbf4 <_FAT_tableReadSet+0x26>
     bf4:	cd b7       	in	r28, 0x3d	; 61
     bf6:	de b7       	in	r29, 0x3e	; 62
     bf8:	6b 01       	movw	r12, r22
     bfa:	7c 01       	movw	r14, r24
     bfc:	29 83       	std	Y+1, r18	; 0x01
     bfe:	3a 83       	std	Y+2, r19	; 0x02
     c00:	4b 83       	std	Y+3, r20	; 0x03
     c02:	5c 83       	std	Y+4, r21	; 0x04
     c04:	30 2e       	mov	r3, r16
     c06:	2b 01       	movw	r4, r22
     c08:	3c 01       	movw	r6, r24
     c0a:	00 90 50 03 	lds	r0, 0x0350	; 0x800350 <fat_obj+0x27>
     c0e:	04 c0       	rjmp	.+8      	; 0xc18 <_FAT_tableReadSet+0x4a>
     c10:	44 0c       	add	r4, r4
     c12:	55 1c       	adc	r5, r5
     c14:	66 1c       	adc	r6, r6
     c16:	77 1c       	adc	r7, r7
     c18:	0a 94       	dec	r0
     c1a:	d2 f7       	brpl	.-12     	; 0xc10 <_FAT_tableReadSet+0x42>
     c1c:	00 91 41 03 	lds	r16, 0x0341	; 0x800341 <fat_obj+0x18>
     c20:	10 91 42 03 	lds	r17, 0x0342	; 0x800342 <fat_obj+0x19>
     c24:	98 01       	movw	r18, r16
     c26:	40 e0       	ldi	r20, 0x00	; 0
     c28:	50 e0       	ldi	r21, 0x00	; 0
     c2a:	c3 01       	movw	r24, r6
     c2c:	b2 01       	movw	r22, r4
     c2e:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <__udivmodsi4>
     c32:	49 01       	movw	r8, r18
     c34:	5a 01       	movw	r10, r20
     c36:	02 9f       	mul	r16, r18
     c38:	c0 01       	movw	r24, r0
     c3a:	03 9f       	mul	r16, r19
     c3c:	90 0d       	add	r25, r0
     c3e:	12 9f       	mul	r17, r18
     c40:	90 0d       	add	r25, r0
     c42:	11 24       	eor	r1, r1
     c44:	82 01       	movw	r16, r4
     c46:	08 1b       	sub	r16, r24
     c48:	19 0b       	sbc	r17, r25
     c4a:	10 92 55 03 	sts	0x0355, r1	; 0x800355 <bufferModBy+0x1>
     c4e:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <bufferModBy>
     c52:	60 91 49 03 	lds	r22, 0x0349	; 0x800349 <fat_obj+0x20>
     c56:	70 91 4a 03 	lds	r23, 0x034A	; 0x80034a <fat_obj+0x21>
     c5a:	62 0f       	add	r22, r18
     c5c:	73 1f       	adc	r23, r19
     c5e:	80 e0       	ldi	r24, 0x00	; 0
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	4b ed       	ldi	r20, 0xDB	; 219
     c64:	54 e0       	ldi	r21, 0x04	; 4
     c66:	0e 94 c3 04 	call	0x986	; 0x986 <sd_read_single_block>
     c6a:	81 11       	cpse	r24, r1
     c6c:	b6 c0       	rjmp	.+364    	; 0xdda <_FAT_tableReadSet+0x20c>
     c6e:	2d e0       	ldi	r18, 0x0D	; 13
     c70:	32 16       	cp	r3, r18
     c72:	19 f0       	breq	.+6      	; 0xc7a <_FAT_tableReadSet+0xac>
     c74:	37 e0       	ldi	r19, 0x07	; 7
     c76:	33 12       	cpse	r3, r19
     c78:	33 c0       	rjmp	.+102    	; 0xce0 <_FAT_tableReadSet+0x112>
     c7a:	f8 01       	movw	r30, r16
     c7c:	e5 52       	subi	r30, 0x25	; 37
     c7e:	fb 4f       	sbci	r31, 0xFB	; 251
     c80:	80 81       	ld	r24, Z
     c82:	f8 01       	movw	r30, r16
     c84:	e4 52       	subi	r30, 0x24	; 36
     c86:	fb 4f       	sbci	r31, 0xFB	; 251
     c88:	c0 80       	ld	r12, Z
     c8a:	d1 2c       	mov	r13, r1
     c8c:	dc 2c       	mov	r13, r12
     c8e:	cc 24       	eor	r12, r12
     c90:	0d 2c       	mov	r0, r13
     c92:	00 0c       	add	r0, r0
     c94:	ee 08       	sbc	r14, r14
     c96:	ff 08       	sbc	r15, r15
     c98:	c8 2a       	or	r12, r24
     c9a:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <fat_obj+0x27>
     c9e:	82 30       	cpi	r24, 0x02	; 2
     ca0:	f9 f4       	brne	.+62     	; 0xce0 <_FAT_tableReadSet+0x112>
     ca2:	f8 01       	movw	r30, r16
     ca4:	e3 52       	subi	r30, 0x23	; 35
     ca6:	fb 4f       	sbci	r31, 0xFB	; 251
     ca8:	80 81       	ld	r24, Z
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	a0 e0       	ldi	r26, 0x00	; 0
     cae:	b0 e0       	ldi	r27, 0x00	; 0
     cb0:	dc 01       	movw	r26, r24
     cb2:	99 27       	eor	r25, r25
     cb4:	88 27       	eor	r24, r24
     cb6:	c8 2a       	or	r12, r24
     cb8:	d9 2a       	or	r13, r25
     cba:	ea 2a       	or	r14, r26
     cbc:	fb 2a       	or	r15, r27
     cbe:	f8 01       	movw	r30, r16
     cc0:	e2 52       	subi	r30, 0x22	; 34
     cc2:	fb 4f       	sbci	r31, 0xFB	; 251
     cc4:	80 81       	ld	r24, Z
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	a0 e0       	ldi	r26, 0x00	; 0
     cca:	b0 e0       	ldi	r27, 0x00	; 0
     ccc:	b8 2f       	mov	r27, r24
     cce:	aa 27       	eor	r26, r26
     cd0:	99 27       	eor	r25, r25
     cd2:	88 27       	eor	r24, r24
     cd4:	c8 2a       	or	r12, r24
     cd6:	d9 2a       	or	r13, r25
     cd8:	ea 2a       	or	r14, r26
     cda:	fb 2a       	or	r15, r27
     cdc:	4f e0       	ldi	r20, 0x0F	; 15
     cde:	f4 22       	and	r15, r20
     ce0:	5d e0       	ldi	r21, 0x0D	; 13
     ce2:	35 12       	cpse	r3, r21
     ce4:	05 c0       	rjmp	.+10     	; 0xcf0 <_FAT_tableReadSet+0x122>
     ce6:	c1 14       	cp	r12, r1
     ce8:	d1 04       	cpc	r13, r1
     cea:	e1 04       	cpc	r14, r1
     cec:	f1 04       	cpc	r15, r1
     cee:	19 f4       	brne	.+6      	; 0xcf6 <_FAT_tableReadSet+0x128>
     cf0:	86 e0       	ldi	r24, 0x06	; 6
     cf2:	38 12       	cpse	r3, r24
     cf4:	77 c0       	rjmp	.+238    	; 0xde4 <_FAT_tableReadSet+0x216>
     cf6:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <fat_obj+0x27>
     cfa:	82 30       	cpi	r24, 0x02	; 2
     cfc:	09 f0       	breq	.+2      	; 0xd00 <_FAT_tableReadSet+0x132>
     cfe:	3f c0       	rjmp	.+126    	; 0xd7e <_FAT_tableReadSet+0x1b0>
     d00:	f8 01       	movw	r30, r16
     d02:	e5 52       	subi	r30, 0x25	; 37
     d04:	fb 4f       	sbci	r31, 0xFB	; 251
     d06:	20 81       	ld	r18, Z
     d08:	f8 01       	movw	r30, r16
     d0a:	e4 52       	subi	r30, 0x24	; 36
     d0c:	fb 4f       	sbci	r31, 0xFB	; 251
     d0e:	80 81       	ld	r24, Z
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	98 2f       	mov	r25, r24
     d14:	88 27       	eor	r24, r24
     d16:	09 2e       	mov	r0, r25
     d18:	00 0c       	add	r0, r0
     d1a:	aa 0b       	sbc	r26, r26
     d1c:	bb 0b       	sbc	r27, r27
     d1e:	ac 01       	movw	r20, r24
     d20:	bd 01       	movw	r22, r26
     d22:	42 2b       	or	r20, r18
     d24:	f8 01       	movw	r30, r16
     d26:	e3 52       	subi	r30, 0x23	; 35
     d28:	fb 4f       	sbci	r31, 0xFB	; 251
     d2a:	80 81       	ld	r24, Z
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	a0 e0       	ldi	r26, 0x00	; 0
     d30:	b0 e0       	ldi	r27, 0x00	; 0
     d32:	dc 01       	movw	r26, r24
     d34:	99 27       	eor	r25, r25
     d36:	88 27       	eor	r24, r24
     d38:	84 2b       	or	r24, r20
     d3a:	95 2b       	or	r25, r21
     d3c:	a6 2b       	or	r26, r22
     d3e:	b7 2b       	or	r27, r23
     d40:	f8 01       	movw	r30, r16
     d42:	e2 52       	subi	r30, 0x22	; 34
     d44:	fb 4f       	sbci	r31, 0xFB	; 251
     d46:	40 81       	ld	r20, Z
     d48:	50 e0       	ldi	r21, 0x00	; 0
     d4a:	60 e0       	ldi	r22, 0x00	; 0
     d4c:	70 e0       	ldi	r23, 0x00	; 0
     d4e:	74 2f       	mov	r23, r20
     d50:	66 27       	eor	r22, r22
     d52:	55 27       	eor	r21, r21
     d54:	44 27       	eor	r20, r20
     d56:	84 2b       	or	r24, r20
     d58:	95 2b       	or	r25, r21
     d5a:	a6 2b       	or	r26, r22
     d5c:	b7 2b       	or	r27, r23
     d5e:	88 27       	eor	r24, r24
     d60:	99 27       	eor	r25, r25
     d62:	aa 27       	eor	r26, r26
     d64:	b0 7f       	andi	r27, 0xF0	; 240
     d66:	29 81       	ldd	r18, Y+1	; 0x01
     d68:	3a 81       	ldd	r19, Y+2	; 0x02
     d6a:	4b 81       	ldd	r20, Y+3	; 0x03
     d6c:	5c 81       	ldd	r21, Y+4	; 0x04
     d6e:	28 2b       	or	r18, r24
     d70:	39 2b       	or	r19, r25
     d72:	4a 2b       	or	r20, r26
     d74:	5b 2b       	or	r21, r27
     d76:	29 83       	std	Y+1, r18	; 0x01
     d78:	3a 83       	std	Y+2, r19	; 0x02
     d7a:	4b 83       	std	Y+3, r20	; 0x03
     d7c:	5c 83       	std	Y+4, r21	; 0x04
     d7e:	f8 01       	movw	r30, r16
     d80:	e5 52       	subi	r30, 0x25	; 37
     d82:	fb 4f       	sbci	r31, 0xFB	; 251
     d84:	39 81       	ldd	r19, Y+1	; 0x01
     d86:	30 83       	st	Z, r19
     d88:	f8 01       	movw	r30, r16
     d8a:	e4 52       	subi	r30, 0x24	; 36
     d8c:	fb 4f       	sbci	r31, 0xFB	; 251
     d8e:	4a 81       	ldd	r20, Y+2	; 0x02
     d90:	40 83       	st	Z, r20
     d92:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <fat_obj+0x27>
     d96:	82 30       	cpi	r24, 0x02	; 2
     d98:	51 f4       	brne	.+20     	; 0xdae <_FAT_tableReadSet+0x1e0>
     d9a:	f8 01       	movw	r30, r16
     d9c:	e3 52       	subi	r30, 0x23	; 35
     d9e:	fb 4f       	sbci	r31, 0xFB	; 251
     da0:	5b 81       	ldd	r21, Y+3	; 0x03
     da2:	50 83       	st	Z, r21
     da4:	f8 01       	movw	r30, r16
     da6:	e2 52       	subi	r30, 0x22	; 34
     da8:	fb 4f       	sbci	r31, 0xFB	; 251
     daa:	8c 81       	ldd	r24, Y+4	; 0x04
     dac:	80 83       	st	Z, r24
     dae:	60 91 49 03 	lds	r22, 0x0349	; 0x800349 <fat_obj+0x20>
     db2:	70 91 4a 03 	lds	r23, 0x034A	; 0x80034a <fat_obj+0x21>
     db6:	86 0e       	add	r8, r22
     db8:	97 1e       	adc	r9, r23
     dba:	b4 01       	movw	r22, r8
     dbc:	80 e0       	ldi	r24, 0x00	; 0
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	4b ed       	ldi	r20, 0xDB	; 219
     dc2:	54 e0       	ldi	r21, 0x04	; 4
     dc4:	0e 94 03 04 	call	0x806	; 0x806 <sd_write_single_block>
     dc8:	80 91 57 04 	lds	r24, 0x0457	; 0x800457 <SD_ResponseToken>
     dcc:	85 30       	cpi	r24, 0x05	; 5
     dce:	79 f0       	breq	.+30     	; 0xdee <_FAT_tableReadSet+0x220>
     dd0:	60 e0       	ldi	r22, 0x00	; 0
     dd2:	70 e0       	ldi	r23, 0x00	; 0
     dd4:	80 e0       	ldi	r24, 0x00	; 0
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	0e c0       	rjmp	.+28     	; 0xdf6 <_FAT_tableReadSet+0x228>
     dda:	60 e0       	ldi	r22, 0x00	; 0
     ddc:	70 e0       	ldi	r23, 0x00	; 0
     dde:	80 e0       	ldi	r24, 0x00	; 0
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	09 c0       	rjmp	.+18     	; 0xdf6 <_FAT_tableReadSet+0x228>
     de4:	6c 2d       	mov	r22, r12
     de6:	7d 2d       	mov	r23, r13
     de8:	8e 2d       	mov	r24, r14
     dea:	9f 2d       	mov	r25, r15
     dec:	04 c0       	rjmp	.+8      	; 0xdf6 <_FAT_tableReadSet+0x228>
     dee:	6c 2d       	mov	r22, r12
     df0:	7d 2d       	mov	r23, r13
     df2:	8e 2d       	mov	r24, r14
     df4:	9f 2d       	mov	r25, r15
     df6:	0f 90       	pop	r0
     df8:	0f 90       	pop	r0
     dfa:	0f 90       	pop	r0
     dfc:	0f 90       	pop	r0
     dfe:	df 91       	pop	r29
     e00:	cf 91       	pop	r28
     e02:	1f 91       	pop	r17
     e04:	0f 91       	pop	r16
     e06:	ff 90       	pop	r15
     e08:	ef 90       	pop	r14
     e0a:	df 90       	pop	r13
     e0c:	cf 90       	pop	r12
     e0e:	bf 90       	pop	r11
     e10:	af 90       	pop	r10
     e12:	9f 90       	pop	r9
     e14:	8f 90       	pop	r8
     e16:	7f 90       	pop	r7
     e18:	6f 90       	pop	r6
     e1a:	5f 90       	pop	r5
     e1c:	4f 90       	pop	r4
     e1e:	3f 90       	pop	r3
     e20:	08 95       	ret

00000e22 <_FAT_allocateCluster>:
     e22:	cf 92       	push	r12
     e24:	df 92       	push	r13
     e26:	ef 92       	push	r14
     e28:	ff 92       	push	r15
     e2a:	0f 93       	push	r16
     e2c:	1f 93       	push	r17
     e2e:	cf 93       	push	r28
     e30:	df 93       	push	r29
     e32:	ec 01       	movw	r28, r24
     e34:	6a 01       	movw	r12, r20
     e36:	7b 01       	movw	r14, r22
     e38:	83 e0       	ldi	r24, 0x03	; 3
     e3a:	0e 94 35 05 	call	0xa6a	; 0xa6a <FAT_tableFindFree>
     e3e:	68 83       	st	Y, r22
     e40:	79 83       	std	Y+1, r23	; 0x01
     e42:	8a 83       	std	Y+2, r24	; 0x02
     e44:	9b 83       	std	Y+3, r25	; 0x03
     e46:	62 30       	cpi	r22, 0x02	; 2
     e48:	71 05       	cpc	r23, r1
     e4a:	81 05       	cpc	r24, r1
     e4c:	91 05       	cpc	r25, r1
     e4e:	58 f1       	brcs	.+86     	; 0xea6 <_FAT_allocateCluster+0x84>
     e50:	00 91 31 03 	lds	r16, 0x0331	; 0x800331 <fat_obj+0x8>
     e54:	10 91 32 03 	lds	r17, 0x0332	; 0x800332 <fat_obj+0x9>
     e58:	20 91 33 03 	lds	r18, 0x0333	; 0x800333 <fat_obj+0xa>
     e5c:	30 91 34 03 	lds	r19, 0x0334	; 0x800334 <fat_obj+0xb>
     e60:	0c 15       	cp	r16, r12
     e62:	1d 05       	cpc	r17, r13
     e64:	2e 05       	cpc	r18, r14
     e66:	3f 05       	cpc	r19, r15
     e68:	89 f0       	breq	.+34     	; 0xe8c <_FAT_allocateCluster+0x6a>
     e6a:	06 e0       	ldi	r16, 0x06	; 6
     e6c:	9b 01       	movw	r18, r22
     e6e:	ac 01       	movw	r20, r24
     e70:	c7 01       	movw	r24, r14
     e72:	b6 01       	movw	r22, r12
     e74:	0e 94 e7 05 	call	0xbce	; 0xbce <_FAT_tableReadSet>
     e78:	66 23       	and	r22, r22
     e7a:	b9 f0       	breq	.+46     	; 0xeaa <_FAT_allocateCluster+0x88>
     e7c:	c0 90 31 03 	lds	r12, 0x0331	; 0x800331 <fat_obj+0x8>
     e80:	d0 90 32 03 	lds	r13, 0x0332	; 0x800332 <fat_obj+0x9>
     e84:	e0 90 33 03 	lds	r14, 0x0333	; 0x800333 <fat_obj+0xa>
     e88:	f0 90 34 03 	lds	r15, 0x0334	; 0x800334 <fat_obj+0xb>
     e8c:	68 81       	ld	r22, Y
     e8e:	79 81       	ldd	r23, Y+1	; 0x01
     e90:	8a 81       	ldd	r24, Y+2	; 0x02
     e92:	9b 81       	ldd	r25, Y+3	; 0x03
     e94:	06 e0       	ldi	r16, 0x06	; 6
     e96:	a7 01       	movw	r20, r14
     e98:	96 01       	movw	r18, r12
     e9a:	0e 94 e7 05 	call	0xbce	; 0xbce <_FAT_tableReadSet>
     e9e:	61 11       	cpse	r22, r1
     ea0:	06 c0       	rjmp	.+12     	; 0xeae <_FAT_allocateCluster+0x8c>
     ea2:	8c e0       	ldi	r24, 0x0C	; 12
     ea4:	05 c0       	rjmp	.+10     	; 0xeb0 <_FAT_allocateCluster+0x8e>
     ea6:	84 e0       	ldi	r24, 0x04	; 4
     ea8:	03 c0       	rjmp	.+6      	; 0xeb0 <_FAT_allocateCluster+0x8e>
     eaa:	8c e0       	ldi	r24, 0x0C	; 12
     eac:	01 c0       	rjmp	.+2      	; 0xeb0 <_FAT_allocateCluster+0x8e>
     eae:	80 e0       	ldi	r24, 0x00	; 0
     eb0:	df 91       	pop	r29
     eb2:	cf 91       	pop	r28
     eb4:	1f 91       	pop	r17
     eb6:	0f 91       	pop	r16
     eb8:	ff 90       	pop	r15
     eba:	ef 90       	pop	r14
     ebc:	df 90       	pop	r13
     ebe:	cf 90       	pop	r12
     ec0:	08 95       	ret

00000ec2 <_FAT_nextFileCluster>:
     ec2:	0f 93       	push	r16
     ec4:	1f 93       	push	r17
     ec6:	cf 93       	push	r28
     ec8:	df 93       	push	r29
     eca:	fc 01       	movw	r30, r24
     ecc:	64 85       	ldd	r22, Z+12	; 0x0c
     ece:	75 85       	ldd	r23, Z+13	; 0x0d
     ed0:	86 85       	ldd	r24, Z+14	; 0x0e
     ed2:	97 85       	ldd	r25, Z+15	; 0x0f
     ed4:	62 30       	cpi	r22, 0x02	; 2
     ed6:	71 05       	cpc	r23, r1
     ed8:	81 05       	cpc	r24, r1
     eda:	91 05       	cpc	r25, r1
     edc:	78 f1       	brcs	.+94     	; 0xf3c <_FAT_nextFileCluster+0x7a>
     ede:	ef 01       	movw	r28, r30
     ee0:	07 e0       	ldi	r16, 0x07	; 7
     ee2:	20 e0       	ldi	r18, 0x00	; 0
     ee4:	30 e0       	ldi	r19, 0x00	; 0
     ee6:	a9 01       	movw	r20, r18
     ee8:	0e 94 e7 05 	call	0xbce	; 0xbce <_FAT_tableReadSet>
     eec:	6c 87       	std	Y+12, r22	; 0x0c
     eee:	7d 87       	std	Y+13, r23	; 0x0d
     ef0:	8e 87       	std	Y+14, r24	; 0x0e
     ef2:	9f 87       	std	Y+15, r25	; 0x0f
     ef4:	1d 8e       	std	Y+29, r1	; 0x1d
     ef6:	1c 8e       	std	Y+28, r1	; 0x1c
     ef8:	00 91 31 03 	lds	r16, 0x0331	; 0x800331 <fat_obj+0x8>
     efc:	10 91 32 03 	lds	r17, 0x0332	; 0x800332 <fat_obj+0x9>
     f00:	20 91 33 03 	lds	r18, 0x0333	; 0x800333 <fat_obj+0xa>
     f04:	30 91 34 03 	lds	r19, 0x0334	; 0x800334 <fat_obj+0xb>
     f08:	60 17       	cp	r22, r16
     f0a:	71 07       	cpc	r23, r17
     f0c:	82 07       	cpc	r24, r18
     f0e:	93 07       	cpc	r25, r19
     f10:	21 f4       	brne	.+8      	; 0xf1a <_FAT_nextFileCluster+0x58>
     f12:	81 e0       	ldi	r24, 0x01	; 1
     f14:	8e a3       	std	Y+38, r24	; 0x26
     f16:	82 e0       	ldi	r24, 0x02	; 2
     f18:	12 c0       	rjmp	.+36     	; 0xf3e <_FAT_nextFileCluster+0x7c>
     f1a:	61 15       	cp	r22, r1
     f1c:	71 05       	cpc	r23, r1
     f1e:	81 05       	cpc	r24, r1
     f20:	91 05       	cpc	r25, r1
     f22:	21 f4       	brne	.+8      	; 0xf2c <_FAT_nextFileCluster+0x6a>
     f24:	8c e0       	ldi	r24, 0x0C	; 12
     f26:	89 a3       	std	Y+33, r24	; 0x21
     f28:	83 e0       	ldi	r24, 0x03	; 3
     f2a:	09 c0       	rjmp	.+18     	; 0xf3e <_FAT_nextFileCluster+0x7c>
     f2c:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_FAT_clusterToSector>
     f30:	68 8f       	std	Y+24, r22	; 0x18
     f32:	79 8f       	std	Y+25, r23	; 0x19
     f34:	8a 8f       	std	Y+26, r24	; 0x1a
     f36:	9b 8f       	std	Y+27, r25	; 0x1b
     f38:	80 e0       	ldi	r24, 0x00	; 0
     f3a:	01 c0       	rjmp	.+2      	; 0xf3e <_FAT_nextFileCluster+0x7c>
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	df 91       	pop	r29
     f40:	cf 91       	pop	r28
     f42:	1f 91       	pop	r17
     f44:	0f 91       	pop	r16
     f46:	08 95       	ret

00000f48 <_FAT_getFileNextSector>:
     f48:	0f 93       	push	r16
     f4a:	1f 93       	push	r17
     f4c:	cf 93       	push	r28
     f4e:	df 93       	push	r29
     f50:	ec 01       	movw	r28, r24
     f52:	88 81       	ld	r24, Y
     f54:	99 81       	ldd	r25, Y+1	; 0x01
     f56:	aa 81       	ldd	r26, Y+2	; 0x02
     f58:	bb 81       	ldd	r27, Y+3	; 0x03
     f5a:	02 97       	sbiw	r24, 0x02	; 2
     f5c:	a1 05       	cpc	r26, r1
     f5e:	b1 05       	cpc	r27, r1
     f60:	30 f4       	brcc	.+12     	; 0xf6e <_FAT_getFileNextSector+0x26>
     f62:	80 91 43 03 	lds	r24, 0x0343	; 0x800343 <fat_obj+0x1a>
     f66:	90 91 44 03 	lds	r25, 0x0344	; 0x800344 <fat_obj+0x1b>
     f6a:	41 e0       	ldi	r20, 0x01	; 1
     f6c:	04 c0       	rjmp	.+8      	; 0xf76 <_FAT_getFileNextSector+0x2e>
     f6e:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <fat_obj+0x28>
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	40 e0       	ldi	r20, 0x00	; 0
     f76:	28 89       	ldd	r18, Y+16	; 0x10
     f78:	39 89       	ldd	r19, Y+17	; 0x11
     f7a:	28 17       	cp	r18, r24
     f7c:	39 07       	cpc	r19, r25
     f7e:	28 f1       	brcs	.+74     	; 0xfca <_FAT_getFileNextSector+0x82>
     f80:	41 11       	cpse	r20, r1
     f82:	3c c0       	rjmp	.+120    	; 0xffc <_FAT_getFileNextSector+0xb4>
     f84:	6c 81       	ldd	r22, Y+4	; 0x04
     f86:	7d 81       	ldd	r23, Y+5	; 0x05
     f88:	8e 81       	ldd	r24, Y+6	; 0x06
     f8a:	9f 81       	ldd	r25, Y+7	; 0x07
     f8c:	07 e0       	ldi	r16, 0x07	; 7
     f8e:	20 e0       	ldi	r18, 0x00	; 0
     f90:	30 e0       	ldi	r19, 0x00	; 0
     f92:	a9 01       	movw	r20, r18
     f94:	0e 94 e7 05 	call	0xbce	; 0xbce <_FAT_tableReadSet>
     f98:	6c 83       	std	Y+4, r22	; 0x04
     f9a:	7d 83       	std	Y+5, r23	; 0x05
     f9c:	8e 83       	std	Y+6, r24	; 0x06
     f9e:	9f 83       	std	Y+7, r25	; 0x07
     fa0:	00 91 31 03 	lds	r16, 0x0331	; 0x800331 <fat_obj+0x8>
     fa4:	10 91 32 03 	lds	r17, 0x0332	; 0x800332 <fat_obj+0x9>
     fa8:	20 91 33 03 	lds	r18, 0x0333	; 0x800333 <fat_obj+0xa>
     fac:	30 91 34 03 	lds	r19, 0x0334	; 0x800334 <fat_obj+0xb>
     fb0:	60 17       	cp	r22, r16
     fb2:	71 07       	cpc	r23, r17
     fb4:	82 07       	cpc	r24, r18
     fb6:	93 07       	cpc	r25, r19
     fb8:	19 f1       	breq	.+70     	; 0x1000 <_FAT_getFileNextSector+0xb8>
     fba:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_FAT_clusterToSector>
     fbe:	68 87       	std	Y+8, r22	; 0x08
     fc0:	79 87       	std	Y+9, r23	; 0x09
     fc2:	8a 87       	std	Y+10, r24	; 0x0a
     fc4:	9b 87       	std	Y+11, r25	; 0x0b
     fc6:	19 8a       	std	Y+17, r1	; 0x11
     fc8:	18 8a       	std	Y+16, r1	; 0x10
     fca:	88 85       	ldd	r24, Y+8	; 0x08
     fcc:	99 85       	ldd	r25, Y+9	; 0x09
     fce:	aa 85       	ldd	r26, Y+10	; 0x0a
     fd0:	bb 85       	ldd	r27, Y+11	; 0x0b
     fd2:	28 89       	ldd	r18, Y+16	; 0x10
     fd4:	39 89       	ldd	r19, Y+17	; 0x11
     fd6:	bc 01       	movw	r22, r24
     fd8:	cd 01       	movw	r24, r26
     fda:	62 0f       	add	r22, r18
     fdc:	73 1f       	adc	r23, r19
     fde:	81 1d       	adc	r24, r1
     fe0:	91 1d       	adc	r25, r1
     fe2:	4b ed       	ldi	r20, 0xDB	; 219
     fe4:	54 e0       	ldi	r21, 0x04	; 4
     fe6:	0e 94 c3 04 	call	0x986	; 0x986 <sd_read_single_block>
     fea:	81 11       	cpse	r24, r1
     fec:	0b c0       	rjmp	.+22     	; 0x1004 <_FAT_getFileNextSector+0xbc>
     fee:	88 89       	ldd	r24, Y+16	; 0x10
     ff0:	99 89       	ldd	r25, Y+17	; 0x11
     ff2:	01 96       	adiw	r24, 0x01	; 1
     ff4:	99 8b       	std	Y+17, r25	; 0x11
     ff6:	88 8b       	std	Y+16, r24	; 0x10
     ff8:	80 e0       	ldi	r24, 0x00	; 0
     ffa:	05 c0       	rjmp	.+10     	; 0x1006 <_FAT_getFileNextSector+0xbe>
     ffc:	81 e0       	ldi	r24, 0x01	; 1
     ffe:	03 c0       	rjmp	.+6      	; 0x1006 <_FAT_getFileNextSector+0xbe>
    1000:	81 e0       	ldi	r24, 0x01	; 1
    1002:	01 c0       	rjmp	.+2      	; 0x1006 <_FAT_getFileNextSector+0xbe>
    1004:	8c e0       	ldi	r24, 0x0C	; 12
    1006:	df 91       	pop	r29
    1008:	cf 91       	pop	r28
    100a:	1f 91       	pop	r17
    100c:	0f 91       	pop	r16
    100e:	08 95       	ret

00001010 <_FAT_followPath>:
    1010:	6f 92       	push	r6
    1012:	7f 92       	push	r7
    1014:	8f 92       	push	r8
    1016:	9f 92       	push	r9
    1018:	af 92       	push	r10
    101a:	bf 92       	push	r11
    101c:	cf 92       	push	r12
    101e:	df 92       	push	r13
    1020:	ef 92       	push	r14
    1022:	ff 92       	push	r15
    1024:	0f 93       	push	r16
    1026:	1f 93       	push	r17
    1028:	cf 93       	push	r28
    102a:	df 93       	push	r29
    102c:	6c 01       	movw	r12, r24
    102e:	eb 01       	movw	r28, r22
    1030:	a4 2e       	mov	r10, r20
    1032:	71 2c       	mov	r7, r1
    1034:	81 2c       	mov	r8, r1
    1036:	fc 01       	movw	r30, r24
    1038:	75 87       	std	Z+13, r23	; 0x0d
    103a:	64 87       	std	Z+12, r22	; 0x0c
    103c:	11 8a       	std	Z+17, r1	; 0x11
    103e:	10 8a       	std	Z+16, r1	; 0x10
    1040:	13 8a       	std	Z+19, r1	; 0x13
    1042:	12 8a       	std	Z+18, r1	; 0x12
    1044:	00 e0       	ldi	r16, 0x00	; 0
    1046:	eb c0       	rjmp	.+470    	; 0x121e <_FAT_followPath+0x20e>
    1048:	f0 e2       	ldi	r31, 0x20	; 32
    104a:	1f 9f       	mul	r17, r31
    104c:	70 01       	movw	r14, r0
    104e:	11 24       	eor	r1, r1
    1050:	f7 01       	movw	r30, r14
    1052:	e5 52       	subi	r30, 0x25	; 37
    1054:	fb 4f       	sbci	r31, 0xFB	; 251
    1056:	80 81       	ld	r24, Z
    1058:	88 23       	and	r24, r24
    105a:	09 f4       	brne	.+2      	; 0x105e <_FAT_followPath+0x4e>
    105c:	eb c0       	rjmp	.+470    	; 0x1234 <_FAT_followPath+0x224>
    105e:	85 3e       	cpi	r24, 0xE5	; 229
    1060:	09 f4       	brne	.+2      	; 0x1064 <_FAT_followPath+0x54>
    1062:	d4 c0       	rjmp	.+424    	; 0x120c <_FAT_followPath+0x1fc>
    1064:	8e 32       	cpi	r24, 0x2E	; 46
    1066:	09 f4       	brne	.+2      	; 0x106a <_FAT_followPath+0x5a>
    1068:	d1 c0       	rjmp	.+418    	; 0x120c <_FAT_followPath+0x1fc>
    106a:	f7 01       	movw	r30, r14
    106c:	ea 51       	subi	r30, 0x1A	; 26
    106e:	fb 4f       	sbci	r31, 0xFB	; 251
    1070:	b0 80       	ld	r11, Z
    1072:	88 e0       	ldi	r24, 0x08	; 8
    1074:	b8 16       	cp	r11, r24
    1076:	09 f4       	brne	.+2      	; 0x107a <_FAT_followPath+0x6a>
    1078:	c9 c0       	rjmp	.+402    	; 0x120c <_FAT_followPath+0x1fc>
    107a:	ef e0       	ldi	r30, 0x0F	; 15
    107c:	be 12       	cpse	r11, r30
    107e:	11 c0       	rjmp	.+34     	; 0x10a2 <_FAT_followPath+0x92>
    1080:	f1 e0       	ldi	r31, 0x01	; 1
    1082:	af 16       	cp	r10, r31
    1084:	09 f4       	brne	.+2      	; 0x1088 <_FAT_followPath+0x78>
    1086:	c2 c0       	rjmp	.+388    	; 0x120c <_FAT_followPath+0x1fc>
    1088:	89 e0       	ldi	r24, 0x09	; 9
    108a:	a8 16       	cp	r10, r24
    108c:	09 f4       	brne	.+2      	; 0x1090 <_FAT_followPath+0x80>
    108e:	be c0       	rjmp	.+380    	; 0x120c <_FAT_followPath+0x1fc>
    1090:	61 2f       	mov	r22, r17
    1092:	70 e0       	ldi	r23, 0x00	; 0
    1094:	86 e5       	ldi	r24, 0x56	; 86
    1096:	93 e0       	ldi	r25, 0x03	; 3
    1098:	0e 94 9e 02 	call	0x53c	; 0x53c <_FAT_parse_long_names>
    109c:	66 24       	eor	r6, r6
    109e:	63 94       	inc	r6
    10a0:	b5 c0       	rjmp	.+362    	; 0x120c <_FAT_followPath+0x1fc>
    10a2:	66 20       	and	r6, r6
    10a4:	19 f0       	breq	.+6      	; 0x10ac <_FAT_followPath+0x9c>
    10a6:	e1 e0       	ldi	r30, 0x01	; 1
    10a8:	ae 12       	cpse	r10, r30
    10aa:	06 c0       	rjmp	.+12     	; 0x10b8 <_FAT_followPath+0xa8>
    10ac:	46 e5       	ldi	r20, 0x56	; 86
    10ae:	53 e0       	ldi	r21, 0x03	; 3
    10b0:	6a 2d       	mov	r22, r10
    10b2:	81 2f       	mov	r24, r17
    10b4:	0e 94 be 01 	call	0x37c	; 0x37c <_FAT_getSFN>
    10b8:	f9 e0       	ldi	r31, 0x09	; 9
    10ba:	af 12       	cpse	r10, r31
    10bc:	07 c0       	rjmp	.+14     	; 0x10cc <_FAT_followPath+0xbc>
    10be:	f6 01       	movw	r30, r12
    10c0:	84 89       	ldd	r24, Z+20	; 0x14
    10c2:	95 89       	ldd	r25, Z+21	; 0x15
    10c4:	01 96       	adiw	r24, 0x01	; 1
    10c6:	95 8b       	std	Z+21, r25	; 0x15
    10c8:	84 8b       	std	Z+20, r24	; 0x14
    10ca:	a0 c0       	rjmp	.+320    	; 0x120c <_FAT_followPath+0x1fc>
    10cc:	f6 01       	movw	r30, r12
    10ce:	82 89       	ldd	r24, Z+18	; 0x12
    10d0:	93 89       	ldd	r25, Z+19	; 0x13
    10d2:	01 96       	adiw	r24, 0x01	; 1
    10d4:	93 8b       	std	Z+19, r25	; 0x13
    10d6:	82 8b       	std	Z+18, r24	; 0x12
    10d8:	88 81       	ld	r24, Y
    10da:	8f 32       	cpi	r24, 0x2F	; 47
    10dc:	11 f0       	breq	.+4      	; 0x10e2 <_FAT_followPath+0xd2>
    10de:	8c 35       	cpi	r24, 0x5C	; 92
    10e0:	d9 f4       	brne	.+54     	; 0x1118 <_FAT_followPath+0x108>
    10e2:	f6 01       	movw	r30, r12
    10e4:	84 85       	ldd	r24, Z+12	; 0x0c
    10e6:	95 85       	ldd	r25, Z+13	; 0x0d
    10e8:	01 96       	adiw	r24, 0x01	; 1
    10ea:	95 87       	std	Z+13, r25	; 0x0d
    10ec:	84 87       	std	Z+12, r24	; 0x0c
    10ee:	89 81       	ldd	r24, Y+1	; 0x01
    10f0:	81 11       	cpse	r24, r1
    10f2:	12 c0       	rjmp	.+36     	; 0x1118 <_FAT_followPath+0x108>
    10f4:	80 91 39 03 	lds	r24, 0x0339	; 0x800339 <fat_obj+0x10>
    10f8:	90 91 3a 03 	lds	r25, 0x033A	; 0x80033a <fat_obj+0x11>
    10fc:	a0 91 3b 03 	lds	r26, 0x033B	; 0x80033b <fat_obj+0x12>
    1100:	b0 91 3c 03 	lds	r27, 0x033C	; 0x80033c <fat_obj+0x13>
    1104:	80 83       	st	Z, r24
    1106:	91 83       	std	Z+1, r25	; 0x01
    1108:	a2 83       	std	Z+2, r26	; 0x02
    110a:	b3 83       	std	Z+3, r27	; 0x03
    110c:	e6 e5       	ldi	r30, 0x56	; 86
    110e:	f3 e0       	ldi	r31, 0x03	; 3
    1110:	8f e2       	ldi	r24, 0x2F	; 47
    1112:	80 83       	st	Z, r24
    1114:	11 82       	std	Z+1, r1	; 0x01
    1116:	96 c0       	rjmp	.+300    	; 0x1244 <_FAT_followPath+0x234>
    1118:	f6 01       	movw	r30, r12
    111a:	c4 85       	ldd	r28, Z+12	; 0x0c
    111c:	d5 85       	ldd	r29, Z+13	; 0x0d
    111e:	20 e0       	ldi	r18, 0x00	; 0
    1120:	18 c0       	rjmp	.+48     	; 0x1152 <_FAT_followPath+0x142>
    1122:	3f eb       	ldi	r19, 0xBF	; 191
    1124:	38 0f       	add	r19, r24
    1126:	3a 31       	cpi	r19, 0x1A	; 26
    1128:	08 f4       	brcc	.+2      	; 0x112c <_FAT_followPath+0x11c>
    112a:	80 5e       	subi	r24, 0xE0	; 224
    112c:	3f eb       	ldi	r19, 0xBF	; 191
    112e:	39 0f       	add	r19, r25
    1130:	3a 31       	cpi	r19, 0x1A	; 26
    1132:	08 f4       	brcc	.+2      	; 0x1136 <_FAT_followPath+0x126>
    1134:	90 5e       	subi	r25, 0xE0	; 224
    1136:	89 13       	cpse	r24, r25
    1138:	17 c0       	rjmp	.+46     	; 0x1168 <_FAT_followPath+0x158>
    113a:	2f 5f       	subi	r18, 0xFF	; 255
    113c:	21 96       	adiw	r28, 0x01	; 1
    113e:	88 81       	ld	r24, Y
    1140:	8f 32       	cpi	r24, 0x2F	; 47
    1142:	19 f0       	breq	.+6      	; 0x114a <_FAT_followPath+0x13a>
    1144:	01 e0       	ldi	r16, 0x01	; 1
    1146:	8c 35       	cpi	r24, 0x5C	; 92
    1148:	21 f4       	brne	.+8      	; 0x1152 <_FAT_followPath+0x142>
    114a:	21 96       	adiw	r28, 0x01	; 1
    114c:	91 e0       	ldi	r25, 0x01	; 1
    114e:	01 e0       	ldi	r16, 0x01	; 1
    1150:	0f c0       	rjmp	.+30     	; 0x1170 <_FAT_followPath+0x160>
    1152:	88 81       	ld	r24, Y
    1154:	88 23       	and	r24, r24
    1156:	59 f0       	breq	.+22     	; 0x116e <_FAT_followPath+0x15e>
    1158:	e2 2f       	mov	r30, r18
    115a:	f0 e0       	ldi	r31, 0x00	; 0
    115c:	ea 5a       	subi	r30, 0xAA	; 170
    115e:	fc 4f       	sbci	r31, 0xFC	; 252
    1160:	90 81       	ld	r25, Z
    1162:	91 11       	cpse	r25, r1
    1164:	de cf       	rjmp	.-68     	; 0x1122 <_FAT_followPath+0x112>
    1166:	04 c0       	rjmp	.+8      	; 0x1170 <_FAT_followPath+0x160>
    1168:	90 e0       	ldi	r25, 0x00	; 0
    116a:	00 e0       	ldi	r16, 0x00	; 0
    116c:	01 c0       	rjmp	.+2      	; 0x1170 <_FAT_followPath+0x160>
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	e2 2f       	mov	r30, r18
    1172:	f0 e0       	ldi	r31, 0x00	; 0
    1174:	ea 5a       	subi	r30, 0xAA	; 170
    1176:	fc 4f       	sbci	r31, 0xFC	; 252
    1178:	80 81       	ld	r24, Z
    117a:	81 11       	cpse	r24, r1
    117c:	03 c0       	rjmp	.+6      	; 0x1184 <_FAT_followPath+0x174>
    117e:	88 81       	ld	r24, Y
    1180:	88 23       	and	r24, r24
    1182:	21 f0       	breq	.+8      	; 0x118c <_FAT_followPath+0x17c>
    1184:	91 11       	cpse	r25, r1
    1186:	02 c0       	rjmp	.+4      	; 0x118c <_FAT_followPath+0x17c>
    1188:	01 11       	cpse	r16, r1
    118a:	00 e0       	ldi	r16, 0x00	; 0
    118c:	00 23       	and	r16, r16
    118e:	e9 f1       	breq	.+122    	; 0x120a <_FAT_followPath+0x1fa>
    1190:	f1 e0       	ldi	r31, 0x01	; 1
    1192:	af 16       	cp	r10, r31
    1194:	e1 f0       	breq	.+56     	; 0x11ce <_FAT_followPath+0x1be>
    1196:	8a e0       	ldi	r24, 0x0A	; 10
    1198:	a8 16       	cp	r10, r24
    119a:	c9 f0       	breq	.+50     	; 0x11ce <_FAT_followPath+0x1be>
    119c:	f7 01       	movw	r30, r14
    119e:	eb 50       	subi	r30, 0x0B	; 11
    11a0:	fb 4f       	sbci	r31, 0xFB	; 251
    11a2:	90 81       	ld	r25, Z
    11a4:	f7 01       	movw	r30, r14
    11a6:	ea 50       	subi	r30, 0x0A	; 10
    11a8:	fb 4f       	sbci	r31, 0xFB	; 251
    11aa:	80 81       	ld	r24, Z
    11ac:	20 91 50 03 	lds	r18, 0x0350	; 0x800350 <fat_obj+0x27>
    11b0:	22 30       	cpi	r18, 0x02	; 2
    11b2:	41 f4       	brne	.+16     	; 0x11c4 <_FAT_followPath+0x1b4>
    11b4:	f7 01       	movw	r30, r14
    11b6:	e1 51       	subi	r30, 0x11	; 17
    11b8:	fb 4f       	sbci	r31, 0xFB	; 251
    11ba:	70 80       	ld	r7, Z
    11bc:	f7 01       	movw	r30, r14
    11be:	e0 51       	subi	r30, 0x10	; 16
    11c0:	fb 4f       	sbci	r31, 0xFB	; 251
    11c2:	80 80       	ld	r8, Z
    11c4:	f6 01       	movw	r30, r12
    11c6:	90 83       	st	Z, r25
    11c8:	81 83       	std	Z+1, r24	; 0x01
    11ca:	72 82       	std	Z+2, r7	; 0x02
    11cc:	83 82       	std	Z+3, r8	; 0x03
    11ce:	88 81       	ld	r24, Y
    11d0:	81 11       	cpse	r24, r1
    11d2:	06 c0       	rjmp	.+12     	; 0x11e0 <_FAT_followPath+0x1d0>
    11d4:	f8 e0       	ldi	r31, 0x08	; 8
    11d6:	af 12       	cpse	r10, r31
    11d8:	35 c0       	rjmp	.+106    	; 0x1244 <_FAT_followPath+0x234>
    11da:	b4 fe       	sbrs	r11, 4
    11dc:	2f c0       	rjmp	.+94     	; 0x123c <_FAT_followPath+0x22c>
    11de:	32 c0       	rjmp	.+100    	; 0x1244 <_FAT_followPath+0x234>
    11e0:	f6 01       	movw	r30, r12
    11e2:	d5 87       	std	Z+13, r29	; 0x0d
    11e4:	c4 87       	std	Z+12, r28	; 0x0c
    11e6:	60 81       	ld	r22, Z
    11e8:	71 81       	ldd	r23, Z+1	; 0x01
    11ea:	82 81       	ldd	r24, Z+2	; 0x02
    11ec:	93 81       	ldd	r25, Z+3	; 0x03
    11ee:	64 83       	std	Z+4, r22	; 0x04
    11f0:	75 83       	std	Z+5, r23	; 0x05
    11f2:	86 83       	std	Z+6, r24	; 0x06
    11f4:	97 83       	std	Z+7, r25	; 0x07
    11f6:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_FAT_clusterToSector>
    11fa:	f6 01       	movw	r30, r12
    11fc:	60 87       	std	Z+8, r22	; 0x08
    11fe:	71 87       	std	Z+9, r23	; 0x09
    1200:	82 87       	std	Z+10, r24	; 0x0a
    1202:	93 87       	std	Z+11, r25	; 0x0b
    1204:	11 8a       	std	Z+17, r1	; 0x11
    1206:	10 8a       	std	Z+16, r1	; 0x10
    1208:	0a c0       	rjmp	.+20     	; 0x121e <_FAT_followPath+0x20e>
    120a:	61 2c       	mov	r6, r1
    120c:	1f 5f       	subi	r17, 0xFF	; 255
    120e:	01 c0       	rjmp	.+2      	; 0x1212 <_FAT_followPath+0x202>
    1210:	10 e0       	ldi	r17, 0x00	; 0
    1212:	80 91 4e 03 	lds	r24, 0x034E	; 0x80034e <fat_obj+0x25>
    1216:	18 17       	cp	r17, r24
    1218:	08 f4       	brcc	.+2      	; 0x121c <_FAT_followPath+0x20c>
    121a:	16 cf       	rjmp	.-468    	; 0x1048 <_FAT_followPath+0x38>
    121c:	01 c0       	rjmp	.+2      	; 0x1220 <_FAT_followPath+0x210>
    121e:	61 2c       	mov	r6, r1
    1220:	c6 01       	movw	r24, r12
    1222:	0e 94 a4 07 	call	0xf48	; 0xf48 <_FAT_getFileNextSector>
    1226:	98 2e       	mov	r9, r24
    1228:	88 23       	and	r24, r24
    122a:	91 f3       	breq	.-28     	; 0x1210 <_FAT_followPath+0x200>
    122c:	68 94       	set
    122e:	99 24       	eor	r9, r9
    1230:	91 f8       	bld	r9, 1
    1232:	08 c0       	rjmp	.+16     	; 0x1244 <_FAT_followPath+0x234>
    1234:	68 94       	set
    1236:	99 24       	eor	r9, r9
    1238:	91 f8       	bld	r9, 1
    123a:	04 c0       	rjmp	.+8      	; 0x1244 <_FAT_followPath+0x234>
    123c:	0f 2e       	mov	r0, r31
    123e:	f9 e0       	ldi	r31, 0x09	; 9
    1240:	9f 2e       	mov	r9, r31
    1242:	f0 2d       	mov	r31, r0
    1244:	89 2d       	mov	r24, r9
    1246:	df 91       	pop	r29
    1248:	cf 91       	pop	r28
    124a:	1f 91       	pop	r17
    124c:	0f 91       	pop	r16
    124e:	ff 90       	pop	r15
    1250:	ef 90       	pop	r14
    1252:	df 90       	pop	r13
    1254:	cf 90       	pop	r12
    1256:	bf 90       	pop	r11
    1258:	af 90       	pop	r10
    125a:	9f 90       	pop	r9
    125c:	8f 90       	pop	r8
    125e:	7f 90       	pop	r7
    1260:	6f 90       	pop	r6
    1262:	08 95       	ret

00001264 <_FAT_updateFileInfo>:
    1264:	1f 93       	push	r17
    1266:	cf 93       	push	r28
    1268:	df 93       	push	r29
    126a:	ec 01       	movw	r28, r24
    126c:	16 2f       	mov	r17, r22
    126e:	68 89       	ldd	r22, Y+16	; 0x10
    1270:	79 89       	ldd	r23, Y+17	; 0x11
    1272:	8a 89       	ldd	r24, Y+18	; 0x12
    1274:	9b 89       	ldd	r25, Y+19	; 0x13
    1276:	4b ed       	ldi	r20, 0xDB	; 219
    1278:	54 e0       	ldi	r21, 0x04	; 4
    127a:	0e 94 c3 04 	call	0x986	; 0x986 <sd_read_single_block>
    127e:	81 11       	cpse	r24, r1
    1280:	56 c0       	rjmp	.+172    	; 0x132e <_FAT_updateFileInfo+0xca>
    1282:	1b 30       	cpi	r17, 0x0B	; 11
    1284:	11 f5       	brne	.+68     	; 0x12ca <_FAT_updateFileInfo+0x66>
    1286:	88 a1       	ldd	r24, Y+32	; 0x20
    1288:	20 e2       	ldi	r18, 0x20	; 32
    128a:	82 9f       	mul	r24, r18
    128c:	c0 01       	movw	r24, r0
    128e:	11 24       	eor	r1, r1
    1290:	28 81       	ld	r18, Y
    1292:	fc 01       	movw	r30, r24
    1294:	e9 50       	subi	r30, 0x09	; 9
    1296:	fb 4f       	sbci	r31, 0xFB	; 251
    1298:	20 83       	st	Z, r18
    129a:	29 81       	ldd	r18, Y+1	; 0x01
    129c:	fc 01       	movw	r30, r24
    129e:	e8 50       	subi	r30, 0x08	; 8
    12a0:	fb 4f       	sbci	r31, 0xFB	; 251
    12a2:	20 83       	st	Z, r18
    12a4:	2a 81       	ldd	r18, Y+2	; 0x02
    12a6:	fc 01       	movw	r30, r24
    12a8:	e7 50       	subi	r30, 0x07	; 7
    12aa:	fb 4f       	sbci	r31, 0xFB	; 251
    12ac:	20 83       	st	Z, r18
    12ae:	2b 81       	ldd	r18, Y+3	; 0x03
    12b0:	fc 01       	movw	r30, r24
    12b2:	e6 50       	subi	r30, 0x06	; 6
    12b4:	fb 4f       	sbci	r31, 0xFB	; 251
    12b6:	20 83       	st	Z, r18
    12b8:	88 81       	ld	r24, Y
    12ba:	99 81       	ldd	r25, Y+1	; 0x01
    12bc:	aa 81       	ldd	r26, Y+2	; 0x02
    12be:	bb 81       	ldd	r27, Y+3	; 0x03
    12c0:	8c 83       	std	Y+4, r24	; 0x04
    12c2:	9d 83       	std	Y+5, r25	; 0x05
    12c4:	ae 83       	std	Y+6, r26	; 0x06
    12c6:	bf 83       	std	Y+7, r27	; 0x07
    12c8:	24 c0       	rjmp	.+72     	; 0x1312 <_FAT_updateFileInfo+0xae>
    12ca:	1c 30       	cpi	r17, 0x0C	; 12
    12cc:	11 f5       	brne	.+68     	; 0x1312 <_FAT_updateFileInfo+0xae>
    12ce:	88 a1       	ldd	r24, Y+32	; 0x20
    12d0:	20 e2       	ldi	r18, 0x20	; 32
    12d2:	82 9f       	mul	r24, r18
    12d4:	c0 01       	movw	r24, r0
    12d6:	11 24       	eor	r1, r1
    12d8:	28 85       	ldd	r18, Y+8	; 0x08
    12da:	fc 01       	movw	r30, r24
    12dc:	eb 50       	subi	r30, 0x0B	; 11
    12de:	fb 4f       	sbci	r31, 0xFB	; 251
    12e0:	20 83       	st	Z, r18
    12e2:	29 85       	ldd	r18, Y+9	; 0x09
    12e4:	fc 01       	movw	r30, r24
    12e6:	ea 50       	subi	r30, 0x0A	; 10
    12e8:	fb 4f       	sbci	r31, 0xFB	; 251
    12ea:	20 83       	st	Z, r18
    12ec:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <fat_obj+0x27>
    12f0:	82 30       	cpi	r24, 0x02	; 2
    12f2:	79 f4       	brne	.+30     	; 0x1312 <_FAT_updateFileInfo+0xae>
    12f4:	88 a1       	ldd	r24, Y+32	; 0x20
    12f6:	20 e2       	ldi	r18, 0x20	; 32
    12f8:	82 9f       	mul	r24, r18
    12fa:	c0 01       	movw	r24, r0
    12fc:	11 24       	eor	r1, r1
    12fe:	2a 85       	ldd	r18, Y+10	; 0x0a
    1300:	fc 01       	movw	r30, r24
    1302:	e1 51       	subi	r30, 0x11	; 17
    1304:	fb 4f       	sbci	r31, 0xFB	; 251
    1306:	20 83       	st	Z, r18
    1308:	2b 85       	ldd	r18, Y+11	; 0x0b
    130a:	fc 01       	movw	r30, r24
    130c:	e0 51       	subi	r30, 0x10	; 16
    130e:	fb 4f       	sbci	r31, 0xFB	; 251
    1310:	20 83       	st	Z, r18
    1312:	68 89       	ldd	r22, Y+16	; 0x10
    1314:	79 89       	ldd	r23, Y+17	; 0x11
    1316:	8a 89       	ldd	r24, Y+18	; 0x12
    1318:	9b 89       	ldd	r25, Y+19	; 0x13
    131a:	4b ed       	ldi	r20, 0xDB	; 219
    131c:	54 e0       	ldi	r21, 0x04	; 4
    131e:	0e 94 03 04 	call	0x806	; 0x806 <sd_write_single_block>
    1322:	80 91 57 04 	lds	r24, 0x0457	; 0x800457 <SD_ResponseToken>
    1326:	85 30       	cpi	r24, 0x05	; 5
    1328:	21 f0       	breq	.+8      	; 0x1332 <_FAT_updateFileInfo+0xce>
    132a:	8c e0       	ldi	r24, 0x0C	; 12
    132c:	03 c0       	rjmp	.+6      	; 0x1334 <_FAT_updateFileInfo+0xd0>
    132e:	8c e0       	ldi	r24, 0x0C	; 12
    1330:	01 c0       	rjmp	.+2      	; 0x1334 <_FAT_updateFileInfo+0xd0>
    1332:	80 e0       	ldi	r24, 0x00	; 0
    1334:	df 91       	pop	r29
    1336:	cf 91       	pop	r28
    1338:	1f 91       	pop	r17
    133a:	08 95       	ret

0000133c <STRING_itoa>:
    133c:	9f 92       	push	r9
    133e:	af 92       	push	r10
    1340:	bf 92       	push	r11
    1342:	cf 92       	push	r12
    1344:	df 92       	push	r13
    1346:	ef 92       	push	r14
    1348:	ff 92       	push	r15
    134a:	0f 93       	push	r16
    134c:	1f 93       	push	r17
    134e:	cf 93       	push	r28
    1350:	df 93       	push	r29
    1352:	6b 01       	movw	r12, r22
    1354:	7c 01       	movw	r14, r24
    1356:	8a 01       	movw	r16, r20
    1358:	c2 2f       	mov	r28, r18
    135a:	9b 01       	movw	r18, r22
    135c:	ac 01       	movw	r20, r24
    135e:	d0 e0       	ldi	r29, 0x00	; 0
    1360:	09 c0       	rjmp	.+18     	; 0x1374 <STRING_itoa+0x38>
    1362:	df 5f       	subi	r29, 0xFF	; 255
    1364:	ca 01       	movw	r24, r20
    1366:	b9 01       	movw	r22, r18
    1368:	2a e0       	ldi	r18, 0x0A	; 10
    136a:	30 e0       	ldi	r19, 0x00	; 0
    136c:	40 e0       	ldi	r20, 0x00	; 0
    136e:	50 e0       	ldi	r21, 0x00	; 0
    1370:	0e 94 93 17 	call	0x2f26	; 0x2f26 <__divmodsi4>
    1374:	21 15       	cp	r18, r1
    1376:	31 05       	cpc	r19, r1
    1378:	41 05       	cpc	r20, r1
    137a:	51 05       	cpc	r21, r1
    137c:	91 f7       	brne	.-28     	; 0x1362 <STRING_itoa+0x26>
    137e:	c1 14       	cp	r12, r1
    1380:	d1 04       	cpc	r13, r1
    1382:	e1 04       	cpc	r14, r1
    1384:	f1 04       	cpc	r15, r1
    1386:	09 f4       	brne	.+2      	; 0x138a <STRING_itoa+0x4e>
    1388:	d1 e0       	ldi	r29, 0x01	; 1
    138a:	cd 1b       	sub	r28, r29
    138c:	0a f4       	brpl	.+2      	; 0x1390 <STRING_itoa+0x54>
    138e:	c0 e0       	ldi	r28, 0x00	; 0
    1390:	ff 20       	and	r15, r15
    1392:	64 f4       	brge	.+24     	; 0x13ac <STRING_itoa+0x70>
    1394:	f0 94       	com	r15
    1396:	e0 94       	com	r14
    1398:	d0 94       	com	r13
    139a:	c0 94       	com	r12
    139c:	c1 1c       	adc	r12, r1
    139e:	d1 1c       	adc	r13, r1
    13a0:	e1 1c       	adc	r14, r1
    13a2:	f1 1c       	adc	r15, r1
    13a4:	df 5f       	subi	r29, 0xFF	; 255
    13a6:	99 24       	eor	r9, r9
    13a8:	93 94       	inc	r9
    13aa:	01 c0       	rjmp	.+2      	; 0x13ae <STRING_itoa+0x72>
    13ac:	91 2c       	mov	r9, r1
    13ae:	cd 0f       	add	r28, r29
    13b0:	cc 30       	cpi	r28, 0x0C	; 12
    13b2:	00 f5       	brcc	.+64     	; 0x13f4 <STRING_itoa+0xb8>
    13b4:	f8 01       	movw	r30, r16
    13b6:	ec 0f       	add	r30, r28
    13b8:	f1 1d       	adc	r31, r1
    13ba:	10 82       	st	Z, r1
    13bc:	1b c0       	rjmp	.+54     	; 0x13f4 <STRING_itoa+0xb8>
    13be:	c1 50       	subi	r28, 0x01	; 1
    13c0:	cc 30       	cpi	r28, 0x0C	; 12
    13c2:	70 f4       	brcc	.+28     	; 0x13e0 <STRING_itoa+0xa4>
    13c4:	58 01       	movw	r10, r16
    13c6:	ac 0e       	add	r10, r28
    13c8:	b1 1c       	adc	r11, r1
    13ca:	c7 01       	movw	r24, r14
    13cc:	b6 01       	movw	r22, r12
    13ce:	2a e0       	ldi	r18, 0x0A	; 10
    13d0:	30 e0       	ldi	r19, 0x00	; 0
    13d2:	40 e0       	ldi	r20, 0x00	; 0
    13d4:	50 e0       	ldi	r21, 0x00	; 0
    13d6:	0e 94 93 17 	call	0x2f26	; 0x2f26 <__divmodsi4>
    13da:	60 5d       	subi	r22, 0xD0	; 208
    13dc:	f5 01       	movw	r30, r10
    13de:	60 83       	st	Z, r22
    13e0:	c7 01       	movw	r24, r14
    13e2:	b6 01       	movw	r22, r12
    13e4:	2a e0       	ldi	r18, 0x0A	; 10
    13e6:	30 e0       	ldi	r19, 0x00	; 0
    13e8:	40 e0       	ldi	r20, 0x00	; 0
    13ea:	50 e0       	ldi	r21, 0x00	; 0
    13ec:	0e 94 93 17 	call	0x2f26	; 0x2f26 <__divmodsi4>
    13f0:	69 01       	movw	r12, r18
    13f2:	7a 01       	movw	r14, r20
    13f4:	c1 11       	cpse	r28, r1
    13f6:	e3 cf       	rjmp	.-58     	; 0x13be <STRING_itoa+0x82>
    13f8:	99 20       	and	r9, r9
    13fa:	19 f0       	breq	.+6      	; 0x1402 <STRING_itoa+0xc6>
    13fc:	8d e2       	ldi	r24, 0x2D	; 45
    13fe:	f8 01       	movw	r30, r16
    1400:	80 83       	st	Z, r24
    1402:	df 91       	pop	r29
    1404:	cf 91       	pop	r28
    1406:	1f 91       	pop	r17
    1408:	0f 91       	pop	r16
    140a:	ff 90       	pop	r15
    140c:	ef 90       	pop	r14
    140e:	df 90       	pop	r13
    1410:	cf 90       	pop	r12
    1412:	bf 90       	pop	r11
    1414:	af 90       	pop	r10
    1416:	9f 90       	pop	r9
    1418:	08 95       	ret

0000141a <STRING_ftoa>:
    141a:	2f 92       	push	r2
    141c:	3f 92       	push	r3
    141e:	4f 92       	push	r4
    1420:	5f 92       	push	r5
    1422:	6f 92       	push	r6
    1424:	7f 92       	push	r7
    1426:	8f 92       	push	r8
    1428:	9f 92       	push	r9
    142a:	af 92       	push	r10
    142c:	bf 92       	push	r11
    142e:	cf 92       	push	r12
    1430:	df 92       	push	r13
    1432:	ef 92       	push	r14
    1434:	0f 93       	push	r16
    1436:	cf 93       	push	r28
    1438:	2b 01       	movw	r4, r22
    143a:	3c 01       	movw	r6, r24
    143c:	1a 01       	movw	r2, r20
    143e:	69 01       	movw	r12, r18
    1440:	ce 2d       	mov	r28, r14
    1442:	0f 2e       	mov	r0, r31
    1444:	81 2c       	mov	r8, r1
    1446:	91 2c       	mov	r9, r1
    1448:	a1 2c       	mov	r10, r1
    144a:	ff e3       	ldi	r31, 0x3F	; 63
    144c:	bf 2e       	mov	r11, r31
    144e:	f0 2d       	mov	r31, r0
    1450:	0b c0       	rjmp	.+22     	; 0x1468 <STRING_ftoa+0x4e>
    1452:	20 e0       	ldi	r18, 0x00	; 0
    1454:	30 e0       	ldi	r19, 0x00	; 0
    1456:	40 e2       	ldi	r20, 0x20	; 32
    1458:	51 e4       	ldi	r21, 0x41	; 65
    145a:	c5 01       	movw	r24, r10
    145c:	b4 01       	movw	r22, r8
    145e:	0e 94 81 15 	call	0x2b02	; 0x2b02 <__divsf3>
    1462:	4b 01       	movw	r8, r22
    1464:	5c 01       	movw	r10, r24
    1466:	c1 50       	subi	r28, 0x01	; 1
    1468:	c1 11       	cpse	r28, r1
    146a:	f3 cf       	rjmp	.-26     	; 0x1452 <STRING_ftoa+0x38>
    146c:	20 e0       	ldi	r18, 0x00	; 0
    146e:	30 e0       	ldi	r19, 0x00	; 0
    1470:	a9 01       	movw	r20, r18
    1472:	c3 01       	movw	r24, r6
    1474:	b2 01       	movw	r22, r4
    1476:	0e 94 7c 15 	call	0x2af8	; 0x2af8 <__cmpsf2>
    147a:	88 23       	and	r24, r24
    147c:	24 f4       	brge	.+8      	; 0x1486 <STRING_ftoa+0x6c>
    147e:	77 fa       	bst	r7, 7
    1480:	70 94       	com	r7
    1482:	77 f8       	bld	r7, 7
    1484:	70 94       	com	r7
    1486:	a5 01       	movw	r20, r10
    1488:	94 01       	movw	r18, r8
    148a:	c3 01       	movw	r24, r6
    148c:	b2 01       	movw	r22, r4
    148e:	0e 94 10 15 	call	0x2a20	; 0x2a20 <__addsf3>
    1492:	2b 01       	movw	r4, r22
    1494:	3c 01       	movw	r6, r24
    1496:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <__fixsfsi>
    149a:	4b 01       	movw	r8, r22
    149c:	5c 01       	movw	r10, r24
    149e:	0e 94 2b 16 	call	0x2c56	; 0x2c56 <__floatsisf>
    14a2:	9b 01       	movw	r18, r22
    14a4:	ac 01       	movw	r20, r24
    14a6:	c3 01       	movw	r24, r6
    14a8:	b2 01       	movw	r22, r4
    14aa:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__subsf3>
    14ae:	2b 01       	movw	r4, r22
    14b0:	3c 01       	movw	r6, r24
    14b2:	ce 2d       	mov	r28, r14
    14b4:	0b c0       	rjmp	.+22     	; 0x14cc <STRING_ftoa+0xb2>
    14b6:	20 e0       	ldi	r18, 0x00	; 0
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	40 e2       	ldi	r20, 0x20	; 32
    14bc:	51 e4       	ldi	r21, 0x41	; 65
    14be:	c3 01       	movw	r24, r6
    14c0:	b2 01       	movw	r22, r4
    14c2:	0e 94 e0 16 	call	0x2dc0	; 0x2dc0 <__mulsf3>
    14c6:	2b 01       	movw	r4, r22
    14c8:	3c 01       	movw	r6, r24
    14ca:	c1 50       	subi	r28, 0x01	; 1
    14cc:	c1 11       	cpse	r28, r1
    14ce:	f3 cf       	rjmp	.-26     	; 0x14b6 <STRING_ftoa+0x9c>
    14d0:	20 2f       	mov	r18, r16
    14d2:	a1 01       	movw	r20, r2
    14d4:	c5 01       	movw	r24, r10
    14d6:	b4 01       	movw	r22, r8
    14d8:	0e 94 9e 09 	call	0x133c	; 0x133c <STRING_itoa>
    14dc:	c3 01       	movw	r24, r6
    14de:	b2 01       	movw	r22, r4
    14e0:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <__fixsfsi>
    14e4:	2e 2d       	mov	r18, r14
    14e6:	a6 01       	movw	r20, r12
    14e8:	0e 94 9e 09 	call	0x133c	; 0x133c <STRING_itoa>
    14ec:	cf 91       	pop	r28
    14ee:	0f 91       	pop	r16
    14f0:	ef 90       	pop	r14
    14f2:	df 90       	pop	r13
    14f4:	cf 90       	pop	r12
    14f6:	bf 90       	pop	r11
    14f8:	af 90       	pop	r10
    14fa:	9f 90       	pop	r9
    14fc:	8f 90       	pop	r8
    14fe:	7f 90       	pop	r7
    1500:	6f 90       	pop	r6
    1502:	5f 90       	pop	r5
    1504:	4f 90       	pop	r4
    1506:	3f 90       	pop	r3
    1508:	2f 90       	pop	r2
    150a:	08 95       	ret

0000150c <FAT_mountVolume>:
    150c:	2f 92       	push	r2
    150e:	3f 92       	push	r3
    1510:	4f 92       	push	r4
    1512:	5f 92       	push	r5
    1514:	6f 92       	push	r6
    1516:	7f 92       	push	r7
    1518:	8f 92       	push	r8
    151a:	9f 92       	push	r9
    151c:	af 92       	push	r10
    151e:	bf 92       	push	r11
    1520:	cf 92       	push	r12
    1522:	df 92       	push	r13
    1524:	ef 92       	push	r14
    1526:	ff 92       	push	r15
    1528:	0f 93       	push	r16
    152a:	1f 93       	push	r17
    152c:	cf 93       	push	r28
    152e:	df 93       	push	r29
    1530:	c9 e2       	ldi	r28, 0x29	; 41
    1532:	d3 e0       	ldi	r29, 0x03	; 3
    1534:	18 8a       	std	Y+16, r1	; 0x10
    1536:	19 8a       	std	Y+17, r1	; 0x11
    1538:	1a 8a       	std	Y+18, r1	; 0x12
    153a:	1b 8a       	std	Y+19, r1	; 0x13
    153c:	18 82       	st	Y, r1
    153e:	19 82       	std	Y+1, r1	; 0x01
    1540:	1a 82       	std	Y+2, r1	; 0x02
    1542:	1b 82       	std	Y+3, r1	; 0x03
    1544:	1f a2       	std	Y+39, r1	; 0x27
    1546:	21 2c       	mov	r2, r1
    1548:	31 2c       	mov	r3, r1
    154a:	0e 94 5d 03 	call	0x6ba	; 0x6ba <sd_init>
    154e:	8e a3       	std	Y+38, r24	; 0x26
    1550:	81 11       	cpse	r24, r1
    1552:	cf c1       	rjmp	.+926    	; 0x18f2 <FAT_mountVolume+0x3e6>
    1554:	4b ed       	ldi	r20, 0xDB	; 219
    1556:	54 e0       	ldi	r21, 0x04	; 4
    1558:	60 e0       	ldi	r22, 0x00	; 0
    155a:	70 e0       	ldi	r23, 0x00	; 0
    155c:	cb 01       	movw	r24, r22
    155e:	0e 94 c3 04 	call	0x986	; 0x986 <sd_read_single_block>
    1562:	80 93 4f 03 	sts	0x034F, r24	; 0x80034f <fat_obj+0x26>
    1566:	81 11       	cpse	r24, r1
    1568:	c6 c1       	rjmp	.+908    	; 0x18f6 <FAT_mountVolume+0x3ea>
    156a:	20 91 da 06 	lds	r18, 0x06DA	; 0x8006da <SD_Buffer+0x1ff>
    156e:	10 91 d9 06 	lds	r17, 0x06D9	; 0x8006d9 <SD_Buffer+0x1fe>
    1572:	82 2f       	mov	r24, r18
    1574:	91 2f       	mov	r25, r17
    1576:	a0 e0       	ldi	r26, 0x00	; 0
    1578:	b0 e0       	ldi	r27, 0x00	; 0
    157a:	8a 3a       	cpi	r24, 0xAA	; 170
    157c:	95 45       	sbci	r25, 0x55	; 85
    157e:	a1 05       	cpc	r26, r1
    1580:	b1 05       	cpc	r27, r1
    1582:	09 f1       	breq	.+66     	; 0x15c6 <FAT_mountVolume+0xba>
    1584:	1f 92       	push	r1
    1586:	2f 93       	push	r18
    1588:	c0 e0       	ldi	r28, 0x00	; 0
    158a:	d1 e0       	ldi	r29, 0x01	; 1
    158c:	df 93       	push	r29
    158e:	cf 93       	push	r28
    1590:	8f e7       	ldi	r24, 0x7F	; 127
    1592:	94 e0       	ldi	r25, 0x04	; 4
    1594:	9f 93       	push	r25
    1596:	8f 93       	push	r24
    1598:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <sprintf>
    159c:	1f 92       	push	r1
    159e:	1f 93       	push	r17
    15a0:	df 93       	push	r29
    15a2:	cf 93       	push	r28
    15a4:	8b ec       	ldi	r24, 0xCB	; 203
    15a6:	94 e0       	ldi	r25, 0x04	; 4
    15a8:	9f 93       	push	r25
    15aa:	8f 93       	push	r24
    15ac:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <sprintf>
    15b0:	2d b7       	in	r18, 0x3d	; 61
    15b2:	3e b7       	in	r19, 0x3e	; 62
    15b4:	24 5f       	subi	r18, 0xF4	; 244
    15b6:	3f 4f       	sbci	r19, 0xFF	; 255
    15b8:	0f b6       	in	r0, 0x3f	; 63
    15ba:	f8 94       	cli
    15bc:	3e bf       	out	0x3e, r19	; 62
    15be:	0f be       	out	0x3f, r0	; 63
    15c0:	2d bf       	out	0x3d, r18	; 61
    15c2:	84 e0       	ldi	r24, 0x04	; 4
    15c4:	a7 c1       	rjmp	.+846    	; 0x1914 <FAT_mountVolume+0x408>
    15c6:	30 91 97 06 	lds	r19, 0x0697	; 0x800697 <SD_Buffer+0x1bc>
    15ca:	20 91 98 06 	lds	r18, 0x0698	; 0x800698 <SD_Buffer+0x1bd>
    15ce:	83 2f       	mov	r24, r19
    15d0:	92 2f       	mov	r25, r18
    15d2:	a0 e0       	ldi	r26, 0x00	; 0
    15d4:	b0 e0       	ldi	r27, 0x00	; 0
    15d6:	8a 35       	cpi	r24, 0x5A	; 90
    15d8:	3a e5       	ldi	r19, 0x5A	; 90
    15da:	93 07       	cpc	r25, r19
    15dc:	a1 05       	cpc	r26, r1
    15de:	b1 05       	cpc	r27, r1
    15e0:	99 f0       	breq	.+38     	; 0x1608 <FAT_mountVolume+0xfc>
    15e2:	89 2b       	or	r24, r25
    15e4:	8a 2b       	or	r24, r26
    15e6:	8b 2b       	or	r24, r27
    15e8:	99 f0       	breq	.+38     	; 0x1610 <FAT_mountVolume+0x104>
    15ea:	42 c0       	rjmp	.+132    	; 0x1670 <FAT_mountVolume+0x164>
    15ec:	fc 01       	movw	r30, r24
    15ee:	e2 95       	swap	r30
    15f0:	f2 95       	swap	r31
    15f2:	f0 7f       	andi	r31, 0xF0	; 240
    15f4:	fe 27       	eor	r31, r30
    15f6:	e0 7f       	andi	r30, 0xF0	; 240
    15f8:	fe 27       	eor	r31, r30
    15fa:	e3 56       	subi	r30, 0x63	; 99
    15fc:	f9 4f       	sbci	r31, 0xF9	; 249
    15fe:	20 81       	ld	r18, Z
    1600:	21 11       	cpse	r18, r1
    1602:	0c c0       	rjmp	.+24     	; 0x161c <FAT_mountVolume+0x110>
    1604:	01 96       	adiw	r24, 0x01	; 1
    1606:	07 c0       	rjmp	.+14     	; 0x1616 <FAT_mountVolume+0x10a>
    1608:	80 e0       	ldi	r24, 0x00	; 0
    160a:	90 e0       	ldi	r25, 0x00	; 0
    160c:	20 e0       	ldi	r18, 0x00	; 0
    160e:	03 c0       	rjmp	.+6      	; 0x1616 <FAT_mountVolume+0x10a>
    1610:	80 e0       	ldi	r24, 0x00	; 0
    1612:	90 e0       	ldi	r25, 0x00	; 0
    1614:	20 e0       	ldi	r18, 0x00	; 0
    1616:	84 30       	cpi	r24, 0x04	; 4
    1618:	91 05       	cpc	r25, r1
    161a:	40 f3       	brcs	.-48     	; 0x15ec <FAT_mountVolume+0xe0>
    161c:	82 95       	swap	r24
    161e:	92 95       	swap	r25
    1620:	90 7f       	andi	r25, 0xF0	; 240
    1622:	98 27       	eor	r25, r24
    1624:	80 7f       	andi	r24, 0xF0	; 240
    1626:	98 27       	eor	r25, r24
    1628:	fc 01       	movw	r30, r24
    162a:	ef 55       	subi	r30, 0x5F	; 95
    162c:	f9 4f       	sbci	r31, 0xF9	; 249
    162e:	e0 81       	ld	r30, Z
    1630:	dc 01       	movw	r26, r24
    1632:	ae 55       	subi	r26, 0x5E	; 94
    1634:	b9 4f       	sbci	r27, 0xF9	; 249
    1636:	3c 91       	ld	r19, X
    1638:	53 2f       	mov	r21, r19
    163a:	dc 01       	movw	r26, r24
    163c:	ad 55       	subi	r26, 0x5D	; 93
    163e:	b9 4f       	sbci	r27, 0xF9	; 249
    1640:	ec 01       	movw	r28, r24
    1642:	cc 55       	subi	r28, 0x5C	; 92
    1644:	d9 4f       	sbci	r29, 0xF9	; 249
    1646:	4e 2f       	mov	r20, r30
    1648:	6c 91       	ld	r22, X
    164a:	78 81       	ld	r23, Y
    164c:	40 93 29 03 	sts	0x0329, r20	; 0x800329 <fat_obj>
    1650:	50 93 2a 03 	sts	0x032A, r21	; 0x80032a <fat_obj+0x1>
    1654:	60 93 2b 03 	sts	0x032B, r22	; 0x80032b <fat_obj+0x2>
    1658:	70 93 2c 03 	sts	0x032C, r23	; 0x80032c <fat_obj+0x3>
    165c:	21 2c       	mov	r2, r1
    165e:	31 2c       	mov	r3, r1
    1660:	22 23       	and	r18, r18
    1662:	09 f4       	brne	.+2      	; 0x1666 <FAT_mountVolume+0x15a>
    1664:	4a c1       	rjmp	.+660    	; 0x18fa <FAT_mountVolume+0x3ee>
    1666:	45 2b       	or	r20, r21
    1668:	46 2b       	or	r20, r22
    166a:	47 2b       	or	r20, r23
    166c:	09 f4       	brne	.+2      	; 0x1670 <FAT_mountVolume+0x164>
    166e:	47 c1       	rjmp	.+654    	; 0x18fe <FAT_mountVolume+0x3f2>
    1670:	09 e2       	ldi	r16, 0x29	; 41
    1672:	13 e0       	ldi	r17, 0x03	; 3
    1674:	f8 01       	movw	r30, r16
    1676:	60 81       	ld	r22, Z
    1678:	71 81       	ldd	r23, Z+1	; 0x01
    167a:	82 81       	ldd	r24, Z+2	; 0x02
    167c:	93 81       	ldd	r25, Z+3	; 0x03
    167e:	4b ed       	ldi	r20, 0xDB	; 219
    1680:	54 e0       	ldi	r21, 0x04	; 4
    1682:	0e 94 c3 04 	call	0x986	; 0x986 <sd_read_single_block>
    1686:	f8 01       	movw	r30, r16
    1688:	86 a3       	std	Z+38, r24	; 0x26
    168a:	81 11       	cpse	r24, r1
    168c:	3a c1       	rjmp	.+628    	; 0x1902 <FAT_mountVolume+0x3f6>
    168e:	30 91 da 06 	lds	r19, 0x06DA	; 0x8006da <SD_Buffer+0x1ff>
    1692:	20 91 d9 06 	lds	r18, 0x06D9	; 0x8006d9 <SD_Buffer+0x1fe>
    1696:	83 2f       	mov	r24, r19
    1698:	92 2f       	mov	r25, r18
    169a:	a2 2d       	mov	r26, r2
    169c:	b3 2d       	mov	r27, r3
    169e:	8a 3a       	cpi	r24, 0xAA	; 170
    16a0:	95 45       	sbci	r25, 0x55	; 85
    16a2:	a1 05       	cpc	r26, r1
    16a4:	b1 05       	cpc	r27, r1
    16a6:	09 f0       	breq	.+2      	; 0x16aa <FAT_mountVolume+0x19e>
    16a8:	2e c1       	rjmp	.+604    	; 0x1906 <FAT_mountVolume+0x3fa>
    16aa:	eb ed       	ldi	r30, 0xDB	; 219
    16ac:	f4 e0       	ldi	r31, 0x04	; 4
    16ae:	33 85       	ldd	r19, Z+11	; 0x0b
    16b0:	24 85       	ldd	r18, Z+12	; 0x0c
    16b2:	63 2f       	mov	r22, r19
    16b4:	72 2f       	mov	r23, r18
    16b6:	30 93 41 03 	sts	0x0341, r19	; 0x800341 <fat_obj+0x18>
    16ba:	20 93 42 03 	sts	0x0342, r18	; 0x800342 <fat_obj+0x19>
    16be:	61 15       	cp	r22, r1
    16c0:	22 e0       	ldi	r18, 0x02	; 2
    16c2:	72 07       	cpc	r23, r18
    16c4:	09 f0       	breq	.+2      	; 0x16c8 <FAT_mountVolume+0x1bc>
    16c6:	21 c1       	rjmp	.+578    	; 0x190a <FAT_mountVolume+0x3fe>
    16c8:	85 85       	ldd	r24, Z+13	; 0x0d
    16ca:	d8 01       	movw	r26, r16
    16cc:	98 96       	adiw	r26, 0x28	; 40
    16ce:	8c 93       	st	X, r24
    16d0:	98 97       	sbiw	r26, 0x28	; 40
    16d2:	36 85       	ldd	r19, Z+14	; 0x0e
    16d4:	27 85       	ldd	r18, Z+15	; 0x0f
    16d6:	e3 2e       	mov	r14, r19
    16d8:	f2 2e       	mov	r15, r18
    16da:	40 89       	ldd	r20, Z+16	; 0x10
    16dc:	31 89       	ldd	r19, Z+17	; 0x11
    16de:	22 89       	ldd	r18, Z+18	; 0x12
    16e0:	83 2f       	mov	r24, r19
    16e2:	92 2f       	mov	r25, r18
    16e4:	c3 88       	ldd	r12, Z+19	; 0x13
    16e6:	d4 88       	ldd	r13, Z+20	; 0x14
    16e8:	0c 2d       	mov	r16, r12
    16ea:	1d 2d       	mov	r17, r13
    16ec:	22 2d       	mov	r18, r2
    16ee:	33 2d       	mov	r19, r3
    16f0:	48 01       	movw	r8, r16
    16f2:	c6 88       	ldd	r12, Z+22	; 0x16
    16f4:	d7 88       	ldd	r13, Z+23	; 0x17
    16f6:	4c 2c       	mov	r4, r12
    16f8:	5d 2c       	mov	r5, r13
    16fa:	62 2c       	mov	r6, r2
    16fc:	73 2c       	mov	r7, r3
    16fe:	52 01       	movw	r10, r4
    1700:	c0 a0       	ldd	r12, Z+32	; 0x20
    1702:	d1 a0       	ldd	r13, Z+33	; 0x21
    1704:	22 a0       	ldd	r2, Z+34	; 0x22
    1706:	33 a0       	ldd	r3, Z+35	; 0x23
    1708:	14 96       	adiw	r26, 0x04	; 4
    170a:	cc 92       	st	X, r12
    170c:	14 97       	sbiw	r26, 0x04	; 4
    170e:	15 96       	adiw	r26, 0x05	; 5
    1710:	dc 92       	st	X, r13
    1712:	15 97       	sbiw	r26, 0x05	; 5
    1714:	16 96       	adiw	r26, 0x06	; 6
    1716:	2c 92       	st	X, r2
    1718:	16 97       	sbiw	r26, 0x06	; 6
    171a:	17 96       	adiw	r26, 0x07	; 7
    171c:	3c 92       	st	X, r3
    171e:	e1 14       	cp	r14, r1
    1720:	f1 04       	cpc	r15, r1
    1722:	09 f4       	brne	.+2      	; 0x1726 <FAT_mountVolume+0x21a>
    1724:	f4 c0       	rjmp	.+488    	; 0x190e <FAT_mountVolume+0x402>
    1726:	88 0f       	add	r24, r24
    1728:	99 1f       	adc	r25, r25
    172a:	82 95       	swap	r24
    172c:	92 95       	swap	r25
    172e:	90 7f       	andi	r25, 0xF0	; 240
    1730:	98 27       	eor	r25, r24
    1732:	80 7f       	andi	r24, 0xF0	; 240
    1734:	98 27       	eor	r25, r24
    1736:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__udivmodhi4>
    173a:	70 93 44 03 	sts	0x0344, r23	; 0x800344 <fat_obj+0x1b>
    173e:	60 93 43 03 	sts	0x0343, r22	; 0x800343 <fat_obj+0x1a>
    1742:	ab 28       	or	r10, r11
    1744:	69 f0       	breq	.+26     	; 0x1760 <FAT_mountVolume+0x254>
    1746:	d3 01       	movw	r26, r6
    1748:	c2 01       	movw	r24, r4
    174a:	aa 27       	eor	r26, r26
    174c:	bb 27       	eor	r27, r27
    174e:	80 93 35 03 	sts	0x0335, r24	; 0x800335 <fat_obj+0xc>
    1752:	90 93 36 03 	sts	0x0336, r25	; 0x800336 <fat_obj+0xd>
    1756:	a0 93 37 03 	sts	0x0337, r26	; 0x800337 <fat_obj+0xe>
    175a:	b0 93 38 03 	sts	0x0338, r27	; 0x800338 <fat_obj+0xf>
    175e:	0c c0       	rjmp	.+24     	; 0x1778 <FAT_mountVolume+0x26c>
    1760:	eb ed       	ldi	r30, 0xDB	; 219
    1762:	f4 e0       	ldi	r31, 0x04	; 4
    1764:	74 a1       	ldd	r23, Z+36	; 0x24
    1766:	65 a1       	ldd	r22, Z+37	; 0x25
    1768:	96 a1       	ldd	r25, Z+38	; 0x26
    176a:	87 a1       	ldd	r24, Z+39	; 0x27
    176c:	e9 e2       	ldi	r30, 0x29	; 41
    176e:	f3 e0       	ldi	r31, 0x03	; 3
    1770:	74 87       	std	Z+12, r23	; 0x0c
    1772:	65 87       	std	Z+13, r22	; 0x0d
    1774:	96 87       	std	Z+14, r25	; 0x0e
    1776:	87 87       	std	Z+15, r24	; 0x0f
    1778:	e9 e2       	ldi	r30, 0x29	; 41
    177a:	f3 e0       	ldi	r31, 0x03	; 3
    177c:	44 84       	ldd	r4, Z+12	; 0x0c
    177e:	55 84       	ldd	r5, Z+13	; 0x0d
    1780:	66 84       	ldd	r6, Z+14	; 0x0e
    1782:	77 84       	ldd	r7, Z+15	; 0x0f
    1784:	62 8d       	ldd	r22, Z+26	; 0x1a
    1786:	73 8d       	ldd	r23, Z+27	; 0x1b
    1788:	50 e0       	ldi	r21, 0x00	; 0
    178a:	44 9d       	mul	r20, r4
    178c:	c0 01       	movw	r24, r0
    178e:	45 9d       	mul	r20, r5
    1790:	90 0d       	add	r25, r0
    1792:	54 9d       	mul	r21, r4
    1794:	90 0d       	add	r25, r0
    1796:	11 24       	eor	r1, r1
    1798:	8e 0d       	add	r24, r14
    179a:	9f 1d       	adc	r25, r15
    179c:	86 0f       	add	r24, r22
    179e:	97 1f       	adc	r25, r23
    17a0:	97 8f       	std	Z+31, r25	; 0x1f
    17a2:	86 8f       	std	Z+30, r24	; 0x1e
    17a4:	89 28       	or	r8, r9
    17a6:	39 f0       	breq	.+14     	; 0x17b6 <FAT_mountVolume+0x2aa>
    17a8:	22 27       	eor	r18, r18
    17aa:	33 27       	eor	r19, r19
    17ac:	d0 2e       	mov	r13, r16
    17ae:	51 2f       	mov	r21, r17
    17b0:	22 2e       	mov	r2, r18
    17b2:	33 2e       	mov	r3, r19
    17b4:	0a c0       	rjmp	.+20     	; 0x17ca <FAT_mountVolume+0x2be>
    17b6:	d0 90 2d 03 	lds	r13, 0x032D	; 0x80032d <fat_obj+0x4>
    17ba:	50 91 2e 03 	lds	r21, 0x032E	; 0x80032e <fat_obj+0x5>
    17be:	d0 91 2f 03 	lds	r29, 0x032F	; 0x80032f <fat_obj+0x6>
    17c2:	c0 91 30 03 	lds	r28, 0x0330	; 0x800330 <fat_obj+0x7>
    17c6:	2d 2e       	mov	r2, r29
    17c8:	3c 2e       	mov	r3, r28
    17ca:	0d 2d       	mov	r16, r13
    17cc:	15 2f       	mov	r17, r21
    17ce:	22 2d       	mov	r18, r2
    17d0:	33 2d       	mov	r19, r3
    17d2:	58 01       	movw	r10, r16
    17d4:	69 01       	movw	r12, r18
    17d6:	a8 1a       	sub	r10, r24
    17d8:	b9 0a       	sbc	r11, r25
    17da:	c1 08       	sbc	r12, r1
    17dc:	d1 08       	sbc	r13, r1
    17de:	c6 01       	movw	r24, r12
    17e0:	b5 01       	movw	r22, r10
    17e2:	0e 94 29 16 	call	0x2c52	; 0x2c52 <__floatunsisf>
    17e6:	4b 01       	movw	r8, r22
    17e8:	5c 01       	movw	r10, r24
    17ea:	c9 e2       	ldi	r28, 0x29	; 41
    17ec:	d3 e0       	ldi	r29, 0x03	; 3
    17ee:	68 a5       	ldd	r22, Y+40	; 0x28
    17f0:	70 e0       	ldi	r23, 0x00	; 0
    17f2:	80 e0       	ldi	r24, 0x00	; 0
    17f4:	90 e0       	ldi	r25, 0x00	; 0
    17f6:	0e 94 2b 16 	call	0x2c56	; 0x2c56 <__floatsisf>
    17fa:	9b 01       	movw	r18, r22
    17fc:	ac 01       	movw	r20, r24
    17fe:	c5 01       	movw	r24, r10
    1800:	b4 01       	movw	r22, r8
    1802:	0e 94 81 15 	call	0x2b02	; 0x2b02 <__divsf3>
    1806:	20 e0       	ldi	r18, 0x00	; 0
    1808:	30 e0       	ldi	r19, 0x00	; 0
    180a:	40 e0       	ldi	r20, 0x00	; 0
    180c:	5f e3       	ldi	r21, 0x3F	; 63
    180e:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__subsf3>
    1812:	0e 94 fa 15 	call	0x2bf4	; 0x2bf4 <__fixunssfsi>
    1816:	6c 8b       	std	Y+20, r22	; 0x14
    1818:	7d 8b       	std	Y+21, r23	; 0x15
    181a:	8e 8b       	std	Y+22, r24	; 0x16
    181c:	9f 8b       	std	Y+23, r25	; 0x17
    181e:	65 3f       	cpi	r22, 0xF5	; 245
    1820:	2f e0       	ldi	r18, 0x0F	; 15
    1822:	72 07       	cpc	r23, r18
    1824:	81 05       	cpc	r24, r1
    1826:	91 05       	cpc	r25, r1
    1828:	18 f4       	brcc	.+6      	; 0x1830 <FAT_mountVolume+0x324>
    182a:	10 92 50 03 	sts	0x0350, r1	; 0x800350 <fat_obj+0x27>
    182e:	33 c0       	rjmp	.+102    	; 0x1896 <FAT_mountVolume+0x38a>
    1830:	65 3f       	cpi	r22, 0xF5	; 245
    1832:	7f 4f       	sbci	r23, 0xFF	; 255
    1834:	81 05       	cpc	r24, r1
    1836:	91 05       	cpc	r25, r1
    1838:	78 f4       	brcc	.+30     	; 0x1858 <FAT_mountVolume+0x34c>
    183a:	e9 e2       	ldi	r30, 0x29	; 41
    183c:	f3 e0       	ldi	r31, 0x03	; 3
    183e:	81 e0       	ldi	r24, 0x01	; 1
    1840:	87 a3       	std	Z+39, r24	; 0x27
    1842:	82 e0       	ldi	r24, 0x02	; 2
    1844:	84 a3       	std	Z+36, r24	; 0x24
    1846:	8f ef       	ldi	r24, 0xFF	; 255
    1848:	9f ef       	ldi	r25, 0xFF	; 255
    184a:	a0 e0       	ldi	r26, 0x00	; 0
    184c:	b0 e0       	ldi	r27, 0x00	; 0
    184e:	80 87       	std	Z+8, r24	; 0x08
    1850:	91 87       	std	Z+9, r25	; 0x09
    1852:	a2 87       	std	Z+10, r26	; 0x0a
    1854:	b3 87       	std	Z+11, r27	; 0x0b
    1856:	1f c0       	rjmp	.+62     	; 0x1896 <FAT_mountVolume+0x38a>
    1858:	e9 e2       	ldi	r30, 0x29	; 41
    185a:	f3 e0       	ldi	r31, 0x03	; 3
    185c:	82 e0       	ldi	r24, 0x02	; 2
    185e:	87 a3       	std	Z+39, r24	; 0x27
    1860:	84 e0       	ldi	r24, 0x04	; 4
    1862:	84 a3       	std	Z+36, r24	; 0x24
    1864:	8f ef       	ldi	r24, 0xFF	; 255
    1866:	9f ef       	ldi	r25, 0xFF	; 255
    1868:	af ef       	ldi	r26, 0xFF	; 255
    186a:	bf e0       	ldi	r27, 0x0F	; 15
    186c:	80 87       	std	Z+8, r24	; 0x08
    186e:	91 87       	std	Z+9, r25	; 0x09
    1870:	a2 87       	std	Z+10, r26	; 0x0a
    1872:	b3 87       	std	Z+11, r27	; 0x0b
    1874:	ab ed       	ldi	r26, 0xDB	; 219
    1876:	b4 e0       	ldi	r27, 0x04	; 4
    1878:	9c 96       	adiw	r26, 0x2c	; 44
    187a:	3c 91       	ld	r19, X
    187c:	9c 97       	sbiw	r26, 0x2c	; 44
    187e:	9d 96       	adiw	r26, 0x2d	; 45
    1880:	2c 91       	ld	r18, X
    1882:	9d 97       	sbiw	r26, 0x2d	; 45
    1884:	9e 96       	adiw	r26, 0x2e	; 46
    1886:	9c 91       	ld	r25, X
    1888:	9e 97       	sbiw	r26, 0x2e	; 46
    188a:	9f 96       	adiw	r26, 0x2f	; 47
    188c:	8c 91       	ld	r24, X
    188e:	30 8b       	std	Z+16, r19	; 0x10
    1890:	21 8b       	std	Z+17, r18	; 0x11
    1892:	92 8b       	std	Z+18, r25	; 0x12
    1894:	83 8b       	std	Z+19, r24	; 0x13
    1896:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <fat_obj+0x27>
    189a:	81 50       	subi	r24, 0x01	; 1
    189c:	82 30       	cpi	r24, 0x02	; 2
    189e:	c8 f5       	brcc	.+114    	; 0x1912 <FAT_mountVolume+0x406>
    18a0:	e9 e2       	ldi	r30, 0x29	; 41
    18a2:	f3 e0       	ldi	r31, 0x03	; 3
    18a4:	26 8d       	ldd	r18, Z+30	; 0x1e
    18a6:	37 8d       	ldd	r19, Z+31	; 0x1f
    18a8:	82 8d       	ldd	r24, Z+26	; 0x1a
    18aa:	93 8d       	ldd	r25, Z+27	; 0x1b
    18ac:	28 1b       	sub	r18, r24
    18ae:	39 0b       	sbc	r19, r25
    18b0:	80 81       	ld	r24, Z
    18b2:	91 81       	ldd	r25, Z+1	; 0x01
    18b4:	a2 81       	ldd	r26, Z+2	; 0x02
    18b6:	b3 81       	ldd	r27, Z+3	; 0x03
    18b8:	28 0f       	add	r18, r24
    18ba:	39 1f       	adc	r19, r25
    18bc:	35 8f       	std	Z+29, r19	; 0x1d
    18be:	24 8f       	std	Z+28, r18	; 0x1c
    18c0:	8e 0d       	add	r24, r14
    18c2:	9f 1d       	adc	r25, r15
    18c4:	91 a3       	std	Z+33, r25	; 0x21
    18c6:	80 a3       	std	Z+32, r24	; 0x20
    18c8:	44 85       	ldd	r20, Z+12	; 0x0c
    18ca:	55 85       	ldd	r21, Z+13	; 0x0d
    18cc:	66 85       	ldd	r22, Z+14	; 0x0e
    18ce:	77 85       	ldd	r23, Z+15	; 0x0f
    18d0:	48 0f       	add	r20, r24
    18d2:	59 1f       	adc	r21, r25
    18d4:	53 a3       	std	Z+35, r21	; 0x23
    18d6:	42 a3       	std	Z+34, r20	; 0x22
    18d8:	80 8d       	ldd	r24, Z+24	; 0x18
    18da:	91 8d       	ldd	r25, Z+25	; 0x19
    18dc:	96 95       	lsr	r25
    18de:	87 95       	ror	r24
    18e0:	92 95       	swap	r25
    18e2:	82 95       	swap	r24
    18e4:	8f 70       	andi	r24, 0x0F	; 15
    18e6:	89 27       	eor	r24, r25
    18e8:	9f 70       	andi	r25, 0x0F	; 15
    18ea:	89 27       	eor	r24, r25
    18ec:	85 a3       	std	Z+37, r24	; 0x25
    18ee:	80 e0       	ldi	r24, 0x00	; 0
    18f0:	11 c0       	rjmp	.+34     	; 0x1914 <FAT_mountVolume+0x408>
    18f2:	81 e0       	ldi	r24, 0x01	; 1
    18f4:	0f c0       	rjmp	.+30     	; 0x1914 <FAT_mountVolume+0x408>
    18f6:	82 e0       	ldi	r24, 0x02	; 2
    18f8:	0d c0       	rjmp	.+26     	; 0x1914 <FAT_mountVolume+0x408>
    18fa:	83 e0       	ldi	r24, 0x03	; 3
    18fc:	0b c0       	rjmp	.+22     	; 0x1914 <FAT_mountVolume+0x408>
    18fe:	83 e0       	ldi	r24, 0x03	; 3
    1900:	09 c0       	rjmp	.+18     	; 0x1914 <FAT_mountVolume+0x408>
    1902:	82 e0       	ldi	r24, 0x02	; 2
    1904:	07 c0       	rjmp	.+14     	; 0x1914 <FAT_mountVolume+0x408>
    1906:	84 e0       	ldi	r24, 0x04	; 4
    1908:	05 c0       	rjmp	.+10     	; 0x1914 <FAT_mountVolume+0x408>
    190a:	86 e0       	ldi	r24, 0x06	; 6
    190c:	03 c0       	rjmp	.+6      	; 0x1914 <FAT_mountVolume+0x408>
    190e:	84 e0       	ldi	r24, 0x04	; 4
    1910:	01 c0       	rjmp	.+2      	; 0x1914 <FAT_mountVolume+0x408>
    1912:	85 e0       	ldi	r24, 0x05	; 5
    1914:	df 91       	pop	r29
    1916:	cf 91       	pop	r28
    1918:	1f 91       	pop	r17
    191a:	0f 91       	pop	r16
    191c:	ff 90       	pop	r15
    191e:	ef 90       	pop	r14
    1920:	df 90       	pop	r13
    1922:	cf 90       	pop	r12
    1924:	bf 90       	pop	r11
    1926:	af 90       	pop	r10
    1928:	9f 90       	pop	r9
    192a:	8f 90       	pop	r8
    192c:	7f 90       	pop	r7
    192e:	6f 90       	pop	r6
    1930:	5f 90       	pop	r5
    1932:	4f 90       	pop	r4
    1934:	3f 90       	pop	r3
    1936:	2f 90       	pop	r2
    1938:	08 95       	ret

0000193a <FAT_createTimeMilli>:
    193a:	87 ec       	ldi	r24, 0xC7	; 199
    193c:	08 95       	ret

0000193e <FAT_createTime>:
    193e:	80 e0       	ldi	r24, 0x00	; 0
    1940:	98 e0       	ldi	r25, 0x08	; 8
    1942:	08 95       	ret

00001944 <FAT_createDate>:
    1944:	81 e2       	ldi	r24, 0x21	; 33
    1946:	94 e5       	ldi	r25, 0x54	; 84
    1948:	08 95       	ret

0000194a <_FAT_dirRegister>:
    194a:	2f 92       	push	r2
    194c:	3f 92       	push	r3
    194e:	4f 92       	push	r4
    1950:	5f 92       	push	r5
    1952:	6f 92       	push	r6
    1954:	7f 92       	push	r7
    1956:	9f 92       	push	r9
    1958:	af 92       	push	r10
    195a:	bf 92       	push	r11
    195c:	cf 92       	push	r12
    195e:	df 92       	push	r13
    1960:	ef 92       	push	r14
    1962:	ff 92       	push	r15
    1964:	0f 93       	push	r16
    1966:	1f 93       	push	r17
    1968:	cf 93       	push	r28
    196a:	df 93       	push	r29
    196c:	cd b7       	in	r28, 0x3d	; 61
    196e:	de b7       	in	r29, 0x3e	; 62
    1970:	ae 97       	sbiw	r28, 0x2e	; 46
    1972:	0f b6       	in	r0, 0x3f	; 63
    1974:	f8 94       	cli
    1976:	de bf       	out	0x3e, r29	; 62
    1978:	0f be       	out	0x3f, r0	; 63
    197a:	cd bf       	out	0x3d, r28	; 61
    197c:	6c 01       	movw	r12, r24
    197e:	f6 2e       	mov	r15, r22
    1980:	18 a6       	std	Y+40, r1	; 0x28
    1982:	e9 e2       	ldi	r30, 0x29	; 41
    1984:	f3 e0       	ldi	r31, 0x03	; 3
    1986:	15 a1       	ldd	r17, Z+37	; 0x25
    1988:	80 89       	ldd	r24, Z+16	; 0x10
    198a:	91 89       	ldd	r25, Z+17	; 0x11
    198c:	a2 89       	ldd	r26, Z+18	; 0x12
    198e:	b3 89       	ldd	r27, Z+19	; 0x13
    1990:	89 83       	std	Y+1, r24	; 0x01
    1992:	9a 83       	std	Y+2, r25	; 0x02
    1994:	ab 83       	std	Y+3, r26	; 0x03
    1996:	bc 83       	std	Y+4, r27	; 0x04
    1998:	40 e0       	ldi	r20, 0x00	; 0
    199a:	50 e0       	ldi	r21, 0x00	; 0
    199c:	ba 01       	movw	r22, r20
    199e:	ce 01       	movw	r24, r28
    19a0:	01 96       	adiw	r24, 0x01	; 1
    19a2:	0e 94 1b 02 	call	0x436	; 0x436 <_FAT_moveWindow>
    19a6:	40 e0       	ldi	r20, 0x00	; 0
    19a8:	b6 01       	movw	r22, r12
    19aa:	ce 01       	movw	r24, r28
    19ac:	01 96       	adiw	r24, 0x01	; 1
    19ae:	0e 94 08 08 	call	0x1010	; 0x1010 <_FAT_followPath>
    19b2:	82 30       	cpi	r24, 0x02	; 2
    19b4:	09 f0       	breq	.+2      	; 0x19b8 <_FAT_dirRegister+0x6e>
    19b6:	58 c2       	rjmp	.+1200   	; 0x1e68 <_FAT_dirRegister+0x51e>
    19b8:	80 e0       	ldi	r24, 0x00	; 0
    19ba:	07 c0       	rjmp	.+14     	; 0x19ca <_FAT_dirRegister+0x80>
    19bc:	2f ef       	ldi	r18, 0xFF	; 255
    19be:	c2 1a       	sub	r12, r18
    19c0:	d2 0a       	sbc	r13, r18
    19c2:	8f 5f       	subi	r24, 0xFF	; 255
    19c4:	88 3f       	cpi	r24, 0xF8	; 248
    19c6:	08 f0       	brcs	.+2      	; 0x19ca <_FAT_dirRegister+0x80>
    19c8:	51 c2       	rjmp	.+1186   	; 0x1e6c <_FAT_dirRegister+0x522>
    19ca:	f6 01       	movw	r30, r12
    19cc:	90 81       	ld	r25, Z
    19ce:	91 11       	cpse	r25, r1
    19d0:	f5 cf       	rjmp	.-22     	; 0x19bc <_FAT_dirRegister+0x72>
    19d2:	ed 84       	ldd	r14, Y+13	; 0x0d
    19d4:	0e 85       	ldd	r16, Y+14	; 0x0e
    19d6:	ee 2d       	mov	r30, r14
    19d8:	f0 2f       	mov	r31, r16
    19da:	07 c0       	rjmp	.+14     	; 0x19ea <_FAT_dirRegister+0xa0>
    19dc:	8f 32       	cpi	r24, 0x2F	; 47
    19de:	09 f4       	brne	.+2      	; 0x19e2 <_FAT_dirRegister+0x98>
    19e0:	47 c2       	rjmp	.+1166   	; 0x1e70 <_FAT_dirRegister+0x526>
    19e2:	8c 35       	cpi	r24, 0x5C	; 92
    19e4:	09 f4       	brne	.+2      	; 0x19e8 <_FAT_dirRegister+0x9e>
    19e6:	46 c2       	rjmp	.+1164   	; 0x1e74 <_FAT_dirRegister+0x52a>
    19e8:	31 96       	adiw	r30, 0x01	; 1
    19ea:	80 81       	ld	r24, Z
    19ec:	81 11       	cpse	r24, r1
    19ee:	f6 cf       	rjmp	.-20     	; 0x19dc <_FAT_dirRegister+0x92>
    19f0:	49 81       	ldd	r20, Y+1	; 0x01
    19f2:	5a 81       	ldd	r21, Y+2	; 0x02
    19f4:	6b 81       	ldd	r22, Y+3	; 0x03
    19f6:	7c 81       	ldd	r23, Y+4	; 0x04
    19f8:	ce 01       	movw	r24, r28
    19fa:	01 96       	adiw	r24, 0x01	; 1
    19fc:	0e 94 1b 02 	call	0x436	; 0x436 <_FAT_moveWindow>
    1a00:	4f 2d       	mov	r20, r15
    1a02:	6e 2d       	mov	r22, r14
    1a04:	70 2f       	mov	r23, r16
    1a06:	ce 01       	movw	r24, r28
    1a08:	01 96       	adiw	r24, 0x01	; 1
    1a0a:	0e 94 08 08 	call	0x1010	; 0x1010 <_FAT_followPath>
    1a0e:	82 30       	cpi	r24, 0x02	; 2
    1a10:	09 f0       	breq	.+2      	; 0x1a14 <_FAT_dirRegister+0xca>
    1a12:	32 c2       	rjmp	.+1124   	; 0x1e78 <_FAT_dirRegister+0x52e>
    1a14:	1a 8a       	std	Y+18, r1	; 0x12
    1a16:	19 8a       	std	Y+17, r1	; 0x11
    1a18:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1a1a:	88 23       	and	r24, r24
    1a1c:	09 f4       	brne	.+2      	; 0x1a20 <_FAT_dirRegister+0xd6>
    1a1e:	2e c2       	rjmp	.+1116   	; 0x1e7c <_FAT_dirRegister+0x532>
    1a20:	9f e4       	ldi	r25, 0x4F	; 79
    1a22:	89 9f       	mul	r24, r25
    1a24:	e1 2c       	mov	r14, r1
    1a26:	11 24       	eor	r1, r1
    1a28:	e6 94       	lsr	r14
    1a2a:	e6 94       	lsr	r14
    1a2c:	e3 94       	inc	r14
    1a2e:	49 81       	ldd	r20, Y+1	; 0x01
    1a30:	5a 81       	ldd	r21, Y+2	; 0x02
    1a32:	6b 81       	ldd	r22, Y+3	; 0x03
    1a34:	7c 81       	ldd	r23, Y+4	; 0x04
    1a36:	ce 01       	movw	r24, r28
    1a38:	01 96       	adiw	r24, 0x01	; 1
    1a3a:	0e 94 1b 02 	call	0x436	; 0x436 <_FAT_moveWindow>
    1a3e:	00 e0       	ldi	r16, 0x00	; 0
    1a40:	91 2c       	mov	r9, r1
    1a42:	c1 2c       	mov	r12, r1
    1a44:	d1 2c       	mov	r13, r1
    1a46:	21 2c       	mov	r2, r1
    1a48:	31 2c       	mov	r3, r1
    1a4a:	21 01       	movw	r4, r2
    1a4c:	a1 2c       	mov	r10, r1
    1a4e:	b1 2c       	mov	r11, r1
    1a50:	61 2c       	mov	r6, r1
    1a52:	71 2c       	mov	r7, r1
    1a54:	1e a6       	std	Y+46, r1	; 0x2e
    1a56:	1d a6       	std	Y+45, r1	; 0x2d
    1a58:	3a c0       	rjmp	.+116    	; 0x1ace <_FAT_dirRegister+0x184>
    1a5a:	ff ef       	ldi	r31, 0xFF	; 255
    1a5c:	cf 1a       	sub	r12, r31
    1a5e:	df 0a       	sbc	r13, r31
    1a60:	fc 01       	movw	r30, r24
    1a62:	ee 0f       	add	r30, r30
    1a64:	ff 1f       	adc	r31, r31
    1a66:	e2 95       	swap	r30
    1a68:	f2 95       	swap	r31
    1a6a:	f0 7f       	andi	r31, 0xF0	; 240
    1a6c:	fe 27       	eor	r31, r30
    1a6e:	e0 7f       	andi	r30, 0xF0	; 240
    1a70:	fe 27       	eor	r31, r30
    1a72:	e5 52       	subi	r30, 0x25	; 37
    1a74:	fb 4f       	sbci	r31, 0xFB	; 251
    1a76:	20 81       	ld	r18, Z
    1a78:	22 23       	and	r18, r18
    1a7a:	11 f0       	breq	.+4      	; 0x1a80 <_FAT_dirRegister+0x136>
    1a7c:	25 3e       	cpi	r18, 0xE5	; 229
    1a7e:	b1 f4       	brne	.+44     	; 0x1aac <_FAT_dirRegister+0x162>
    1a80:	93 94       	inc	r9
    1a82:	21 14       	cp	r2, r1
    1a84:	31 04       	cpc	r3, r1
    1a86:	41 04       	cpc	r4, r1
    1a88:	51 04       	cpc	r5, r1
    1a8a:	69 f4       	brne	.+26     	; 0x1aa6 <_FAT_dirRegister+0x15c>
    1a8c:	29 84       	ldd	r2, Y+9	; 0x09
    1a8e:	3a 84       	ldd	r3, Y+10	; 0x0a
    1a90:	4b 84       	ldd	r4, Y+11	; 0x0b
    1a92:	5c 84       	ldd	r5, Y+12	; 0x0c
    1a94:	a9 88       	ldd	r10, Y+17	; 0x11
    1a96:	ba 88       	ldd	r11, Y+18	; 0x12
    1a98:	21 e0       	ldi	r18, 0x01	; 1
    1a9a:	a2 1a       	sub	r10, r18
    1a9c:	b1 08       	sbc	r11, r1
    1a9e:	6d 80       	ldd	r6, Y+5	; 0x05
    1aa0:	7e 80       	ldd	r7, Y+6	; 0x06
    1aa2:	9e a7       	std	Y+46, r25	; 0x2e
    1aa4:	8d a7       	std	Y+45, r24	; 0x2d
    1aa6:	e9 10       	cpse	r14, r9
    1aa8:	05 c0       	rjmp	.+10     	; 0x1ab4 <_FAT_dirRegister+0x16a>
    1aaa:	0e c0       	rjmp	.+28     	; 0x1ac8 <_FAT_dirRegister+0x17e>
    1aac:	91 2c       	mov	r9, r1
    1aae:	21 2c       	mov	r2, r1
    1ab0:	31 2c       	mov	r3, r1
    1ab2:	21 01       	movw	r4, r2
    1ab4:	01 96       	adiw	r24, 0x01	; 1
    1ab6:	02 c0       	rjmp	.+4      	; 0x1abc <_FAT_dirRegister+0x172>
    1ab8:	80 e0       	ldi	r24, 0x00	; 0
    1aba:	90 e0       	ldi	r25, 0x00	; 0
    1abc:	21 2f       	mov	r18, r17
    1abe:	30 e0       	ldi	r19, 0x00	; 0
    1ac0:	82 17       	cp	r24, r18
    1ac2:	93 07       	cpc	r25, r19
    1ac4:	50 f2       	brcs	.-108    	; 0x1a5a <_FAT_dirRegister+0x110>
    1ac6:	01 c0       	rjmp	.+2      	; 0x1aca <_FAT_dirRegister+0x180>
    1ac8:	01 e0       	ldi	r16, 0x01	; 1
    1aca:	01 11       	cpse	r16, r1
    1acc:	06 c0       	rjmp	.+12     	; 0x1ada <_FAT_dirRegister+0x190>
    1ace:	ce 01       	movw	r24, r28
    1ad0:	01 96       	adiw	r24, 0x01	; 1
    1ad2:	0e 94 a4 07 	call	0xf48	; 0xf48 <_FAT_getFileNextSector>
    1ad6:	88 23       	and	r24, r24
    1ad8:	79 f3       	breq	.-34     	; 0x1ab8 <_FAT_dirRegister+0x16e>
    1ada:	9e 14       	cp	r9, r14
    1adc:	e9 f1       	breq	.+122    	; 0x1b58 <_FAT_dirRegister+0x20e>
    1ade:	89 81       	ldd	r24, Y+1	; 0x01
    1ae0:	9a 81       	ldd	r25, Y+2	; 0x02
    1ae2:	ab 81       	ldd	r26, Y+3	; 0x03
    1ae4:	bc 81       	ldd	r27, Y+4	; 0x04
    1ae6:	02 97       	sbiw	r24, 0x02	; 2
    1ae8:	a1 05       	cpc	r26, r1
    1aea:	b1 05       	cpc	r27, r1
    1aec:	a8 f1       	brcs	.+106    	; 0x1b58 <_FAT_dirRegister+0x20e>
    1aee:	cd 20       	and	r12, r13
    1af0:	c0 94       	com	r12
    1af2:	91 f1       	breq	.+100    	; 0x1b58 <_FAT_dirRegister+0x20e>
    1af4:	83 e0       	ldi	r24, 0x03	; 3
    1af6:	0e 94 35 05 	call	0xa6a	; 0xa6a <FAT_tableFindFree>
    1afa:	9b 01       	movw	r18, r22
    1afc:	ac 01       	movw	r20, r24
    1afe:	69 a7       	std	Y+41, r22	; 0x29
    1b00:	7a a7       	std	Y+42, r23	; 0x2a
    1b02:	8b a7       	std	Y+43, r24	; 0x2b
    1b04:	9c a7       	std	Y+44, r25	; 0x2c
    1b06:	62 30       	cpi	r22, 0x02	; 2
    1b08:	71 05       	cpc	r23, r1
    1b0a:	81 05       	cpc	r24, r1
    1b0c:	91 05       	cpc	r25, r1
    1b0e:	08 f4       	brcc	.+2      	; 0x1b12 <_FAT_dirRegister+0x1c8>
    1b10:	b7 c1       	rjmp	.+878    	; 0x1e80 <_FAT_dirRegister+0x536>
    1b12:	69 81       	ldd	r22, Y+1	; 0x01
    1b14:	7a 81       	ldd	r23, Y+2	; 0x02
    1b16:	8b 81       	ldd	r24, Y+3	; 0x03
    1b18:	9c 81       	ldd	r25, Y+4	; 0x04
    1b1a:	06 e0       	ldi	r16, 0x06	; 6
    1b1c:	0e 94 e7 05 	call	0xbce	; 0xbce <_FAT_tableReadSet>
    1b20:	66 23       	and	r22, r22
    1b22:	09 f4       	brne	.+2      	; 0x1b26 <_FAT_dirRegister+0x1dc>
    1b24:	af c1       	rjmp	.+862    	; 0x1e84 <_FAT_dirRegister+0x53a>
    1b26:	20 91 31 03 	lds	r18, 0x0331	; 0x800331 <fat_obj+0x8>
    1b2a:	30 91 32 03 	lds	r19, 0x0332	; 0x800332 <fat_obj+0x9>
    1b2e:	40 91 33 03 	lds	r20, 0x0333	; 0x800333 <fat_obj+0xa>
    1b32:	50 91 34 03 	lds	r21, 0x0334	; 0x800334 <fat_obj+0xb>
    1b36:	69 a5       	ldd	r22, Y+41	; 0x29
    1b38:	7a a5       	ldd	r23, Y+42	; 0x2a
    1b3a:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b3c:	9c a5       	ldd	r25, Y+44	; 0x2c
    1b3e:	0e 94 e7 05 	call	0xbce	; 0xbce <_FAT_tableReadSet>
    1b42:	66 23       	and	r22, r22
    1b44:	09 f4       	brne	.+2      	; 0x1b48 <_FAT_dirRegister+0x1fe>
    1b46:	a0 c1       	rjmp	.+832    	; 0x1e88 <_FAT_dirRegister+0x53e>
    1b48:	69 a5       	ldd	r22, Y+41	; 0x29
    1b4a:	7a a5       	ldd	r23, Y+42	; 0x2a
    1b4c:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b4e:	9c a5       	ldd	r25, Y+44	; 0x2c
    1b50:	40 e0       	ldi	r20, 0x00	; 0
    1b52:	0e 94 87 04 	call	0x90e	; 0x90e <_FAT_clearCluster>
    1b56:	9e 2c       	mov	r9, r14
    1b58:	9e 10       	cpse	r9, r14
    1b5a:	98 c1       	rjmp	.+816    	; 0x1e8c <_FAT_dirRegister+0x542>
    1b5c:	c3 01       	movw	r24, r6
    1b5e:	a0 e0       	ldi	r26, 0x00	; 0
    1b60:	b0 e0       	ldi	r27, 0x00	; 0
    1b62:	8d 83       	std	Y+5, r24	; 0x05
    1b64:	9e 83       	std	Y+6, r25	; 0x06
    1b66:	af 83       	std	Y+7, r26	; 0x07
    1b68:	b8 87       	std	Y+8, r27	; 0x08
    1b6a:	29 86       	std	Y+9, r2	; 0x09
    1b6c:	3a 86       	std	Y+10, r3	; 0x0a
    1b6e:	4b 86       	std	Y+11, r4	; 0x0b
    1b70:	5c 86       	std	Y+12, r5	; 0x0c
    1b72:	ba 8a       	std	Y+18, r11	; 0x12
    1b74:	a9 8a       	std	Y+17, r10	; 0x11
    1b76:	84 e0       	ldi	r24, 0x04	; 4
    1b78:	f8 12       	cpse	r15, r24
    1b7a:	23 c0       	rjmp	.+70     	; 0x1bc2 <_FAT_dirRegister+0x278>
    1b7c:	40 91 31 03 	lds	r20, 0x0331	; 0x800331 <fat_obj+0x8>
    1b80:	50 91 32 03 	lds	r21, 0x0332	; 0x800332 <fat_obj+0x9>
    1b84:	60 91 33 03 	lds	r22, 0x0333	; 0x800333 <fat_obj+0xa>
    1b88:	70 91 34 03 	lds	r23, 0x0334	; 0x800334 <fat_obj+0xb>
    1b8c:	ce 01       	movw	r24, r28
    1b8e:	89 96       	adiw	r24, 0x29	; 41
    1b90:	0e 94 11 07 	call	0xe22	; 0xe22 <_FAT_allocateCluster>
    1b94:	81 11       	cpse	r24, r1
    1b96:	7c c1       	rjmp	.+760    	; 0x1e90 <_FAT_dirRegister+0x546>
    1b98:	69 a5       	ldd	r22, Y+41	; 0x29
    1b9a:	7a a5       	ldd	r23, Y+42	; 0x2a
    1b9c:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b9e:	9c a5       	ldd	r25, Y+44	; 0x2c
    1ba0:	40 e0       	ldi	r20, 0x00	; 0
    1ba2:	0e 94 87 04 	call	0x90e	; 0x90e <_FAT_clearCluster>
    1ba6:	69 a5       	ldd	r22, Y+41	; 0x29
    1ba8:	7a a5       	ldd	r23, Y+42	; 0x2a
    1baa:	8b a5       	ldd	r24, Y+43	; 0x2b
    1bac:	9c a5       	ldd	r25, Y+44	; 0x2c
    1bae:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_FAT_clusterToSector>
    1bb2:	2b 01       	movw	r4, r22
    1bb4:	3c 01       	movw	r6, r24
    1bb6:	67 2b       	or	r22, r23
    1bb8:	68 2b       	or	r22, r24
    1bba:	69 2b       	or	r22, r25
    1bbc:	09 f4       	brne	.+2      	; 0x1bc0 <_FAT_dirRegister+0x276>
    1bbe:	6a c1       	rjmp	.+724    	; 0x1e94 <_FAT_dirRegister+0x54a>
    1bc0:	07 c0       	rjmp	.+14     	; 0x1bd0 <_FAT_dirRegister+0x286>
    1bc2:	19 a6       	std	Y+41, r1	; 0x29
    1bc4:	1a a6       	std	Y+42, r1	; 0x2a
    1bc6:	1b a6       	std	Y+43, r1	; 0x2b
    1bc8:	1c a6       	std	Y+44, r1	; 0x2c
    1bca:	41 2c       	mov	r4, r1
    1bcc:	51 2c       	mov	r5, r1
    1bce:	32 01       	movw	r6, r4
    1bd0:	ce 01       	movw	r24, r28
    1bd2:	01 96       	adiw	r24, 0x01	; 1
    1bd4:	0e 94 a4 07 	call	0xf48	; 0xf48 <_FAT_getFileNextSector>
    1bd8:	08 2f       	mov	r16, r24
    1bda:	81 11       	cpse	r24, r1
    1bdc:	5d c1       	rjmp	.+698    	; 0x1e98 <_FAT_dirRegister+0x54e>
    1bde:	31 2c       	mov	r3, r1
    1be0:	21 2c       	mov	r2, r1
    1be2:	a1 2c       	mov	r10, r1
    1be4:	b1 2c       	mov	r11, r1
    1be6:	bd c0       	rjmp	.+378    	; 0x1d62 <_FAT_dirRegister+0x418>
    1be8:	81 2f       	mov	r24, r17
    1bea:	90 e0       	ldi	r25, 0x00	; 0
    1bec:	ed a5       	ldd	r30, Y+45	; 0x2d
    1bee:	fe a5       	ldd	r31, Y+46	; 0x2e
    1bf0:	e8 17       	cp	r30, r24
    1bf2:	f9 07       	cpc	r31, r25
    1bf4:	41 f4       	brne	.+16     	; 0x1c06 <_FAT_dirRegister+0x2bc>
    1bf6:	ce 01       	movw	r24, r28
    1bf8:	01 96       	adiw	r24, 0x01	; 1
    1bfa:	0e 94 a4 07 	call	0xf48	; 0xf48 <_FAT_getFileNextSector>
    1bfe:	81 11       	cpse	r24, r1
    1c00:	4d c1       	rjmp	.+666    	; 0x1e9c <_FAT_dirRegister+0x552>
    1c02:	1e a6       	std	Y+46, r1	; 0x2e
    1c04:	1d a6       	std	Y+45, r1	; 0x2d
    1c06:	cd a4       	ldd	r12, Y+45	; 0x2d
    1c08:	de a4       	ldd	r13, Y+46	; 0x2e
    1c0a:	cc 0c       	add	r12, r12
    1c0c:	dd 1c       	adc	r13, r13
    1c0e:	cc 0c       	add	r12, r12
    1c10:	dd 1c       	adc	r13, r13
    1c12:	cc 0c       	add	r12, r12
    1c14:	dd 1c       	adc	r13, r13
    1c16:	cc 0c       	add	r12, r12
    1c18:	dd 1c       	adc	r13, r13
    1c1a:	cc 0c       	add	r12, r12
    1c1c:	dd 1c       	adc	r13, r13
    1c1e:	40 e0       	ldi	r20, 0x00	; 0
    1c20:	60 e2       	ldi	r22, 0x20	; 32
    1c22:	70 e0       	ldi	r23, 0x00	; 0
    1c24:	c6 01       	movw	r24, r12
    1c26:	0e 94 af 01 	call	0x35e	; 0x35e <_FAT_fillBufferArray>
    1c2a:	f1 e0       	ldi	r31, 0x01	; 1
    1c2c:	9f 12       	cpse	r9, r31
    1c2e:	6e c0       	rjmp	.+220    	; 0x1d0c <_FAT_dirRegister+0x3c2>
    1c30:	24 e0       	ldi	r18, 0x04	; 4
    1c32:	f2 12       	cpse	r15, r18
    1c34:	06 c0       	rjmp	.+12     	; 0x1c42 <_FAT_dirRegister+0x2f8>
    1c36:	80 e1       	ldi	r24, 0x10	; 16
    1c38:	f6 01       	movw	r30, r12
    1c3a:	ea 51       	subi	r30, 0x1A	; 26
    1c3c:	fb 4f       	sbci	r31, 0xFB	; 251
    1c3e:	80 83       	st	Z, r24
    1c40:	05 c0       	rjmp	.+10     	; 0x1c4c <_FAT_dirRegister+0x302>
    1c42:	80 e2       	ldi	r24, 0x20	; 32
    1c44:	f6 01       	movw	r30, r12
    1c46:	ea 51       	subi	r30, 0x1A	; 26
    1c48:	fb 4f       	sbci	r31, 0xFB	; 251
    1c4a:	80 83       	st	Z, r24
    1c4c:	0e 94 9d 0c 	call	0x193a	; 0x193a <FAT_createTimeMilli>
    1c50:	f6 01       	movw	r30, r12
    1c52:	3d 96       	adiw	r30, 0x0d	; 13
    1c54:	e5 52       	subi	r30, 0x25	; 37
    1c56:	fb 4f       	sbci	r31, 0xFB	; 251
    1c58:	80 83       	st	Z, r24
    1c5a:	0e 94 9f 0c 	call	0x193e	; 0x193e <FAT_createTime>
    1c5e:	a8 2e       	mov	r10, r24
    1c60:	b9 2e       	mov	r11, r25
    1c62:	f6 01       	movw	r30, r12
    1c64:	e7 51       	subi	r30, 0x17	; 23
    1c66:	fb 4f       	sbci	r31, 0xFB	; 251
    1c68:	80 83       	st	Z, r24
    1c6a:	f6 01       	movw	r30, r12
    1c6c:	e6 51       	subi	r30, 0x16	; 22
    1c6e:	fb 4f       	sbci	r31, 0xFB	; 251
    1c70:	90 83       	st	Z, r25
    1c72:	f6 01       	movw	r30, r12
    1c74:	ef 50       	subi	r30, 0x0F	; 15
    1c76:	fb 4f       	sbci	r31, 0xFB	; 251
    1c78:	80 83       	st	Z, r24
    1c7a:	f6 01       	movw	r30, r12
    1c7c:	ee 50       	subi	r30, 0x0E	; 14
    1c7e:	fb 4f       	sbci	r31, 0xFB	; 251
    1c80:	90 83       	st	Z, r25
    1c82:	0e 94 a2 0c 	call	0x1944	; 0x1944 <FAT_createDate>
    1c86:	38 2e       	mov	r3, r24
    1c88:	29 2e       	mov	r2, r25
    1c8a:	f6 01       	movw	r30, r12
    1c8c:	e5 51       	subi	r30, 0x15	; 21
    1c8e:	fb 4f       	sbci	r31, 0xFB	; 251
    1c90:	80 83       	st	Z, r24
    1c92:	f6 01       	movw	r30, r12
    1c94:	e4 51       	subi	r30, 0x14	; 20
    1c96:	fb 4f       	sbci	r31, 0xFB	; 251
    1c98:	90 83       	st	Z, r25
    1c9a:	f6 01       	movw	r30, r12
    1c9c:	ed 50       	subi	r30, 0x0D	; 13
    1c9e:	fb 4f       	sbci	r31, 0xFB	; 251
    1ca0:	80 83       	st	Z, r24
    1ca2:	f6 01       	movw	r30, r12
    1ca4:	ec 50       	subi	r30, 0x0C	; 12
    1ca6:	fb 4f       	sbci	r31, 0xFB	; 251
    1ca8:	90 83       	st	Z, r25
    1caa:	39 a5       	ldd	r19, Y+41	; 0x29
    1cac:	2a a5       	ldd	r18, Y+42	; 0x2a
    1cae:	9b a5       	ldd	r25, Y+43	; 0x2b
    1cb0:	8c a5       	ldd	r24, Y+44	; 0x2c
    1cb2:	f6 01       	movw	r30, r12
    1cb4:	eb 50       	subi	r30, 0x0B	; 11
    1cb6:	fb 4f       	sbci	r31, 0xFB	; 251
    1cb8:	30 83       	st	Z, r19
    1cba:	f6 01       	movw	r30, r12
    1cbc:	ea 50       	subi	r30, 0x0A	; 10
    1cbe:	fb 4f       	sbci	r31, 0xFB	; 251
    1cc0:	20 83       	st	Z, r18
    1cc2:	20 91 50 03 	lds	r18, 0x0350	; 0x800350 <fat_obj+0x27>
    1cc6:	22 30       	cpi	r18, 0x02	; 2
    1cc8:	41 f4       	brne	.+16     	; 0x1cda <_FAT_dirRegister+0x390>
    1cca:	f6 01       	movw	r30, r12
    1ccc:	e1 51       	subi	r30, 0x11	; 17
    1cce:	fb 4f       	sbci	r31, 0xFB	; 251
    1cd0:	90 83       	st	Z, r25
    1cd2:	f6 01       	movw	r30, r12
    1cd4:	e0 51       	subi	r30, 0x10	; 16
    1cd6:	fb 4f       	sbci	r31, 0xFB	; 251
    1cd8:	80 83       	st	Z, r24
    1cda:	88 e1       	ldi	r24, 0x18	; 24
    1cdc:	f6 01       	movw	r30, r12
    1cde:	e9 51       	subi	r30, 0x19	; 25
    1ce0:	fb 4f       	sbci	r31, 0xFB	; 251
    1ce2:	80 83       	st	Z, r24
    1ce4:	80 e0       	ldi	r24, 0x00	; 0
    1ce6:	10 c0       	rjmp	.+32     	; 0x1d08 <_FAT_dirRegister+0x3be>
    1ce8:	28 2f       	mov	r18, r24
    1cea:	30 e0       	ldi	r19, 0x00	; 0
    1cec:	f9 01       	movw	r30, r18
    1cee:	ec 0d       	add	r30, r12
    1cf0:	fd 1d       	adc	r31, r13
    1cf2:	ad e1       	ldi	r26, 0x1D	; 29
    1cf4:	b0 e0       	ldi	r27, 0x00	; 0
    1cf6:	ac 0f       	add	r26, r28
    1cf8:	bd 1f       	adc	r27, r29
    1cfa:	a2 0f       	add	r26, r18
    1cfc:	b3 1f       	adc	r27, r19
    1cfe:	9c 91       	ld	r25, X
    1d00:	e5 52       	subi	r30, 0x25	; 37
    1d02:	fb 4f       	sbci	r31, 0xFB	; 251
    1d04:	90 83       	st	Z, r25
    1d06:	8f 5f       	subi	r24, 0xFF	; 255
    1d08:	8b 30       	cpi	r24, 0x0B	; 11
    1d0a:	70 f3       	brcs	.-36     	; 0x1ce8 <_FAT_dirRegister+0x39e>
    1d0c:	81 2f       	mov	r24, r17
    1d0e:	90 e0       	ldi	r25, 0x00	; 0
    1d10:	01 97       	sbiw	r24, 0x01	; 1
    1d12:	ed a5       	ldd	r30, Y+45	; 0x2d
    1d14:	fe a5       	ldd	r31, Y+46	; 0x2e
    1d16:	e8 17       	cp	r30, r24
    1d18:	f9 07       	cpc	r31, r25
    1d1a:	19 f0       	breq	.+6      	; 0x1d22 <_FAT_dirRegister+0x3d8>
    1d1c:	f1 e0       	ldi	r31, 0x01	; 1
    1d1e:	9f 12       	cpse	r9, r31
    1d20:	19 c0       	rjmp	.+50     	; 0x1d54 <_FAT_dirRegister+0x40a>
    1d22:	89 85       	ldd	r24, Y+9	; 0x09
    1d24:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d26:	ab 85       	ldd	r26, Y+11	; 0x0b
    1d28:	bc 85       	ldd	r27, Y+12	; 0x0c
    1d2a:	29 89       	ldd	r18, Y+17	; 0x11
    1d2c:	3a 89       	ldd	r19, Y+18	; 0x12
    1d2e:	82 0f       	add	r24, r18
    1d30:	93 1f       	adc	r25, r19
    1d32:	a1 1d       	adc	r26, r1
    1d34:	b1 1d       	adc	r27, r1
    1d36:	bc 01       	movw	r22, r24
    1d38:	cd 01       	movw	r24, r26
    1d3a:	61 50       	subi	r22, 0x01	; 1
    1d3c:	71 09       	sbc	r23, r1
    1d3e:	81 09       	sbc	r24, r1
    1d40:	91 09       	sbc	r25, r1
    1d42:	4b ed       	ldi	r20, 0xDB	; 219
    1d44:	54 e0       	ldi	r21, 0x04	; 4
    1d46:	0e 94 03 04 	call	0x806	; 0x806 <sd_write_single_block>
    1d4a:	80 91 57 04 	lds	r24, 0x0457	; 0x800457 <SD_ResponseToken>
    1d4e:	85 30       	cpi	r24, 0x05	; 5
    1d50:	09 f0       	breq	.+2      	; 0x1d54 <_FAT_dirRegister+0x40a>
    1d52:	a6 c0       	rjmp	.+332    	; 0x1ea0 <_FAT_dirRegister+0x556>
    1d54:	9a 94       	dec	r9
    1d56:	2d a5       	ldd	r18, Y+45	; 0x2d
    1d58:	3e a5       	ldd	r19, Y+46	; 0x2e
    1d5a:	2f 5f       	subi	r18, 0xFF	; 255
    1d5c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d5e:	3e a7       	std	Y+46, r19	; 0x2e
    1d60:	2d a7       	std	Y+45, r18	; 0x2d
    1d62:	91 10       	cpse	r9, r1
    1d64:	41 cf       	rjmp	.-382    	; 0x1be8 <_FAT_dirRegister+0x29e>
    1d66:	34 e0       	ldi	r19, 0x04	; 4
    1d68:	f3 12       	cpse	r15, r19
    1d6a:	9b c0       	rjmp	.+310    	; 0x1ea2 <_FAT_dirRegister+0x558>
    1d6c:	0f 2e       	mov	r0, r31
    1d6e:	f9 e2       	ldi	r31, 0x29	; 41
    1d70:	cf 2e       	mov	r12, r31
    1d72:	f3 e0       	ldi	r31, 0x03	; 3
    1d74:	df 2e       	mov	r13, r31
    1d76:	f0 2d       	mov	r31, r0
    1d78:	f6 01       	movw	r30, r12
    1d7a:	60 8d       	ldd	r22, Z+24	; 0x18
    1d7c:	71 8d       	ldd	r23, Z+25	; 0x19
    1d7e:	40 e0       	ldi	r20, 0x00	; 0
    1d80:	80 e0       	ldi	r24, 0x00	; 0
    1d82:	90 e0       	ldi	r25, 0x00	; 0
    1d84:	0e 94 af 01 	call	0x35e	; 0x35e <_FAT_fillBufferArray>
    1d88:	0f 2e       	mov	r0, r31
    1d8a:	fb ed       	ldi	r31, 0xDB	; 219
    1d8c:	ef 2e       	mov	r14, r31
    1d8e:	f4 e0       	ldi	r31, 0x04	; 4
    1d90:	ff 2e       	mov	r15, r31
    1d92:	f0 2d       	mov	r31, r0
    1d94:	8e e2       	ldi	r24, 0x2E	; 46
    1d96:	f7 01       	movw	r30, r14
    1d98:	80 83       	st	Z, r24
    1d9a:	40 e2       	ldi	r20, 0x20	; 32
    1d9c:	6a e0       	ldi	r22, 0x0A	; 10
    1d9e:	70 e0       	ldi	r23, 0x00	; 0
    1da0:	81 e0       	ldi	r24, 0x01	; 1
    1da2:	90 e0       	ldi	r25, 0x00	; 0
    1da4:	0e 94 af 01 	call	0x35e	; 0x35e <_FAT_fillBufferArray>
    1da8:	80 e1       	ldi	r24, 0x10	; 16
    1daa:	f7 01       	movw	r30, r14
    1dac:	83 87       	std	Z+11, r24	; 0x0b
    1dae:	1a 2d       	mov	r17, r10
    1db0:	a6 8a       	std	Z+22, r10	; 0x16
    1db2:	ab 2c       	mov	r10, r11
    1db4:	b7 8a       	std	Z+23, r11	; 0x17
    1db6:	b3 2c       	mov	r11, r3
    1db8:	30 8e       	std	Z+24, r3	; 0x18
    1dba:	92 2c       	mov	r9, r2
    1dbc:	21 8e       	std	Z+25, r2	; 0x19
    1dbe:	39 a5       	ldd	r19, Y+41	; 0x29
    1dc0:	2a a5       	ldd	r18, Y+42	; 0x2a
    1dc2:	9b a5       	ldd	r25, Y+43	; 0x2b
    1dc4:	8c a5       	ldd	r24, Y+44	; 0x2c
    1dc6:	32 8f       	std	Z+26, r19	; 0x1a
    1dc8:	23 8f       	std	Z+27, r18	; 0x1b
    1dca:	f6 01       	movw	r30, r12
    1dcc:	27 a1       	ldd	r18, Z+39	; 0x27
    1dce:	22 30       	cpi	r18, 0x02	; 2
    1dd0:	19 f4       	brne	.+6      	; 0x1dd8 <_FAT_dirRegister+0x48e>
    1dd2:	f7 01       	movw	r30, r14
    1dd4:	94 8b       	std	Z+20, r25	; 0x14
    1dd6:	85 8b       	std	Z+21, r24	; 0x15
    1dd8:	0f 2e       	mov	r0, r31
    1dda:	fb ed       	ldi	r31, 0xDB	; 219
    1ddc:	ef 2e       	mov	r14, r31
    1dde:	f4 e0       	ldi	r31, 0x04	; 4
    1de0:	ff 2e       	mov	r15, r31
    1de2:	f0 2d       	mov	r31, r0
    1de4:	8e e2       	ldi	r24, 0x2E	; 46
    1de6:	f7 01       	movw	r30, r14
    1de8:	80 a3       	std	Z+32, r24	; 0x20
    1dea:	81 a3       	std	Z+33, r24	; 0x21
    1dec:	40 e2       	ldi	r20, 0x20	; 32
    1dee:	69 e0       	ldi	r22, 0x09	; 9
    1df0:	70 e0       	ldi	r23, 0x00	; 0
    1df2:	82 e2       	ldi	r24, 0x22	; 34
    1df4:	90 e0       	ldi	r25, 0x00	; 0
    1df6:	0e 94 af 01 	call	0x35e	; 0x35e <_FAT_fillBufferArray>
    1dfa:	80 e1       	ldi	r24, 0x10	; 16
    1dfc:	f7 01       	movw	r30, r14
    1dfe:	83 a7       	std	Z+43, r24	; 0x2b
    1e00:	16 ab       	std	Z+54, r17	; 0x36
    1e02:	a7 aa       	std	Z+55, r10	; 0x37
    1e04:	b0 ae       	std	Z+56, r11	; 0x38
    1e06:	91 ae       	std	Z+57, r9	; 0x39
    1e08:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <fat_obj+0x27>
    1e0c:	82 30       	cpi	r24, 0x02	; 2
    1e0e:	d9 f4       	brne	.+54     	; 0x1e46 <_FAT_dirRegister+0x4fc>
    1e10:	49 81       	ldd	r20, Y+1	; 0x01
    1e12:	5a 81       	ldd	r21, Y+2	; 0x02
    1e14:	6b 81       	ldd	r22, Y+3	; 0x03
    1e16:	7c 81       	ldd	r23, Y+4	; 0x04
    1e18:	80 91 39 03 	lds	r24, 0x0339	; 0x800339 <fat_obj+0x10>
    1e1c:	90 91 3a 03 	lds	r25, 0x033A	; 0x80033a <fat_obj+0x11>
    1e20:	a0 91 3b 03 	lds	r26, 0x033B	; 0x80033b <fat_obj+0x12>
    1e24:	b0 91 3c 03 	lds	r27, 0x033C	; 0x80033c <fat_obj+0x13>
    1e28:	48 17       	cp	r20, r24
    1e2a:	59 07       	cpc	r21, r25
    1e2c:	6a 07       	cpc	r22, r26
    1e2e:	7b 07       	cpc	r23, r27
    1e30:	21 f4       	brne	.+8      	; 0x1e3a <_FAT_dirRegister+0x4f0>
    1e32:	19 82       	std	Y+1, r1	; 0x01
    1e34:	1a 82       	std	Y+2, r1	; 0x02
    1e36:	1b 82       	std	Y+3, r1	; 0x03
    1e38:	1c 82       	std	Y+4, r1	; 0x04
    1e3a:	9b 81       	ldd	r25, Y+3	; 0x03
    1e3c:	8c 81       	ldd	r24, Y+4	; 0x04
    1e3e:	eb ed       	ldi	r30, 0xDB	; 219
    1e40:	f4 e0       	ldi	r31, 0x04	; 4
    1e42:	94 ab       	std	Z+52, r25	; 0x34
    1e44:	85 ab       	std	Z+53, r24	; 0x35
    1e46:	99 81       	ldd	r25, Y+1	; 0x01
    1e48:	8a 81       	ldd	r24, Y+2	; 0x02
    1e4a:	eb ed       	ldi	r30, 0xDB	; 219
    1e4c:	f4 e0       	ldi	r31, 0x04	; 4
    1e4e:	92 af       	std	Z+58, r25	; 0x3a
    1e50:	83 af       	std	Z+59, r24	; 0x3b
    1e52:	af 01       	movw	r20, r30
    1e54:	c3 01       	movw	r24, r6
    1e56:	b2 01       	movw	r22, r4
    1e58:	0e 94 03 04 	call	0x806	; 0x806 <sd_write_single_block>
    1e5c:	80 91 57 04 	lds	r24, 0x0457	; 0x800457 <SD_ResponseToken>
    1e60:	85 30       	cpi	r24, 0x05	; 5
    1e62:	f9 f0       	breq	.+62     	; 0x1ea2 <_FAT_dirRegister+0x558>
    1e64:	0c e0       	ldi	r16, 0x0C	; 12
    1e66:	1d c0       	rjmp	.+58     	; 0x1ea2 <_FAT_dirRegister+0x558>
    1e68:	05 e0       	ldi	r16, 0x05	; 5
    1e6a:	1b c0       	rjmp	.+54     	; 0x1ea2 <_FAT_dirRegister+0x558>
    1e6c:	08 e0       	ldi	r16, 0x08	; 8
    1e6e:	19 c0       	rjmp	.+50     	; 0x1ea2 <_FAT_dirRegister+0x558>
    1e70:	03 e0       	ldi	r16, 0x03	; 3
    1e72:	17 c0       	rjmp	.+46     	; 0x1ea2 <_FAT_dirRegister+0x558>
    1e74:	03 e0       	ldi	r16, 0x03	; 3
    1e76:	15 c0       	rjmp	.+42     	; 0x1ea2 <_FAT_dirRegister+0x558>
    1e78:	05 e0       	ldi	r16, 0x05	; 5
    1e7a:	13 c0       	rjmp	.+38     	; 0x1ea2 <_FAT_dirRegister+0x558>
    1e7c:	07 e0       	ldi	r16, 0x07	; 7
    1e7e:	11 c0       	rjmp	.+34     	; 0x1ea2 <_FAT_dirRegister+0x558>
    1e80:	04 e0       	ldi	r16, 0x04	; 4
    1e82:	0f c0       	rjmp	.+30     	; 0x1ea2 <_FAT_dirRegister+0x558>
    1e84:	0c e0       	ldi	r16, 0x0C	; 12
    1e86:	0d c0       	rjmp	.+26     	; 0x1ea2 <_FAT_dirRegister+0x558>
    1e88:	0c e0       	ldi	r16, 0x0C	; 12
    1e8a:	0b c0       	rjmp	.+22     	; 0x1ea2 <_FAT_dirRegister+0x558>
    1e8c:	07 e0       	ldi	r16, 0x07	; 7
    1e8e:	09 c0       	rjmp	.+18     	; 0x1ea2 <_FAT_dirRegister+0x558>
    1e90:	08 2f       	mov	r16, r24
    1e92:	07 c0       	rjmp	.+14     	; 0x1ea2 <_FAT_dirRegister+0x558>
    1e94:	07 e0       	ldi	r16, 0x07	; 7
    1e96:	05 c0       	rjmp	.+10     	; 0x1ea2 <_FAT_dirRegister+0x558>
    1e98:	0c e0       	ldi	r16, 0x0C	; 12
    1e9a:	03 c0       	rjmp	.+6      	; 0x1ea2 <_FAT_dirRegister+0x558>
    1e9c:	0c e0       	ldi	r16, 0x0C	; 12
    1e9e:	01 c0       	rjmp	.+2      	; 0x1ea2 <_FAT_dirRegister+0x558>
    1ea0:	0c e0       	ldi	r16, 0x0C	; 12
    1ea2:	80 2f       	mov	r24, r16
    1ea4:	ae 96       	adiw	r28, 0x2e	; 46
    1ea6:	0f b6       	in	r0, 0x3f	; 63
    1ea8:	f8 94       	cli
    1eaa:	de bf       	out	0x3e, r29	; 62
    1eac:	0f be       	out	0x3f, r0	; 63
    1eae:	cd bf       	out	0x3d, r28	; 61
    1eb0:	df 91       	pop	r29
    1eb2:	cf 91       	pop	r28
    1eb4:	1f 91       	pop	r17
    1eb6:	0f 91       	pop	r16
    1eb8:	ff 90       	pop	r15
    1eba:	ef 90       	pop	r14
    1ebc:	df 90       	pop	r13
    1ebe:	cf 90       	pop	r12
    1ec0:	bf 90       	pop	r11
    1ec2:	af 90       	pop	r10
    1ec4:	9f 90       	pop	r9
    1ec6:	7f 90       	pop	r7
    1ec8:	6f 90       	pop	r6
    1eca:	5f 90       	pop	r5
    1ecc:	4f 90       	pop	r4
    1ece:	3f 90       	pop	r3
    1ed0:	2f 90       	pop	r2
    1ed2:	08 95       	ret

00001ed4 <FAT_makeDir>:
    1ed4:	64 e0       	ldi	r22, 0x04	; 4
    1ed6:	0e 94 a5 0c 	call	0x194a	; 0x194a <_FAT_dirRegister>
    1eda:	08 95       	ret

00001edc <FAT_openDir>:
    1edc:	0f 93       	push	r16
    1ede:	1f 93       	push	r17
    1ee0:	cf 93       	push	r28
    1ee2:	df 93       	push	r29
    1ee4:	ec 01       	movw	r28, r24
    1ee6:	8b 01       	movw	r16, r22
    1ee8:	1b 8a       	std	Y+19, r1	; 0x13
    1eea:	1a 8a       	std	Y+18, r1	; 0x12
    1eec:	e9 e2       	ldi	r30, 0x29	; 41
    1eee:	f3 e0       	ldi	r31, 0x03	; 3
    1ef0:	80 89       	ldd	r24, Z+16	; 0x10
    1ef2:	91 89       	ldd	r25, Z+17	; 0x11
    1ef4:	a2 89       	ldd	r26, Z+18	; 0x12
    1ef6:	b3 89       	ldd	r27, Z+19	; 0x13
    1ef8:	88 83       	st	Y, r24
    1efa:	99 83       	std	Y+1, r25	; 0x01
    1efc:	aa 83       	std	Y+2, r26	; 0x02
    1efe:	bb 83       	std	Y+3, r27	; 0x03
    1f00:	1a 8e       	std	Y+26, r1	; 0x1a
    1f02:	1f 8a       	std	Y+23, r1	; 0x17
    1f04:	1e 8a       	std	Y+22, r1	; 0x16
    1f06:	1b 8e       	std	Y+27, r1	; 0x1b
    1f08:	40 89       	ldd	r20, Z+16	; 0x10
    1f0a:	51 89       	ldd	r21, Z+17	; 0x11
    1f0c:	62 89       	ldd	r22, Z+18	; 0x12
    1f0e:	73 89       	ldd	r23, Z+19	; 0x13
    1f10:	ce 01       	movw	r24, r28
    1f12:	0e 94 1b 02 	call	0x436	; 0x436 <_FAT_moveWindow>
    1f16:	48 e0       	ldi	r20, 0x08	; 8
    1f18:	b8 01       	movw	r22, r16
    1f1a:	ce 01       	movw	r24, r28
    1f1c:	0e 94 08 08 	call	0x1010	; 0x1010 <_FAT_followPath>
    1f20:	18 2f       	mov	r17, r24
    1f22:	81 11       	cpse	r24, r1
    1f24:	09 c0       	rjmp	.+18     	; 0x1f38 <FAT_openDir+0x5c>
    1f26:	48 81       	ld	r20, Y
    1f28:	59 81       	ldd	r21, Y+1	; 0x01
    1f2a:	6a 81       	ldd	r22, Y+2	; 0x02
    1f2c:	7b 81       	ldd	r23, Y+3	; 0x03
    1f2e:	ce 01       	movw	r24, r28
    1f30:	0e 94 1b 02 	call	0x436	; 0x436 <_FAT_moveWindow>
    1f34:	81 e0       	ldi	r24, 0x01	; 1
    1f36:	8a 8f       	std	Y+26, r24	; 0x1a
    1f38:	81 2f       	mov	r24, r17
    1f3a:	df 91       	pop	r29
    1f3c:	cf 91       	pop	r28
    1f3e:	1f 91       	pop	r17
    1f40:	0f 91       	pop	r16
    1f42:	08 95       	ret

00001f44 <FAT_findNext>:
    1f44:	cf 92       	push	r12
    1f46:	df 92       	push	r13
    1f48:	ef 92       	push	r14
    1f4a:	ff 92       	push	r15
    1f4c:	0f 93       	push	r16
    1f4e:	1f 93       	push	r17
    1f50:	cf 93       	push	r28
    1f52:	df 93       	push	r29
    1f54:	7c 01       	movw	r14, r24
    1f56:	6b 01       	movw	r12, r22
    1f58:	fc 01       	movw	r30, r24
    1f5a:	80 8d       	ldd	r24, Z+24	; 0x18
    1f5c:	88 23       	and	r24, r24
    1f5e:	39 f0       	breq	.+14     	; 0x1f6e <FAT_findNext+0x2a>
    1f60:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <bufferModBy>
    1f64:	90 91 55 03 	lds	r25, 0x0355	; 0x800355 <bufferModBy+0x1>
    1f68:	e8 16       	cp	r14, r24
    1f6a:	f9 06       	cpc	r15, r25
    1f6c:	b9 f0       	breq	.+46     	; 0x1f9c <FAT_findNext+0x58>
    1f6e:	f7 01       	movw	r30, r14
    1f70:	80 85       	ldd	r24, Z+8	; 0x08
    1f72:	91 85       	ldd	r25, Z+9	; 0x09
    1f74:	a2 85       	ldd	r26, Z+10	; 0x0a
    1f76:	b3 85       	ldd	r27, Z+11	; 0x0b
    1f78:	20 89       	ldd	r18, Z+16	; 0x10
    1f7a:	31 89       	ldd	r19, Z+17	; 0x11
    1f7c:	bc 01       	movw	r22, r24
    1f7e:	cd 01       	movw	r24, r26
    1f80:	62 0f       	add	r22, r18
    1f82:	73 1f       	adc	r23, r19
    1f84:	81 1d       	adc	r24, r1
    1f86:	91 1d       	adc	r25, r1
    1f88:	4b ed       	ldi	r20, 0xDB	; 219
    1f8a:	54 e0       	ldi	r21, 0x04	; 4
    1f8c:	0e 94 c3 04 	call	0x986	; 0x986 <sd_read_single_block>
    1f90:	81 11       	cpse	r24, r1
    1f92:	ee c0       	rjmp	.+476    	; 0x2170 <FAT_findNext+0x22c>
    1f94:	f0 92 55 03 	sts	0x0355, r15	; 0x800355 <bufferModBy+0x1>
    1f98:	e0 92 54 03 	sts	0x0354, r14	; 0x800354 <bufferModBy>
    1f9c:	d0 e0       	ldi	r29, 0x00	; 0
    1f9e:	f7 01       	movw	r30, r14
    1fa0:	c0 8d       	ldd	r28, Z+24	; 0x18
    1fa2:	c8 c0       	rjmp	.+400    	; 0x2134 <FAT_findNext+0x1f0>
    1fa4:	f0 e2       	ldi	r31, 0x20	; 32
    1fa6:	cf 9f       	mul	r28, r31
    1fa8:	80 01       	movw	r16, r0
    1faa:	11 24       	eor	r1, r1
    1fac:	f8 01       	movw	r30, r16
    1fae:	e5 52       	subi	r30, 0x25	; 37
    1fb0:	fb 4f       	sbci	r31, 0xFB	; 251
    1fb2:	80 81       	ld	r24, Z
    1fb4:	88 23       	and	r24, r24
    1fb6:	09 f4       	brne	.+2      	; 0x1fba <FAT_findNext+0x76>
    1fb8:	dd c0       	rjmp	.+442    	; 0x2174 <FAT_findNext+0x230>
    1fba:	85 3e       	cpi	r24, 0xE5	; 229
    1fbc:	09 f4       	brne	.+2      	; 0x1fc0 <FAT_findNext+0x7c>
    1fbe:	b9 c0       	rjmp	.+370    	; 0x2132 <FAT_findNext+0x1ee>
    1fc0:	8e 32       	cpi	r24, 0x2E	; 46
    1fc2:	09 f4       	brne	.+2      	; 0x1fc6 <FAT_findNext+0x82>
    1fc4:	b6 c0       	rjmp	.+364    	; 0x2132 <FAT_findNext+0x1ee>
    1fc6:	f8 01       	movw	r30, r16
    1fc8:	ea 51       	subi	r30, 0x1A	; 26
    1fca:	fb 4f       	sbci	r31, 0xFB	; 251
    1fcc:	80 81       	ld	r24, Z
    1fce:	f6 01       	movw	r30, r12
    1fd0:	82 a3       	std	Z+34, r24	; 0x22
    1fd2:	88 30       	cpi	r24, 0x08	; 8
    1fd4:	09 f4       	brne	.+2      	; 0x1fd8 <FAT_findNext+0x94>
    1fd6:	ad c0       	rjmp	.+346    	; 0x2132 <FAT_findNext+0x1ee>
    1fd8:	8f 30       	cpi	r24, 0x0F	; 15
    1fda:	89 f5       	brne	.+98     	; 0x203e <FAT_findNext+0xfa>
    1fdc:	f7 01       	movw	r30, r14
    1fde:	86 89       	ldd	r24, Z+22	; 0x16
    1fe0:	97 89       	ldd	r25, Z+23	; 0x17
    1fe2:	00 97       	sbiw	r24, 0x00	; 0
    1fe4:	39 f0       	breq	.+14     	; 0x1ff4 <FAT_findNext+0xb0>
    1fe6:	22 89       	ldd	r18, Z+18	; 0x12
    1fe8:	33 89       	ldd	r19, Z+19	; 0x13
    1fea:	01 97       	sbiw	r24, 0x01	; 1
    1fec:	28 17       	cp	r18, r24
    1fee:	39 07       	cpc	r19, r25
    1ff0:	08 f4       	brcc	.+2      	; 0x1ff4 <FAT_findNext+0xb0>
    1ff2:	9f c0       	rjmp	.+318    	; 0x2132 <FAT_findNext+0x1ee>
    1ff4:	6c 2f       	mov	r22, r28
    1ff6:	70 e0       	ldi	r23, 0x00	; 0
    1ff8:	86 e5       	ldi	r24, 0x56	; 86
    1ffa:	93 e0       	ldi	r25, 0x03	; 3
    1ffc:	0e 94 9e 02 	call	0x53c	; 0x53c <_FAT_parse_long_names>
    2000:	d1 11       	cpse	r29, r1
    2002:	1b c0       	rjmp	.+54     	; 0x203a <FAT_findNext+0xf6>
    2004:	f7 01       	movw	r30, r14
    2006:	80 85       	ldd	r24, Z+8	; 0x08
    2008:	91 85       	ldd	r25, Z+9	; 0x09
    200a:	a2 85       	ldd	r26, Z+10	; 0x0a
    200c:	b3 85       	ldd	r27, Z+11	; 0x0b
    200e:	f6 01       	movw	r30, r12
    2010:	80 8b       	std	Z+16, r24	; 0x10
    2012:	91 8b       	std	Z+17, r25	; 0x11
    2014:	a2 8b       	std	Z+18, r26	; 0x12
    2016:	b3 8b       	std	Z+19, r27	; 0x13
    2018:	c0 a3       	std	Z+32, r28	; 0x20
    201a:	f7 01       	movw	r30, r14
    201c:	80 89       	ldd	r24, Z+16	; 0x10
    201e:	91 89       	ldd	r25, Z+17	; 0x11
    2020:	f6 01       	movw	r30, r12
    2022:	95 8f       	std	Z+29, r25	; 0x1d
    2024:	84 8f       	std	Z+28, r24	; 0x1c
    2026:	f7 01       	movw	r30, r14
    2028:	84 81       	ldd	r24, Z+4	; 0x04
    202a:	95 81       	ldd	r25, Z+5	; 0x05
    202c:	a6 81       	ldd	r26, Z+6	; 0x06
    202e:	b7 81       	ldd	r27, Z+7	; 0x07
    2030:	f6 01       	movw	r30, r12
    2032:	84 87       	std	Z+12, r24	; 0x0c
    2034:	95 87       	std	Z+13, r25	; 0x0d
    2036:	a6 87       	std	Z+14, r26	; 0x0e
    2038:	b7 87       	std	Z+15, r27	; 0x0f
    203a:	d1 e0       	ldi	r29, 0x01	; 1
    203c:	7a c0       	rjmp	.+244    	; 0x2132 <FAT_findNext+0x1ee>
    203e:	d1 11       	cpse	r29, r1
    2040:	0b c0       	rjmp	.+22     	; 0x2058 <FAT_findNext+0x114>
    2042:	46 e5       	ldi	r20, 0x56	; 86
    2044:	53 e0       	ldi	r21, 0x03	; 3
    2046:	60 e0       	ldi	r22, 0x00	; 0
    2048:	8c 2f       	mov	r24, r28
    204a:	0e 94 be 01 	call	0x37c	; 0x37c <_FAT_getSFN>
    204e:	f6 01       	movw	r30, r12
    2050:	10 8a       	std	Z+16, r1	; 0x10
    2052:	11 8a       	std	Z+17, r1	; 0x11
    2054:	12 8a       	std	Z+18, r1	; 0x12
    2056:	13 8a       	std	Z+19, r1	; 0x13
    2058:	f7 01       	movw	r30, r14
    205a:	82 89       	ldd	r24, Z+18	; 0x12
    205c:	93 89       	ldd	r25, Z+19	; 0x13
    205e:	01 96       	adiw	r24, 0x01	; 1
    2060:	93 8b       	std	Z+19, r25	; 0x13
    2062:	82 8b       	std	Z+18, r24	; 0x12
    2064:	26 89       	ldd	r18, Z+22	; 0x16
    2066:	37 89       	ldd	r19, Z+23	; 0x17
    2068:	82 17       	cp	r24, r18
    206a:	93 07       	cpc	r25, r19
    206c:	08 f4       	brcc	.+2      	; 0x2070 <FAT_findNext+0x12c>
    206e:	60 c0       	rjmp	.+192    	; 0x2130 <FAT_findNext+0x1ec>
    2070:	f8 01       	movw	r30, r16
    2072:	e9 50       	subi	r30, 0x09	; 9
    2074:	fb 4f       	sbci	r31, 0xFB	; 251
    2076:	30 81       	ld	r19, Z
    2078:	f8 01       	movw	r30, r16
    207a:	e8 50       	subi	r30, 0x08	; 8
    207c:	fb 4f       	sbci	r31, 0xFB	; 251
    207e:	20 81       	ld	r18, Z
    2080:	f8 01       	movw	r30, r16
    2082:	e7 50       	subi	r30, 0x07	; 7
    2084:	fb 4f       	sbci	r31, 0xFB	; 251
    2086:	90 81       	ld	r25, Z
    2088:	f8 01       	movw	r30, r16
    208a:	e6 50       	subi	r30, 0x06	; 6
    208c:	fb 4f       	sbci	r31, 0xFB	; 251
    208e:	80 81       	ld	r24, Z
    2090:	f6 01       	movw	r30, r12
    2092:	34 83       	std	Z+4, r19	; 0x04
    2094:	25 83       	std	Z+5, r18	; 0x05
    2096:	96 83       	std	Z+6, r25	; 0x06
    2098:	87 83       	std	Z+7, r24	; 0x07
    209a:	90 e0       	ldi	r25, 0x00	; 0
    209c:	80 e0       	ldi	r24, 0x00	; 0
    209e:	f8 01       	movw	r30, r16
    20a0:	ed 50       	subi	r30, 0x0D	; 13
    20a2:	fb 4f       	sbci	r31, 0xFB	; 251
    20a4:	30 81       	ld	r19, Z
    20a6:	f8 01       	movw	r30, r16
    20a8:	ec 50       	subi	r30, 0x0C	; 12
    20aa:	fb 4f       	sbci	r31, 0xFB	; 251
    20ac:	20 81       	ld	r18, Z
    20ae:	f6 01       	movw	r30, r12
    20b0:	36 8b       	std	Z+22, r19	; 0x16
    20b2:	27 8b       	std	Z+23, r18	; 0x17
    20b4:	f8 01       	movw	r30, r16
    20b6:	ef 50       	subi	r30, 0x0F	; 15
    20b8:	fb 4f       	sbci	r31, 0xFB	; 251
    20ba:	30 81       	ld	r19, Z
    20bc:	f8 01       	movw	r30, r16
    20be:	ee 50       	subi	r30, 0x0E	; 14
    20c0:	fb 4f       	sbci	r31, 0xFB	; 251
    20c2:	20 81       	ld	r18, Z
    20c4:	f6 01       	movw	r30, r12
    20c6:	34 8b       	std	Z+20, r19	; 0x14
    20c8:	25 8b       	std	Z+21, r18	; 0x15
    20ca:	f8 01       	movw	r30, r16
    20cc:	eb 50       	subi	r30, 0x0B	; 11
    20ce:	fb 4f       	sbci	r31, 0xFB	; 251
    20d0:	30 81       	ld	r19, Z
    20d2:	f8 01       	movw	r30, r16
    20d4:	ea 50       	subi	r30, 0x0A	; 10
    20d6:	fb 4f       	sbci	r31, 0xFB	; 251
    20d8:	20 81       	ld	r18, Z
    20da:	40 91 50 03 	lds	r20, 0x0350	; 0x800350 <fat_obj+0x27>
    20de:	42 30       	cpi	r20, 0x02	; 2
    20e0:	41 f4       	brne	.+16     	; 0x20f2 <FAT_findNext+0x1ae>
    20e2:	f8 01       	movw	r30, r16
    20e4:	e1 51       	subi	r30, 0x11	; 17
    20e6:	fb 4f       	sbci	r31, 0xFB	; 251
    20e8:	90 81       	ld	r25, Z
    20ea:	f8 01       	movw	r30, r16
    20ec:	e0 51       	subi	r30, 0x10	; 16
    20ee:	fb 4f       	sbci	r31, 0xFB	; 251
    20f0:	80 81       	ld	r24, Z
    20f2:	f7 01       	movw	r30, r14
    20f4:	43 8d       	ldd	r20, Z+27	; 0x1b
    20f6:	44 23       	and	r20, r20
    20f8:	21 f0       	breq	.+8      	; 0x2102 <FAT_findNext+0x1be>
    20fa:	30 83       	st	Z, r19
    20fc:	21 83       	std	Z+1, r18	; 0x01
    20fe:	92 83       	std	Z+2, r25	; 0x02
    2100:	83 83       	std	Z+3, r24	; 0x03
    2102:	f6 01       	movw	r30, r12
    2104:	30 87       	std	Z+8, r19	; 0x08
    2106:	21 87       	std	Z+9, r18	; 0x09
    2108:	92 87       	std	Z+10, r25	; 0x0a
    210a:	83 87       	std	Z+11, r24	; 0x0b
    210c:	f7 01       	movw	r30, r14
    210e:	c0 8f       	std	Z+24, r28	; 0x18
    2110:	86 89       	ldd	r24, Z+22	; 0x16
    2112:	97 89       	ldd	r25, Z+23	; 0x17
    2114:	00 97       	sbiw	r24, 0x00	; 0
    2116:	21 f4       	brne	.+8      	; 0x2120 <FAT_findNext+0x1dc>
    2118:	cf 5f       	subi	r28, 0xFF	; 255
    211a:	c0 8f       	std	Z+24, r28	; 0x18
    211c:	80 e0       	ldi	r24, 0x00	; 0
    211e:	2f c0       	rjmp	.+94     	; 0x217e <FAT_findNext+0x23a>
    2120:	f7 01       	movw	r30, r14
    2122:	22 89       	ldd	r18, Z+18	; 0x12
    2124:	33 89       	ldd	r19, Z+19	; 0x13
    2126:	82 17       	cp	r24, r18
    2128:	93 07       	cpc	r25, r19
    212a:	31 f1       	breq	.+76     	; 0x2178 <FAT_findNext+0x234>
    212c:	d0 e0       	ldi	r29, 0x00	; 0
    212e:	01 c0       	rjmp	.+2      	; 0x2132 <FAT_findNext+0x1ee>
    2130:	d0 e0       	ldi	r29, 0x00	; 0
    2132:	cf 5f       	subi	r28, 0xFF	; 255
    2134:	80 91 4e 03 	lds	r24, 0x034E	; 0x80034e <fat_obj+0x25>
    2138:	c8 17       	cp	r28, r24
    213a:	08 f4       	brcc	.+2      	; 0x213e <FAT_findNext+0x1fa>
    213c:	33 cf       	rjmp	.-410    	; 0x1fa4 <FAT_findNext+0x60>
    213e:	f7 01       	movw	r30, r14
    2140:	80 89       	ldd	r24, Z+16	; 0x10
    2142:	91 89       	ldd	r25, Z+17	; 0x11
    2144:	01 96       	adiw	r24, 0x01	; 1
    2146:	91 8b       	std	Z+17, r25	; 0x11
    2148:	80 8b       	std	Z+16, r24	; 0x10
    214a:	c7 01       	movw	r24, r14
    214c:	0e 94 a4 07 	call	0xf48	; 0xf48 <_FAT_getFileNextSector>
    2150:	81 11       	cpse	r24, r1
    2152:	14 c0       	rjmp	.+40     	; 0x217c <FAT_findNext+0x238>
    2154:	f7 01       	movw	r30, r14
    2156:	10 8e       	std	Z+24, r1	; 0x18
    2158:	80 89       	ldd	r24, Z+16	; 0x10
    215a:	91 89       	ldd	r25, Z+17	; 0x11
    215c:	00 97       	sbiw	r24, 0x00	; 0
    215e:	19 f0       	breq	.+6      	; 0x2166 <FAT_findNext+0x222>
    2160:	01 97       	sbiw	r24, 0x01	; 1
    2162:	91 8b       	std	Z+17, r25	; 0x11
    2164:	80 8b       	std	Z+16, r24	; 0x10
    2166:	f0 92 55 03 	sts	0x0355, r15	; 0x800355 <bufferModBy+0x1>
    216a:	e0 92 54 03 	sts	0x0354, r14	; 0x800354 <bufferModBy>
    216e:	17 cf       	rjmp	.-466    	; 0x1f9e <FAT_findNext+0x5a>
    2170:	8c e0       	ldi	r24, 0x0C	; 12
    2172:	05 c0       	rjmp	.+10     	; 0x217e <FAT_findNext+0x23a>
    2174:	82 e0       	ldi	r24, 0x02	; 2
    2176:	03 c0       	rjmp	.+6      	; 0x217e <FAT_findNext+0x23a>
    2178:	80 e0       	ldi	r24, 0x00	; 0
    217a:	01 c0       	rjmp	.+2      	; 0x217e <FAT_findNext+0x23a>
    217c:	82 e0       	ldi	r24, 0x02	; 2
    217e:	df 91       	pop	r29
    2180:	cf 91       	pop	r28
    2182:	1f 91       	pop	r17
    2184:	0f 91       	pop	r16
    2186:	ff 90       	pop	r15
    2188:	ef 90       	pop	r14
    218a:	df 90       	pop	r13
    218c:	cf 90       	pop	r12
    218e:	08 95       	ret

00002190 <FAT_findByIndex>:
    2190:	0f 93       	push	r16
    2192:	1f 93       	push	r17
    2194:	cf 93       	push	r28
    2196:	df 93       	push	r29
    2198:	ec 01       	movw	r28, r24
    219a:	8b 01       	movw	r16, r22
    219c:	5f 8b       	std	Y+23, r21	; 0x17
    219e:	4e 8b       	std	Y+22, r20	; 0x16
    21a0:	48 81       	ld	r20, Y
    21a2:	59 81       	ldd	r21, Y+1	; 0x01
    21a4:	6a 81       	ldd	r22, Y+2	; 0x02
    21a6:	7b 81       	ldd	r23, Y+3	; 0x03
    21a8:	0e 94 1b 02 	call	0x436	; 0x436 <_FAT_moveWindow>
    21ac:	b8 01       	movw	r22, r16
    21ae:	ce 01       	movw	r24, r28
    21b0:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <FAT_findNext>
    21b4:	1f 8a       	std	Y+23, r1	; 0x17
    21b6:	1e 8a       	std	Y+22, r1	; 0x16
    21b8:	df 91       	pop	r29
    21ba:	cf 91       	pop	r28
    21bc:	1f 91       	pop	r17
    21be:	0f 91       	pop	r16
    21c0:	08 95       	ret

000021c2 <FAT_makeFile>:
    21c2:	65 e0       	ldi	r22, 0x05	; 5
    21c4:	0e 94 a5 0c 	call	0x194a	; 0x194a <_FAT_dirRegister>
    21c8:	08 95       	ret

000021ca <FAT_fsync>:
    21ca:	cf 93       	push	r28
    21cc:	df 93       	push	r29
    21ce:	fc 01       	movw	r30, r24
    21d0:	24 a1       	ldd	r18, Z+36	; 0x24
    21d2:	22 23       	and	r18, r18
    21d4:	91 f1       	breq	.+100    	; 0x223a <FAT_fsync+0x70>
    21d6:	25 a1       	ldd	r18, Z+37	; 0x25
    21d8:	21 11       	cpse	r18, r1
    21da:	31 c0       	rjmp	.+98     	; 0x223e <FAT_fsync+0x74>
    21dc:	ec 01       	movw	r28, r24
    21de:	80 8d       	ldd	r24, Z+24	; 0x18
    21e0:	91 8d       	ldd	r25, Z+25	; 0x19
    21e2:	a2 8d       	ldd	r26, Z+26	; 0x1a
    21e4:	b3 8d       	ldd	r27, Z+27	; 0x1b
    21e6:	24 8d       	ldd	r18, Z+28	; 0x1c
    21e8:	35 8d       	ldd	r19, Z+29	; 0x1d
    21ea:	bc 01       	movw	r22, r24
    21ec:	cd 01       	movw	r24, r26
    21ee:	62 0f       	add	r22, r18
    21f0:	73 1f       	adc	r23, r19
    21f2:	81 1d       	adc	r24, r1
    21f4:	91 1d       	adc	r25, r1
    21f6:	4b ed       	ldi	r20, 0xDB	; 219
    21f8:	54 e0       	ldi	r21, 0x04	; 4
    21fa:	0e 94 03 04 	call	0x806	; 0x806 <sd_write_single_block>
    21fe:	80 91 57 04 	lds	r24, 0x0457	; 0x800457 <SD_ResponseToken>
    2202:	85 30       	cpi	r24, 0x05	; 5
    2204:	f1 f4       	brne	.+60     	; 0x2242 <FAT_fsync+0x78>
    2206:	8b a1       	ldd	r24, Y+35	; 0x23
    2208:	88 23       	and	r24, r24
    220a:	99 f0       	breq	.+38     	; 0x2232 <FAT_fsync+0x68>
    220c:	48 81       	ld	r20, Y
    220e:	59 81       	ldd	r21, Y+1	; 0x01
    2210:	6a 81       	ldd	r22, Y+2	; 0x02
    2212:	7b 81       	ldd	r23, Y+3	; 0x03
    2214:	8c 81       	ldd	r24, Y+4	; 0x04
    2216:	9d 81       	ldd	r25, Y+5	; 0x05
    2218:	ae 81       	ldd	r26, Y+6	; 0x06
    221a:	bf 81       	ldd	r27, Y+7	; 0x07
    221c:	84 17       	cp	r24, r20
    221e:	95 07       	cpc	r25, r21
    2220:	a6 07       	cpc	r26, r22
    2222:	b7 07       	cpc	r27, r23
    2224:	30 f4       	brcc	.+12     	; 0x2232 <FAT_fsync+0x68>
    2226:	6b e0       	ldi	r22, 0x0B	; 11
    2228:	ce 01       	movw	r24, r28
    222a:	0e 94 32 09 	call	0x1264	; 0x1264 <_FAT_updateFileInfo>
    222e:	81 11       	cpse	r24, r1
    2230:	09 c0       	rjmp	.+18     	; 0x2244 <FAT_fsync+0x7a>
    2232:	81 e0       	ldi	r24, 0x01	; 1
    2234:	8d a3       	std	Y+37, r24	; 0x25
    2236:	80 e0       	ldi	r24, 0x00	; 0
    2238:	05 c0       	rjmp	.+10     	; 0x2244 <FAT_fsync+0x7a>
    223a:	87 e0       	ldi	r24, 0x07	; 7
    223c:	03 c0       	rjmp	.+6      	; 0x2244 <FAT_fsync+0x7a>
    223e:	87 e0       	ldi	r24, 0x07	; 7
    2240:	01 c0       	rjmp	.+2      	; 0x2244 <FAT_fsync+0x7a>
    2242:	8c e0       	ldi	r24, 0x0C	; 12
    2244:	df 91       	pop	r29
    2246:	cf 91       	pop	r28
    2248:	08 95       	ret

0000224a <FAT_fwrite>:
    224a:	4f 92       	push	r4
    224c:	5f 92       	push	r5
    224e:	6f 92       	push	r6
    2250:	7f 92       	push	r7
    2252:	8f 92       	push	r8
    2254:	9f 92       	push	r9
    2256:	af 92       	push	r10
    2258:	bf 92       	push	r11
    225a:	cf 92       	push	r12
    225c:	df 92       	push	r13
    225e:	ef 92       	push	r14
    2260:	ff 92       	push	r15
    2262:	0f 93       	push	r16
    2264:	1f 93       	push	r17
    2266:	cf 93       	push	r28
    2268:	df 93       	push	r29
    226a:	00 d0       	rcall	.+0      	; 0x226c <FAT_fwrite+0x22>
    226c:	00 d0       	rcall	.+0      	; 0x226e <FAT_fwrite+0x24>
    226e:	cd b7       	in	r28, 0x3d	; 61
    2270:	de b7       	in	r29, 0x3e	; 62
    2272:	8c 01       	movw	r16, r24
    2274:	7b 01       	movw	r14, r22
    2276:	5a 01       	movw	r10, r20
    2278:	49 01       	movw	r8, r18
    227a:	19 82       	std	Y+1, r1	; 0x01
    227c:	1a 82       	std	Y+2, r1	; 0x02
    227e:	1b 82       	std	Y+3, r1	; 0x03
    2280:	1c 82       	std	Y+4, r1	; 0x04
    2282:	f9 01       	movw	r30, r18
    2284:	11 82       	std	Z+1, r1	; 0x01
    2286:	10 82       	st	Z, r1
    2288:	fc 01       	movw	r30, r24
    228a:	84 a1       	ldd	r24, Z+36	; 0x24
    228c:	88 23       	and	r24, r24
    228e:	09 f4       	brne	.+2      	; 0x2292 <FAT_fwrite+0x48>
    2290:	0c c1       	rjmp	.+536    	; 0x24aa <FAT_fwrite+0x260>
    2292:	80 85       	ldd	r24, Z+8	; 0x08
    2294:	91 85       	ldd	r25, Z+9	; 0x09
    2296:	a2 85       	ldd	r26, Z+10	; 0x0a
    2298:	b3 85       	ldd	r27, Z+11	; 0x0b
    229a:	89 2b       	or	r24, r25
    229c:	8a 2b       	or	r24, r26
    229e:	8b 2b       	or	r24, r27
    22a0:	89 f5       	brne	.+98     	; 0x2304 <FAT_fwrite+0xba>
    22a2:	40 91 31 03 	lds	r20, 0x0331	; 0x800331 <fat_obj+0x8>
    22a6:	50 91 32 03 	lds	r21, 0x0332	; 0x800332 <fat_obj+0x9>
    22aa:	60 91 33 03 	lds	r22, 0x0333	; 0x800333 <fat_obj+0xa>
    22ae:	70 91 34 03 	lds	r23, 0x0334	; 0x800334 <fat_obj+0xb>
    22b2:	ce 01       	movw	r24, r28
    22b4:	01 96       	adiw	r24, 0x01	; 1
    22b6:	0e 94 11 07 	call	0xe22	; 0xe22 <_FAT_allocateCluster>
    22ba:	81 11       	cpse	r24, r1
    22bc:	fb c0       	rjmp	.+502    	; 0x24b4 <FAT_fwrite+0x26a>
    22be:	49 80       	ldd	r4, Y+1	; 0x01
    22c0:	5a 80       	ldd	r5, Y+2	; 0x02
    22c2:	6b 80       	ldd	r6, Y+3	; 0x03
    22c4:	7c 80       	ldd	r7, Y+4	; 0x04
    22c6:	f8 01       	movw	r30, r16
    22c8:	40 86       	std	Z+8, r4	; 0x08
    22ca:	51 86       	std	Z+9, r5	; 0x09
    22cc:	62 86       	std	Z+10, r6	; 0x0a
    22ce:	73 86       	std	Z+11, r7	; 0x0b
    22d0:	44 86       	std	Z+12, r4	; 0x0c
    22d2:	55 86       	std	Z+13, r5	; 0x0d
    22d4:	66 86       	std	Z+14, r6	; 0x0e
    22d6:	77 86       	std	Z+15, r7	; 0x0f
    22d8:	c3 01       	movw	r24, r6
    22da:	b2 01       	movw	r22, r4
    22dc:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_FAT_clusterToSector>
    22e0:	f8 01       	movw	r30, r16
    22e2:	60 8f       	std	Z+24, r22	; 0x18
    22e4:	71 8f       	std	Z+25, r23	; 0x19
    22e6:	82 8f       	std	Z+26, r24	; 0x1a
    22e8:	93 8f       	std	Z+27, r25	; 0x1b
    22ea:	15 8e       	std	Z+29, r1	; 0x1d
    22ec:	14 8e       	std	Z+28, r1	; 0x1c
    22ee:	41 e0       	ldi	r20, 0x01	; 1
    22f0:	c3 01       	movw	r24, r6
    22f2:	b2 01       	movw	r22, r4
    22f4:	0e 94 87 04 	call	0x90e	; 0x90e <_FAT_clearCluster>
    22f8:	6c e0       	ldi	r22, 0x0C	; 12
    22fa:	c8 01       	movw	r24, r16
    22fc:	0e 94 32 09 	call	0x1264	; 0x1264 <_FAT_updateFileInfo>
    2300:	81 11       	cpse	r24, r1
    2302:	d8 c0       	rjmp	.+432    	; 0x24b4 <FAT_fwrite+0x26a>
    2304:	f8 01       	movw	r30, r16
    2306:	85 a1       	ldd	r24, Z+37	; 0x25
    2308:	88 23       	and	r24, r24
    230a:	99 f0       	breq	.+38     	; 0x2332 <FAT_fwrite+0xe8>
    230c:	15 a2       	std	Z+37, r1	; 0x25
    230e:	80 8d       	ldd	r24, Z+24	; 0x18
    2310:	91 8d       	ldd	r25, Z+25	; 0x19
    2312:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2314:	b3 8d       	ldd	r27, Z+27	; 0x1b
    2316:	24 8d       	ldd	r18, Z+28	; 0x1c
    2318:	35 8d       	ldd	r19, Z+29	; 0x1d
    231a:	bc 01       	movw	r22, r24
    231c:	cd 01       	movw	r24, r26
    231e:	62 0f       	add	r22, r18
    2320:	73 1f       	adc	r23, r19
    2322:	81 1d       	adc	r24, r1
    2324:	91 1d       	adc	r25, r1
    2326:	4b ed       	ldi	r20, 0xDB	; 219
    2328:	54 e0       	ldi	r21, 0x04	; 4
    232a:	0e 94 c3 04 	call	0x986	; 0x986 <sd_read_single_block>
    232e:	81 11       	cpse	r24, r1
    2330:	be c0       	rjmp	.+380    	; 0x24ae <FAT_fwrite+0x264>
    2332:	f8 01       	movw	r30, r16
    2334:	86 a1       	ldd	r24, Z+38	; 0x26
    2336:	88 23       	and	r24, r24
    2338:	d9 f0       	breq	.+54     	; 0x2370 <FAT_fwrite+0x126>
    233a:	44 85       	ldd	r20, Z+12	; 0x0c
    233c:	55 85       	ldd	r21, Z+13	; 0x0d
    233e:	66 85       	ldd	r22, Z+14	; 0x0e
    2340:	77 85       	ldd	r23, Z+15	; 0x0f
    2342:	ce 01       	movw	r24, r28
    2344:	01 96       	adiw	r24, 0x01	; 1
    2346:	0e 94 11 07 	call	0xe22	; 0xe22 <_FAT_allocateCluster>
    234a:	81 11       	cpse	r24, r1
    234c:	b3 c0       	rjmp	.+358    	; 0x24b4 <FAT_fwrite+0x26a>
    234e:	f8 01       	movw	r30, r16
    2350:	16 a2       	std	Z+38, r1	; 0x26
    2352:	69 81       	ldd	r22, Y+1	; 0x01
    2354:	7a 81       	ldd	r23, Y+2	; 0x02
    2356:	8b 81       	ldd	r24, Y+3	; 0x03
    2358:	9c 81       	ldd	r25, Y+4	; 0x04
    235a:	64 87       	std	Z+12, r22	; 0x0c
    235c:	75 87       	std	Z+13, r23	; 0x0d
    235e:	86 87       	std	Z+14, r24	; 0x0e
    2360:	97 87       	std	Z+15, r25	; 0x0f
    2362:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_FAT_clusterToSector>
    2366:	f8 01       	movw	r30, r16
    2368:	60 8f       	std	Z+24, r22	; 0x18
    236a:	71 8f       	std	Z+25, r23	; 0x19
    236c:	82 8f       	std	Z+26, r24	; 0x1a
    236e:	93 8f       	std	Z+27, r25	; 0x1b
    2370:	c1 2c       	mov	r12, r1
    2372:	d1 2c       	mov	r13, r1
    2374:	91 c0       	rjmp	.+290    	; 0x2498 <FAT_fwrite+0x24e>
    2376:	f8 01       	movw	r30, r16
    2378:	86 8d       	ldd	r24, Z+30	; 0x1e
    237a:	97 8d       	ldd	r25, Z+31	; 0x1f
    237c:	81 15       	cp	r24, r1
    237e:	92 40       	sbci	r25, 0x02	; 2
    2380:	08 f4       	brcc	.+2      	; 0x2384 <FAT_fwrite+0x13a>
    2382:	6a c0       	rjmp	.+212    	; 0x2458 <FAT_fwrite+0x20e>
    2384:	f8 01       	movw	r30, r16
    2386:	17 8e       	std	Z+31, r1	; 0x1f
    2388:	16 8e       	std	Z+30, r1	; 0x1e
    238a:	13 a2       	std	Z+35, r1	; 0x23
    238c:	c8 01       	movw	r24, r16
    238e:	0e 94 e5 10 	call	0x21ca	; 0x21ca <FAT_fsync>
    2392:	81 11       	cpse	r24, r1
    2394:	8f c0       	rjmp	.+286    	; 0x24b4 <FAT_fwrite+0x26a>
    2396:	f8 01       	movw	r30, r16
    2398:	84 8d       	ldd	r24, Z+28	; 0x1c
    239a:	95 8d       	ldd	r25, Z+29	; 0x1d
    239c:	01 96       	adiw	r24, 0x01	; 1
    239e:	95 8f       	std	Z+29, r25	; 0x1d
    23a0:	84 8f       	std	Z+28, r24	; 0x1c
    23a2:	15 a2       	std	Z+37, r1	; 0x25
    23a4:	21 e0       	ldi	r18, 0x01	; 1
    23a6:	23 a3       	std	Z+35, r18	; 0x23
    23a8:	20 91 51 03 	lds	r18, 0x0351	; 0x800351 <fat_obj+0x28>
    23ac:	30 e0       	ldi	r19, 0x00	; 0
    23ae:	82 17       	cp	r24, r18
    23b0:	93 07       	cpc	r25, r19
    23b2:	50 f1       	brcs	.+84     	; 0x2408 <FAT_fwrite+0x1be>
    23b4:	84 85       	ldd	r24, Z+12	; 0x0c
    23b6:	95 85       	ldd	r25, Z+13	; 0x0d
    23b8:	a6 85       	ldd	r26, Z+14	; 0x0e
    23ba:	b7 85       	ldd	r27, Z+15	; 0x0f
    23bc:	89 83       	std	Y+1, r24	; 0x01
    23be:	9a 83       	std	Y+2, r25	; 0x02
    23c0:	ab 83       	std	Y+3, r26	; 0x03
    23c2:	bc 83       	std	Y+4, r27	; 0x04
    23c4:	c8 01       	movw	r24, r16
    23c6:	0e 94 61 07 	call	0xec2	; 0xec2 <_FAT_nextFileCluster>
    23ca:	f8 01       	movw	r30, r16
    23cc:	86 a1       	ldd	r24, Z+38	; 0x26
    23ce:	88 23       	and	r24, r24
    23d0:	d9 f0       	breq	.+54     	; 0x2408 <FAT_fwrite+0x1be>
    23d2:	49 81       	ldd	r20, Y+1	; 0x01
    23d4:	5a 81       	ldd	r21, Y+2	; 0x02
    23d6:	6b 81       	ldd	r22, Y+3	; 0x03
    23d8:	7c 81       	ldd	r23, Y+4	; 0x04
    23da:	ce 01       	movw	r24, r28
    23dc:	01 96       	adiw	r24, 0x01	; 1
    23de:	0e 94 11 07 	call	0xe22	; 0xe22 <_FAT_allocateCluster>
    23e2:	81 11       	cpse	r24, r1
    23e4:	67 c0       	rjmp	.+206    	; 0x24b4 <FAT_fwrite+0x26a>
    23e6:	f8 01       	movw	r30, r16
    23e8:	16 a2       	std	Z+38, r1	; 0x26
    23ea:	69 81       	ldd	r22, Y+1	; 0x01
    23ec:	7a 81       	ldd	r23, Y+2	; 0x02
    23ee:	8b 81       	ldd	r24, Y+3	; 0x03
    23f0:	9c 81       	ldd	r25, Y+4	; 0x04
    23f2:	64 87       	std	Z+12, r22	; 0x0c
    23f4:	75 87       	std	Z+13, r23	; 0x0d
    23f6:	86 87       	std	Z+14, r24	; 0x0e
    23f8:	97 87       	std	Z+15, r25	; 0x0f
    23fa:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_FAT_clusterToSector>
    23fe:	f8 01       	movw	r30, r16
    2400:	60 8f       	std	Z+24, r22	; 0x18
    2402:	71 8f       	std	Z+25, r23	; 0x19
    2404:	82 8f       	std	Z+26, r24	; 0x1a
    2406:	93 8f       	std	Z+27, r25	; 0x1b
    2408:	f8 01       	movw	r30, r16
    240a:	40 81       	ld	r20, Z
    240c:	51 81       	ldd	r21, Z+1	; 0x01
    240e:	62 81       	ldd	r22, Z+2	; 0x02
    2410:	73 81       	ldd	r23, Z+3	; 0x03
    2412:	84 81       	ldd	r24, Z+4	; 0x04
    2414:	95 81       	ldd	r25, Z+5	; 0x05
    2416:	a6 81       	ldd	r26, Z+6	; 0x06
    2418:	b7 81       	ldd	r27, Z+7	; 0x07
    241a:	48 17       	cp	r20, r24
    241c:	59 07       	cpc	r21, r25
    241e:	6a 07       	cpc	r22, r26
    2420:	7b 07       	cpc	r23, r27
    2422:	98 f4       	brcc	.+38     	; 0x244a <FAT_fwrite+0x200>
    2424:	80 8d       	ldd	r24, Z+24	; 0x18
    2426:	91 8d       	ldd	r25, Z+25	; 0x19
    2428:	a2 8d       	ldd	r26, Z+26	; 0x1a
    242a:	b3 8d       	ldd	r27, Z+27	; 0x1b
    242c:	24 8d       	ldd	r18, Z+28	; 0x1c
    242e:	35 8d       	ldd	r19, Z+29	; 0x1d
    2430:	bc 01       	movw	r22, r24
    2432:	cd 01       	movw	r24, r26
    2434:	62 0f       	add	r22, r18
    2436:	73 1f       	adc	r23, r19
    2438:	81 1d       	adc	r24, r1
    243a:	91 1d       	adc	r25, r1
    243c:	4b ed       	ldi	r20, 0xDB	; 219
    243e:	54 e0       	ldi	r21, 0x04	; 4
    2440:	0e 94 c3 04 	call	0x986	; 0x986 <sd_read_single_block>
    2444:	88 23       	and	r24, r24
    2446:	41 f0       	breq	.+16     	; 0x2458 <FAT_fwrite+0x20e>
    2448:	34 c0       	rjmp	.+104    	; 0x24b2 <FAT_fwrite+0x268>
    244a:	40 e0       	ldi	r20, 0x00	; 0
    244c:	60 e0       	ldi	r22, 0x00	; 0
    244e:	72 e0       	ldi	r23, 0x02	; 2
    2450:	80 e0       	ldi	r24, 0x00	; 0
    2452:	90 e0       	ldi	r25, 0x00	; 0
    2454:	0e 94 af 01 	call	0x35e	; 0x35e <_FAT_fillBufferArray>
    2458:	f8 01       	movw	r30, r16
    245a:	86 8d       	ldd	r24, Z+30	; 0x1e
    245c:	97 8d       	ldd	r25, Z+31	; 0x1f
    245e:	9c 01       	movw	r18, r24
    2460:	2f 5f       	subi	r18, 0xFF	; 255
    2462:	3f 4f       	sbci	r19, 0xFF	; 255
    2464:	37 8f       	std	Z+31, r19	; 0x1f
    2466:	26 8f       	std	Z+30, r18	; 0x1e
    2468:	f7 01       	movw	r30, r14
    246a:	20 81       	ld	r18, Z
    246c:	fc 01       	movw	r30, r24
    246e:	e5 52       	subi	r30, 0x25	; 37
    2470:	fb 4f       	sbci	r31, 0xFB	; 251
    2472:	20 83       	st	Z, r18
    2474:	f8 01       	movw	r30, r16
    2476:	80 81       	ld	r24, Z
    2478:	91 81       	ldd	r25, Z+1	; 0x01
    247a:	a2 81       	ldd	r26, Z+2	; 0x02
    247c:	b3 81       	ldd	r27, Z+3	; 0x03
    247e:	01 96       	adiw	r24, 0x01	; 1
    2480:	a1 1d       	adc	r26, r1
    2482:	b1 1d       	adc	r27, r1
    2484:	80 83       	st	Z, r24
    2486:	91 83       	std	Z+1, r25	; 0x01
    2488:	a2 83       	std	Z+2, r26	; 0x02
    248a:	b3 83       	std	Z+3, r27	; 0x03
    248c:	ff ef       	ldi	r31, 0xFF	; 255
    248e:	cf 1a       	sub	r12, r31
    2490:	df 0a       	sbc	r13, r31
    2492:	c7 01       	movw	r24, r14
    2494:	01 96       	adiw	r24, 0x01	; 1
    2496:	7c 01       	movw	r14, r24
    2498:	ca 14       	cp	r12, r10
    249a:	db 04       	cpc	r13, r11
    249c:	08 f4       	brcc	.+2      	; 0x24a0 <FAT_fwrite+0x256>
    249e:	6b cf       	rjmp	.-298    	; 0x2376 <FAT_fwrite+0x12c>
    24a0:	f4 01       	movw	r30, r8
    24a2:	d1 82       	std	Z+1, r13	; 0x01
    24a4:	c0 82       	st	Z, r12
    24a6:	80 e0       	ldi	r24, 0x00	; 0
    24a8:	05 c0       	rjmp	.+10     	; 0x24b4 <FAT_fwrite+0x26a>
    24aa:	87 e0       	ldi	r24, 0x07	; 7
    24ac:	03 c0       	rjmp	.+6      	; 0x24b4 <FAT_fwrite+0x26a>
    24ae:	8c e0       	ldi	r24, 0x0C	; 12
    24b0:	01 c0       	rjmp	.+2      	; 0x24b4 <FAT_fwrite+0x26a>
    24b2:	8c e0       	ldi	r24, 0x0C	; 12
    24b4:	0f 90       	pop	r0
    24b6:	0f 90       	pop	r0
    24b8:	0f 90       	pop	r0
    24ba:	0f 90       	pop	r0
    24bc:	df 91       	pop	r29
    24be:	cf 91       	pop	r28
    24c0:	1f 91       	pop	r17
    24c2:	0f 91       	pop	r16
    24c4:	ff 90       	pop	r15
    24c6:	ef 90       	pop	r14
    24c8:	df 90       	pop	r13
    24ca:	cf 90       	pop	r12
    24cc:	bf 90       	pop	r11
    24ce:	af 90       	pop	r10
    24d0:	9f 90       	pop	r9
    24d2:	8f 90       	pop	r8
    24d4:	7f 90       	pop	r7
    24d6:	6f 90       	pop	r6
    24d8:	5f 90       	pop	r5
    24da:	4f 90       	pop	r4
    24dc:	08 95       	ret

000024de <FAT_fwriteString>:
    24de:	cf 93       	push	r28
    24e0:	df 93       	push	r29
    24e2:	00 d0       	rcall	.+0      	; 0x24e4 <FAT_fwriteString+0x6>
    24e4:	cd b7       	in	r28, 0x3d	; 61
    24e6:	de b7       	in	r29, 0x3e	; 62
    24e8:	fb 01       	movw	r30, r22
    24ea:	01 90       	ld	r0, Z+
    24ec:	00 20       	and	r0, r0
    24ee:	e9 f7       	brne	.-6      	; 0x24ea <FAT_fwriteString+0xc>
    24f0:	31 97       	sbiw	r30, 0x01	; 1
    24f2:	af 01       	movw	r20, r30
    24f4:	46 1b       	sub	r20, r22
    24f6:	57 0b       	sbc	r21, r23
    24f8:	9e 01       	movw	r18, r28
    24fa:	2f 5f       	subi	r18, 0xFF	; 255
    24fc:	3f 4f       	sbci	r19, 0xFF	; 255
    24fe:	0e 94 25 11 	call	0x224a	; 0x224a <FAT_fwrite>
    2502:	0f 90       	pop	r0
    2504:	0f 90       	pop	r0
    2506:	df 91       	pop	r29
    2508:	cf 91       	pop	r28
    250a:	08 95       	ret

0000250c <FAT_fwriteFloat>:
    250c:	8f 92       	push	r8
    250e:	9f 92       	push	r9
    2510:	af 92       	push	r10
    2512:	bf 92       	push	r11
    2514:	cf 92       	push	r12
    2516:	df 92       	push	r13
    2518:	ef 92       	push	r14
    251a:	0f 93       	push	r16
    251c:	1f 93       	push	r17
    251e:	cf 93       	push	r28
    2520:	df 93       	push	r29
    2522:	cd b7       	in	r28, 0x3d	; 61
    2524:	de b7       	in	r29, 0x3e	; 62
    2526:	6a 97       	sbiw	r28, 0x1a	; 26
    2528:	0f b6       	in	r0, 0x3f	; 63
    252a:	f8 94       	cli
    252c:	de bf       	out	0x3e, r29	; 62
    252e:	0f be       	out	0x3f, r0	; 63
    2530:	cd bf       	out	0x3d, r28	; 61
    2532:	6c 01       	movw	r12, r24
    2534:	4a 01       	movw	r8, r20
    2536:	5b 01       	movw	r10, r22
    2538:	e2 2e       	mov	r14, r18
    253a:	00 e0       	ldi	r16, 0x00	; 0
    253c:	9e 01       	movw	r18, r28
    253e:	22 5f       	subi	r18, 0xF2	; 242
    2540:	3f 4f       	sbci	r19, 0xFF	; 255
    2542:	ae 01       	movw	r20, r28
    2544:	4f 5f       	subi	r20, 0xFF	; 255
    2546:	5f 4f       	sbci	r21, 0xFF	; 255
    2548:	c5 01       	movw	r24, r10
    254a:	b4 01       	movw	r22, r8
    254c:	0e 94 0d 0a 	call	0x141a	; 0x141a <STRING_ftoa>
    2550:	20 e0       	ldi	r18, 0x00	; 0
    2552:	30 e0       	ldi	r19, 0x00	; 0
    2554:	a9 01       	movw	r20, r18
    2556:	c5 01       	movw	r24, r10
    2558:	b4 01       	movw	r22, r8
    255a:	0e 94 7c 15 	call	0x2af8	; 0x2af8 <__cmpsf2>
    255e:	88 23       	and	r24, r24
    2560:	2c f4       	brge	.+10     	; 0x256c <FAT_fwriteFloat+0x60>
    2562:	64 e0       	ldi	r22, 0x04	; 4
    2564:	71 e0       	ldi	r23, 0x01	; 1
    2566:	c6 01       	movw	r24, r12
    2568:	0e 94 6f 12 	call	0x24de	; 0x24de <FAT_fwriteString>
    256c:	be 01       	movw	r22, r28
    256e:	6f 5f       	subi	r22, 0xFF	; 255
    2570:	7f 4f       	sbci	r23, 0xFF	; 255
    2572:	c6 01       	movw	r24, r12
    2574:	0e 94 6f 12 	call	0x24de	; 0x24de <FAT_fwriteString>
    2578:	18 2f       	mov	r17, r24
    257a:	66 e0       	ldi	r22, 0x06	; 6
    257c:	71 e0       	ldi	r23, 0x01	; 1
    257e:	c6 01       	movw	r24, r12
    2580:	0e 94 6f 12 	call	0x24de	; 0x24de <FAT_fwriteString>
    2584:	18 2b       	or	r17, r24
    2586:	be 01       	movw	r22, r28
    2588:	62 5f       	subi	r22, 0xF2	; 242
    258a:	7f 4f       	sbci	r23, 0xFF	; 255
    258c:	c6 01       	movw	r24, r12
    258e:	0e 94 6f 12 	call	0x24de	; 0x24de <FAT_fwriteString>
    2592:	81 2b       	or	r24, r17
    2594:	11 f0       	breq	.+4      	; 0x259a <FAT_fwriteFloat+0x8e>
    2596:	8c e0       	ldi	r24, 0x0C	; 12
    2598:	01 c0       	rjmp	.+2      	; 0x259c <FAT_fwriteFloat+0x90>
    259a:	80 e0       	ldi	r24, 0x00	; 0
    259c:	6a 96       	adiw	r28, 0x1a	; 26
    259e:	0f b6       	in	r0, 0x3f	; 63
    25a0:	f8 94       	cli
    25a2:	de bf       	out	0x3e, r29	; 62
    25a4:	0f be       	out	0x3f, r0	; 63
    25a6:	cd bf       	out	0x3d, r28	; 61
    25a8:	df 91       	pop	r29
    25aa:	cf 91       	pop	r28
    25ac:	1f 91       	pop	r17
    25ae:	0f 91       	pop	r16
    25b0:	ef 90       	pop	r14
    25b2:	df 90       	pop	r13
    25b4:	cf 90       	pop	r12
    25b6:	bf 90       	pop	r11
    25b8:	af 90       	pop	r10
    25ba:	9f 90       	pop	r9
    25bc:	8f 90       	pop	r8
    25be:	08 95       	ret

000025c0 <FAT_fopen>:
    25c0:	ef 92       	push	r14
    25c2:	ff 92       	push	r15
    25c4:	0f 93       	push	r16
    25c6:	1f 93       	push	r17
    25c8:	cf 93       	push	r28
    25ca:	df 93       	push	r29
    25cc:	fb 01       	movw	r30, r22
    25ce:	14 a2       	std	Z+36, r1	; 0x24
    25d0:	fc 01       	movw	r30, r24
    25d2:	22 8d       	ldd	r18, Z+26	; 0x1a
    25d4:	22 23       	and	r18, r18
    25d6:	89 f1       	breq	.+98     	; 0x263a <FAT_fopen+0x7a>
    25d8:	7a 01       	movw	r14, r20
    25da:	8b 01       	movw	r16, r22
    25dc:	ec 01       	movw	r28, r24
    25de:	40 81       	ld	r20, Z
    25e0:	51 81       	ldd	r21, Z+1	; 0x01
    25e2:	62 81       	ldd	r22, Z+2	; 0x02
    25e4:	73 81       	ldd	r23, Z+3	; 0x03
    25e6:	0e 94 1b 02 	call	0x436	; 0x436 <_FAT_moveWindow>
    25ea:	4a e0       	ldi	r20, 0x0A	; 10
    25ec:	b7 01       	movw	r22, r14
    25ee:	ce 01       	movw	r24, r28
    25f0:	0e 94 08 08 	call	0x1010	; 0x1010 <_FAT_followPath>
    25f4:	81 11       	cpse	r24, r1
    25f6:	22 c0       	rjmp	.+68     	; 0x263c <FAT_fopen+0x7c>
    25f8:	4a 89       	ldd	r20, Y+18	; 0x12
    25fa:	5b 89       	ldd	r21, Y+19	; 0x13
    25fc:	b8 01       	movw	r22, r16
    25fe:	ce 01       	movw	r24, r28
    2600:	0e 94 c8 10 	call	0x2190	; 0x2190 <FAT_findByIndex>
    2604:	81 11       	cpse	r24, r1
    2606:	1a c0       	rjmp	.+52     	; 0x263c <FAT_fopen+0x7c>
    2608:	88 85       	ldd	r24, Y+8	; 0x08
    260a:	99 85       	ldd	r25, Y+9	; 0x09
    260c:	aa 85       	ldd	r26, Y+10	; 0x0a
    260e:	bb 85       	ldd	r27, Y+11	; 0x0b
    2610:	28 89       	ldd	r18, Y+16	; 0x10
    2612:	39 89       	ldd	r19, Y+17	; 0x11
    2614:	82 0f       	add	r24, r18
    2616:	93 1f       	adc	r25, r19
    2618:	a1 1d       	adc	r26, r1
    261a:	b1 1d       	adc	r27, r1
    261c:	f8 01       	movw	r30, r16
    261e:	80 8b       	std	Z+16, r24	; 0x10
    2620:	91 8b       	std	Z+17, r25	; 0x11
    2622:	a2 8b       	std	Z+18, r26	; 0x12
    2624:	b3 8b       	std	Z+19, r27	; 0x13
    2626:	88 8d       	ldd	r24, Y+24	; 0x18
    2628:	80 a3       	std	Z+32, r24	; 0x20
    262a:	81 e0       	ldi	r24, 0x01	; 1
    262c:	85 a3       	std	Z+37, r24	; 0x25
    262e:	83 a3       	std	Z+35, r24	; 0x23
    2630:	c8 01       	movw	r24, r16
    2632:	0e 94 4c 02 	call	0x498	; 0x498 <_FAT_freset>
    2636:	80 e0       	ldi	r24, 0x00	; 0
    2638:	01 c0       	rjmp	.+2      	; 0x263c <FAT_fopen+0x7c>
    263a:	87 e0       	ldi	r24, 0x07	; 7
    263c:	df 91       	pop	r29
    263e:	cf 91       	pop	r28
    2640:	1f 91       	pop	r17
    2642:	0f 91       	pop	r16
    2644:	ff 90       	pop	r15
    2646:	ef 90       	pop	r14
    2648:	08 95       	ret

0000264a <FAT_fseek>:

/*______________________________________________________________________________________________
	Move the file pointer x number of bytes. fptr must not be greater 
	than the file size in bytes.
_______________________________________________________________________________________________*/
void FAT_fseek(FILE_SD* fp, FSIZE_t fptr){	
    264a:	4f 92       	push	r4
    264c:	5f 92       	push	r5
    264e:	6f 92       	push	r6
    2650:	7f 92       	push	r7
    2652:	8f 92       	push	r8
    2654:	9f 92       	push	r9
    2656:	af 92       	push	r10
    2658:	bf 92       	push	r11
    265a:	cf 92       	push	r12
    265c:	df 92       	push	r13
    265e:	ef 92       	push	r14
    2660:	ff 92       	push	r15
    2662:	0f 93       	push	r16
    2664:	1f 93       	push	r17
    2666:	cf 93       	push	r28
    2668:	df 93       	push	r29
    266a:	cd b7       	in	r28, 0x3d	; 61
    266c:	de b7       	in	r29, 0x3e	; 62
    266e:	2a 97       	sbiw	r28, 0x0a	; 10
    2670:	0f b6       	in	r0, 0x3f	; 63
    2672:	f8 94       	cli
    2674:	de bf       	out	0x3e, r29	; 62
    2676:	0f be       	out	0x3f, r0	; 63
    2678:	cd bf       	out	0x3d, r28	; 61
    267a:	9a 87       	std	Y+10, r25	; 0x0a
    267c:	89 87       	std	Y+9, r24	; 0x09
    267e:	4a 01       	movw	r8, r20
    2680:	5b 01       	movw	r10, r22
	if(fptr > fp->file_size) return;
    2682:	fc 01       	movw	r30, r24
    2684:	84 81       	ldd	r24, Z+4	; 0x04
    2686:	95 81       	ldd	r25, Z+5	; 0x05
    2688:	a6 81       	ldd	r26, Z+6	; 0x06
    268a:	b7 81       	ldd	r27, Z+7	; 0x07
    268c:	84 17       	cp	r24, r20
    268e:	95 07       	cpc	r25, r21
    2690:	a6 07       	cpc	r26, r22
    2692:	b7 07       	cpc	r27, r23
    2694:	08 f4       	brcc	.+2      	; 0x2698 <FAT_fseek+0x4e>
    2696:	8d c0       	rjmp	.+282    	; 0x27b2 <FAT_fseek+0x168>
	
	// Calculate the number of sectors to skip
	SECTSIZE_t skip_sectors = fptr / fat->BPB_BytsPerSec;
    2698:	09 e2       	ldi	r16, 0x29	; 41
    269a:	13 e0       	ldi	r17, 0x03	; 3
    269c:	d8 01       	movw	r26, r16
    269e:	58 96       	adiw	r26, 0x18	; 24
    26a0:	ed 90       	ld	r14, X+
    26a2:	fc 90       	ld	r15, X
    26a4:	59 97       	sbiw	r26, 0x19	; 25
    26a6:	97 01       	movw	r18, r14
    26a8:	40 e0       	ldi	r20, 0x00	; 0
    26aa:	50 e0       	ldi	r21, 0x00	; 0
    26ac:	c5 01       	movw	r24, r10
    26ae:	b4 01       	movw	r22, r8
    26b0:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <__udivmodsi4>
    26b4:	2d 83       	std	Y+5, r18	; 0x05
    26b6:	3e 83       	std	Y+6, r19	; 0x06
    26b8:	4f 83       	std	Y+7, r20	; 0x07
    26ba:	58 87       	std	Y+8, r21	; 0x08
    26bc:	29 83       	std	Y+1, r18	; 0x01
    26be:	3a 83       	std	Y+2, r19	; 0x02
    26c0:	4b 83       	std	Y+3, r20	; 0x03
    26c2:	5c 83       	std	Y+4, r21	; 0x04
	
	// Offset byte inside the buffer. Must not use the recalculated skip_clusters.
	fp->buffer_idx = fptr - (skip_sectors * fat->BPB_BytsPerSec);
    26c4:	ed 81       	ldd	r30, Y+5	; 0x05
    26c6:	fe 81       	ldd	r31, Y+6	; 0x06
    26c8:	ee 9e       	mul	r14, r30
    26ca:	c0 01       	movw	r24, r0
    26cc:	ef 9e       	mul	r14, r31
    26ce:	90 0d       	add	r25, r0
    26d0:	fe 9e       	mul	r15, r30
    26d2:	90 0d       	add	r25, r0
    26d4:	11 24       	eor	r1, r1
    26d6:	94 01       	movw	r18, r8
    26d8:	28 1b       	sub	r18, r24
    26da:	39 0b       	sbc	r19, r25
    26dc:	a9 85       	ldd	r26, Y+9	; 0x09
    26de:	ba 85       	ldd	r27, Y+10	; 0x0a
    26e0:	5f 96       	adiw	r26, 0x1f	; 31
    26e2:	3c 93       	st	X, r19
    26e4:	2e 93       	st	-X, r18
    26e6:	5e 97       	sbiw	r26, 0x1e	; 30
	
	// Calculate how many clusters to skip
	CLSTSIZE_t skip_clusters = skip_sectors / fat->BPB_SecPerClus;
    26e8:	f8 01       	movw	r30, r16
    26ea:	40 a4       	ldd	r4, Z+40	; 0x28
    26ec:	51 2c       	mov	r5, r1
    26ee:	61 2c       	mov	r6, r1
    26f0:	71 2c       	mov	r7, r1
    26f2:	69 81       	ldd	r22, Y+1	; 0x01
    26f4:	7a 81       	ldd	r23, Y+2	; 0x02
    26f6:	8b 81       	ldd	r24, Y+3	; 0x03
    26f8:	9c 81       	ldd	r25, Y+4	; 0x04
    26fa:	a3 01       	movw	r20, r6
    26fc:	92 01       	movw	r18, r4
    26fe:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <__udivmodsi4>
    2702:	62 2f       	mov	r22, r18
    2704:	73 2f       	mov	r23, r19
    2706:	84 2f       	mov	r24, r20
    2708:	95 2f       	mov	r25, r21
    270a:	c2 2e       	mov	r12, r18
    270c:	d3 2e       	mov	r13, r19
    270e:	e4 2e       	mov	r14, r20
    2710:	f5 2e       	mov	r15, r21
	
	// Recalculate sectors to skip based on the number of clusters
	if(skip_clusters){
    2712:	c1 14       	cp	r12, r1
    2714:	d1 04       	cpc	r13, r1
    2716:	e1 04       	cpc	r14, r1
    2718:	f1 04       	cpc	r15, r1
    271a:	81 f0       	breq	.+32     	; 0x273c <FAT_fseek+0xf2>
		skip_sectors = skip_sectors - (fat->BPB_SecPerClus * skip_clusters);
    271c:	a3 01       	movw	r20, r6
    271e:	92 01       	movw	r18, r4
    2720:	0e 94 4d 17 	call	0x2e9a	; 0x2e9a <__mulsi3>
    2724:	2d 81       	ldd	r18, Y+5	; 0x05
    2726:	3e 81       	ldd	r19, Y+6	; 0x06
    2728:	4f 81       	ldd	r20, Y+7	; 0x07
    272a:	58 85       	ldd	r21, Y+8	; 0x08
    272c:	26 1b       	sub	r18, r22
    272e:	37 0b       	sbc	r19, r23
    2730:	48 0b       	sbc	r20, r24
    2732:	59 0b       	sbc	r21, r25
    2734:	29 83       	std	Y+1, r18	; 0x01
    2736:	3a 83       	std	Y+2, r19	; 0x02
    2738:	4b 83       	std	Y+3, r20	; 0x03
    273a:	5c 83       	std	Y+4, r21	; 0x04
    273c:	24 01       	movw	r4, r8
    273e:	35 01       	movw	r6, r10
    2740:	49 85       	ldd	r20, Y+9	; 0x09
    2742:	5a 85       	ldd	r21, Y+10	; 0x0a
	}
	
	// Since we don't keep track of how many clusters have been red
	// count the clusters from beginning of the file
	fp->file_active_cluster = fp->file_start_cluster;
    2744:	fa 01       	movw	r30, r20
    2746:	80 85       	ldd	r24, Z+8	; 0x08
    2748:	91 85       	ldd	r25, Z+9	; 0x09
    274a:	a2 85       	ldd	r26, Z+10	; 0x0a
    274c:	b3 85       	ldd	r27, Z+11	; 0x0b
    274e:	84 87       	std	Z+12, r24	; 0x0c
    2750:	95 87       	std	Z+13, r25	; 0x0d
    2752:	a6 87       	std	Z+14, r26	; 0x0e
    2754:	b7 87       	std	Z+15, r27	; 0x0f
	
	CLSTSIZE_t file_cluster_available;
	
	// Skip the necessary number of clusters
	while(skip_clusters){
    2756:	1a c0       	rjmp	.+52     	; 0x278c <FAT_fseek+0x142>
		file_cluster_available = fp->file_active_cluster;
    2758:	a9 85       	ldd	r26, Y+9	; 0x09
    275a:	ba 85       	ldd	r27, Y+10	; 0x0a
    275c:	1c 96       	adiw	r26, 0x0c	; 12
    275e:	8d 90       	ld	r8, X+
    2760:	9d 90       	ld	r9, X+
    2762:	ad 90       	ld	r10, X+
    2764:	bc 90       	ld	r11, X
    2766:	1f 97       	sbiw	r26, 0x0f	; 15
		_FAT_nextFileCluster(fp);
    2768:	cd 01       	movw	r24, r26
    276a:	0e 94 61 07 	call	0xec2	; 0xec2 <_FAT_nextFileCluster>
		
		if(fp->eof){
    276e:	e9 85       	ldd	r30, Y+9	; 0x09
    2770:	fa 85       	ldd	r31, Y+10	; 0x0a
    2772:	86 a1       	ldd	r24, Z+38	; 0x26
    2774:	88 23       	and	r24, r24
    2776:	29 f0       	breq	.+10     	; 0x2782 <FAT_fseek+0x138>
			// Restore active cluster so the write function can allocate a new cluster
			fp->file_active_cluster = file_cluster_available;
    2778:	84 86       	std	Z+12, r8	; 0x0c
    277a:	95 86       	std	Z+13, r9	; 0x0d
    277c:	a6 86       	std	Z+14, r10	; 0x0e
    277e:	b7 86       	std	Z+15, r11	; 0x0f
			break;
    2780:	0a c0       	rjmp	.+20     	; 0x2796 <FAT_fseek+0x14c>
		}
		
		skip_clusters--;
    2782:	b1 e0       	ldi	r27, 0x01	; 1
    2784:	cb 1a       	sub	r12, r27
    2786:	d1 08       	sbc	r13, r1
    2788:	e1 08       	sbc	r14, r1
    278a:	f1 08       	sbc	r15, r1
	fp->file_active_cluster = fp->file_start_cluster;
	
	CLSTSIZE_t file_cluster_available;
	
	// Skip the necessary number of clusters
	while(skip_clusters){
    278c:	c1 14       	cp	r12, r1
    278e:	d1 04       	cpc	r13, r1
    2790:	e1 04       	cpc	r14, r1
    2792:	f1 04       	cpc	r15, r1
    2794:	09 f7       	brne	.-62     	; 0x2758 <FAT_fseek+0x10e>
		}
		
		skip_clusters--;
	}
	
	fp->w_sec_changed = true; // flag for write function to load the sector
    2796:	81 e0       	ldi	r24, 0x01	; 1
    2798:	e9 85       	ldd	r30, Y+9	; 0x09
    279a:	fa 85       	ldd	r31, Y+10	; 0x0a
    279c:	85 a3       	std	Z+37, r24	; 0x25
	fp->file_active_sector = skip_sectors; // set sector
    279e:	29 81       	ldd	r18, Y+1	; 0x01
    27a0:	3a 81       	ldd	r19, Y+2	; 0x02
    27a2:	35 8f       	std	Z+29, r19	; 0x1d
    27a4:	24 8f       	std	Z+28, r18	; 0x1c
	
	// Set file pointer
	fp->fptr = fptr;
    27a6:	40 82       	st	Z, r4
    27a8:	51 82       	std	Z+1, r5	; 0x01
    27aa:	62 82       	std	Z+2, r6	; 0x02
    27ac:	73 82       	std	Z+3, r7	; 0x03
	
	fp->eof = 0;
    27ae:	16 a2       	std	Z+38, r1	; 0x26
	fp->file_err = 0;
    27b0:	11 a2       	std	Z+33, r1	; 0x21
}
    27b2:	2a 96       	adiw	r28, 0x0a	; 10
    27b4:	0f b6       	in	r0, 0x3f	; 63
    27b6:	f8 94       	cli
    27b8:	de bf       	out	0x3e, r29	; 62
    27ba:	0f be       	out	0x3f, r0	; 63
    27bc:	cd bf       	out	0x3d, r28	; 61
    27be:	df 91       	pop	r29
    27c0:	cf 91       	pop	r28
    27c2:	1f 91       	pop	r17
    27c4:	0f 91       	pop	r16
    27c6:	ff 90       	pop	r15
    27c8:	ef 90       	pop	r14
    27ca:	df 90       	pop	r13
    27cc:	cf 90       	pop	r12
    27ce:	bf 90       	pop	r11
    27d0:	af 90       	pop	r10
    27d2:	9f 90       	pop	r9
    27d4:	8f 90       	pop	r8
    27d6:	7f 90       	pop	r7
    27d8:	6f 90       	pop	r6
    27da:	5f 90       	pop	r5
    27dc:	4f 90       	pop	r4
    27de:	08 95       	ret

000027e0 <FAT_fseekEnd>:

/*______________________________________________________________________________________________
	Move the file pointer to end of file. Wrapper of fseek().
_______________________________________________________________________________________________*/
void FAT_fseekEnd(FILE_SD* fp){
	FAT_fseek(fp, fp->file_size);
    27e0:	fc 01       	movw	r30, r24
    27e2:	44 81       	ldd	r20, Z+4	; 0x04
    27e4:	55 81       	ldd	r21, Z+5	; 0x05
    27e6:	66 81       	ldd	r22, Z+6	; 0x06
    27e8:	77 81       	ldd	r23, Z+7	; 0x07
    27ea:	0e 94 25 13 	call	0x264a	; 0x264a <FAT_fseek>
    27ee:	08 95       	ret

000027f0 <main>:

int main(void)
{
	uint8_t test = 0;
	
	DDRC = 0x01;
    27f0:	81 e0       	ldi	r24, 0x01	; 1
    27f2:	87 b9       	out	0x07, r24	; 7
	DDRD = 0x02;
    27f4:	82 e0       	ldi	r24, 0x02	; 2
    27f6:	8a b9       	out	0x0a, r24	; 10
	
	sei();
    27f8:	78 94       	sei
	UART_Init();
    27fa:	0e 94 53 00 	call	0xa6	; 0xa6 <UART_Init>
FILE_SD file;
uint8_t return_code = 0;

int main(void)
{
	uint8_t test = 0;
    27fe:	80 e0       	ldi	r24, 0x00	; 0
    2800:	01 c0       	rjmp	.+2      	; 0x2804 <main+0x14>
			}
		}
		
		if (PINC & (1 << PINC0))
		{
			test = 1;
    2802:	81 e0       	ldi	r24, 0x01	; 1
	UART_Init();
	
	
	while (1)
	{
		if (test == 1)
    2804:	81 30       	cpi	r24, 0x01	; 1
    2806:	09 f0       	breq	.+2      	; 0x280a <main+0x1a>
    2808:	07 c1       	rjmp	.+526    	; 0x2a18 <main+0x228>
		{
			test = 0;
			return_code = sd_init();
    280a:	0e 94 5d 03 	call	0x6ba	; 0x6ba <sd_init>
    280e:	80 93 28 03 	sts	0x0328, r24	; 0x800328 <return_code>
			
			if (return_code == SD_OK)
    2812:	81 11       	cpse	r24, r1
    2814:	05 c0       	rjmp	.+10     	; 0x2820 <main+0x30>
			{
				Uart_PutString("SD_OK;");
    2816:	88 e0       	ldi	r24, 0x08	; 8
    2818:	91 e0       	ldi	r25, 0x01	; 1
    281a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
    281e:	32 c0       	rjmp	.+100    	; 0x2884 <main+0x94>
			}
			else if (return_code == SD_IDLE_STATE_TIMEOUT)
    2820:	81 30       	cpi	r24, 0x01	; 1
    2822:	29 f4       	brne	.+10     	; 0x282e <main+0x3e>
			{
				Uart_PutString("SD_IDLE_STATE_TIMEOUT;");
    2824:	8f e0       	ldi	r24, 0x0F	; 15
    2826:	91 e0       	ldi	r25, 0x01	; 1
    2828:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
    282c:	2b c0       	rjmp	.+86     	; 0x2884 <main+0x94>
			}
			else if (return_code == SD_GENERAL_ERROR)
    282e:	82 30       	cpi	r24, 0x02	; 2
    2830:	49 f4       	brne	.+18     	; 0x2844 <main+0x54>
			{
				Uart_PutString("SD_GENERAL_ERROR;");
    2832:	86 e2       	ldi	r24, 0x26	; 38
    2834:	91 e0       	ldi	r25, 0x01	; 1
    2836:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
				Uart_PutString(msgUart01);
    283a:	8f e9       	ldi	r24, 0x9F	; 159
    283c:	94 e0       	ldi	r25, 0x04	; 4
    283e:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
    2842:	20 c0       	rjmp	.+64     	; 0x2884 <main+0x94>
			}
			else if (return_code == SD_CHECK_PATTERN_MISMATCH)
    2844:	83 30       	cpi	r24, 0x03	; 3
    2846:	29 f4       	brne	.+10     	; 0x2852 <main+0x62>
			{
				Uart_PutString("SD_CHECK_PATTERN_MISMATCH;");
    2848:	88 e3       	ldi	r24, 0x38	; 56
    284a:	91 e0       	ldi	r25, 0x01	; 1
    284c:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
    2850:	19 c0       	rjmp	.+50     	; 0x2884 <main+0x94>
			}
			else if (return_code == SD_NONCOMPATIBLE_VOLTAGE_RANGE)
    2852:	84 30       	cpi	r24, 0x04	; 4
    2854:	29 f4       	brne	.+10     	; 0x2860 <main+0x70>
			{
				Uart_PutString("SD_NONCOMPATIBLE_VOLTAGE_RANGE;");
    2856:	83 e5       	ldi	r24, 0x53	; 83
    2858:	91 e0       	ldi	r25, 0x01	; 1
    285a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
    285e:	12 c0       	rjmp	.+36     	; 0x2884 <main+0x94>
			}
			else if (return_code == SD_POWER_UP_BIT_NOT_SET)
    2860:	85 30       	cpi	r24, 0x05	; 5
    2862:	29 f4       	brne	.+10     	; 0x286e <main+0x7e>
			{
				Uart_PutString("SD_POWER_UP_BIT_NOT_SET;");
    2864:	83 e7       	ldi	r24, 0x73	; 115
    2866:	91 e0       	ldi	r25, 0x01	; 1
    2868:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
    286c:	0b c0       	rjmp	.+22     	; 0x2884 <main+0x94>
			}
			else if (return_code == SD_NOT_SD_CARD)
    286e:	86 30       	cpi	r24, 0x06	; 6
    2870:	29 f4       	brne	.+10     	; 0x287c <main+0x8c>
			{
				Uart_PutString("SD_NOT_SD_CARD;");
    2872:	8c e8       	ldi	r24, 0x8C	; 140
    2874:	91 e0       	ldi	r25, 0x01	; 1
    2876:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
    287a:	04 c0       	rjmp	.+8      	; 0x2884 <main+0x94>
			}
			else
			{
				Uart_PutString("rien SD;");
    287c:	8c e9       	ldi	r24, 0x9C	; 156
    287e:	91 e0       	ldi	r25, 0x01	; 1
    2880:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
			}
			
			return_code = FAT_mountVolume();
    2884:	0e 94 86 0a 	call	0x150c	; 0x150c <FAT_mountVolume>
    2888:	80 93 28 03 	sts	0x0328, r24	; 0x800328 <return_code>
			Uart_PutString("mount no;");
    288c:	85 ea       	ldi	r24, 0xA5	; 165
    288e:	91 e0       	ldi	r25, 0x01	; 1
    2890:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
			
			// If no error
			if(return_code == MR_OK)
    2894:	80 91 28 03 	lds	r24, 0x0328	; 0x800328 <return_code>
    2898:	81 11       	cpse	r24, r1
    289a:	81 c0       	rjmp	.+258    	; 0x299e <main+0x1ae>
			{
				Uart_PutString("MR_OK;");
    289c:	8f ea       	ldi	r24, 0xAF	; 175
    289e:	91 e0       	ldi	r25, 0x01	; 1
    28a0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
				Uart_PutString("mount ok;");
    28a4:	86 eb       	ldi	r24, 0xB6	; 182
    28a6:	91 e0       	ldi	r25, 0x01	; 1
    28a8:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
				// Make a directory
				FAT_makeDir("/Logging");
    28ac:	80 ec       	ldi	r24, 0xC0	; 192
    28ae:	91 e0       	ldi	r25, 0x01	; 1
    28b0:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <FAT_makeDir>
				
				// Open folder
				return_code = FAT_openDir(&dir, "/Logging");
    28b4:	60 ec       	ldi	r22, 0xC0	; 192
    28b6:	71 e0       	ldi	r23, 0x01	; 1
    28b8:	8f ea       	ldi	r24, 0xAF	; 175
    28ba:	94 e0       	ldi	r25, 0x04	; 4
    28bc:	0e 94 6e 0f 	call	0x1edc	; 0x1edc <FAT_openDir>
    28c0:	80 93 28 03 	sts	0x0328, r24	; 0x800328 <return_code>
				if(return_code == FR_OK){
    28c4:	81 11       	cpse	r24, r1
    28c6:	a1 c0       	rjmp	.+322    	; 0x2a0a <main+0x21a>
					// ... optionally print folder name using an LCD library: print(FAT_getFilename());
					Uart_PutString("open dir ok;");
    28c8:	89 ec       	ldi	r24, 0xC9	; 201
    28ca:	91 e0       	ldi	r25, 0x01	; 1
    28cc:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
					
					// Open a file for reading or writing
					return_code = FAT_fopen(&dir, &file, "log.txt");
    28d0:	42 ef       	ldi	r20, 0xF2	; 242
    28d2:	51 e0       	ldi	r21, 0x01	; 1
    28d4:	68 e5       	ldi	r22, 0x58	; 88
    28d6:	74 e0       	ldi	r23, 0x04	; 4
    28d8:	8f ea       	ldi	r24, 0xAF	; 175
    28da:	94 e0       	ldi	r25, 0x04	; 4
    28dc:	0e 94 e0 12 	call	0x25c0	; 0x25c0 <FAT_fopen>
    28e0:	80 93 28 03 	sts	0x0328, r24	; 0x800328 <return_code>
					
					// Make the file if it doesn't exist
					// The functions that make folders and files takes much space
					// so it is recommended to have them made on a PC instead
					if(return_code == FR_NOT_FOUND){
    28e4:	82 30       	cpi	r24, 0x02	; 2
    28e6:	91 f4       	brne	.+36     	; 0x290c <main+0x11c>
						Uart_PutString("file n'existe pas;");
    28e8:	86 ed       	ldi	r24, 0xD6	; 214
    28ea:	91 e0       	ldi	r25, 0x01	; 1
    28ec:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
						FAT_makeFile("/Logging/log.txt");
    28f0:	89 ee       	ldi	r24, 0xE9	; 233
    28f2:	91 e0       	ldi	r25, 0x01	; 1
    28f4:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <FAT_makeFile>
						return_code = FAT_fopen(&dir, &file, "log.txt");
    28f8:	42 ef       	ldi	r20, 0xF2	; 242
    28fa:	51 e0       	ldi	r21, 0x01	; 1
    28fc:	68 e5       	ldi	r22, 0x58	; 88
    28fe:	74 e0       	ldi	r23, 0x04	; 4
    2900:	8f ea       	ldi	r24, 0xAF	; 175
    2902:	94 e0       	ldi	r25, 0x04	; 4
    2904:	0e 94 e0 12 	call	0x25c0	; 0x25c0 <FAT_fopen>
    2908:	80 93 28 03 	sts	0x0328, r24	; 0x800328 <return_code>
					}
					
					// Move the writing pointer to the end of the file
					FAT_fseekEnd(&file);
    290c:	88 e5       	ldi	r24, 0x58	; 88
    290e:	94 e0       	ldi	r25, 0x04	; 4
    2910:	0e 94 f0 13 	call	0x27e0	; 0x27e0 <FAT_fseekEnd>
					
					// Write a string
					FAT_fwriteString(&file, "Logging Date: 2022\n");
    2914:	6a ef       	ldi	r22, 0xFA	; 250
    2916:	71 e0       	ldi	r23, 0x01	; 1
    2918:	88 e5       	ldi	r24, 0x58	; 88
    291a:	94 e0       	ldi	r25, 0x04	; 4
    291c:	0e 94 6f 12 	call	0x24de	; 0x24de <FAT_fwriteString>
					
					// Write sensor output
					FAT_fwriteFloat(&file, 120.033, 3);
    2920:	23 e0       	ldi	r18, 0x03	; 3
    2922:	45 ee       	ldi	r20, 0xE5	; 229
    2924:	50 e1       	ldi	r21, 0x10	; 16
    2926:	60 ef       	ldi	r22, 0xF0	; 240
    2928:	72 e4       	ldi	r23, 0x42	; 66
    292a:	88 e5       	ldi	r24, 0x58	; 88
    292c:	94 e0       	ldi	r25, 0x04	; 4
    292e:	0e 94 86 12 	call	0x250c	; 0x250c <FAT_fwriteFloat>
					FAT_fwriteString(&file, ",");
    2932:	6e e0       	ldi	r22, 0x0E	; 14
    2934:	72 e0       	ldi	r23, 0x02	; 2
    2936:	88 e5       	ldi	r24, 0x58	; 88
    2938:	94 e0       	ldi	r25, 0x04	; 4
    293a:	0e 94 6f 12 	call	0x24de	; 0x24de <FAT_fwriteString>
					FAT_fwriteFloat(&file, -0.221, 3);
    293e:	23 e0       	ldi	r18, 0x03	; 3
    2940:	43 ed       	ldi	r20, 0xD3	; 211
    2942:	5d e4       	ldi	r21, 0x4D	; 77
    2944:	62 e6       	ldi	r22, 0x62	; 98
    2946:	7e eb       	ldi	r23, 0xBE	; 190
    2948:	88 e5       	ldi	r24, 0x58	; 88
    294a:	94 e0       	ldi	r25, 0x04	; 4
    294c:	0e 94 86 12 	call	0x250c	; 0x250c <FAT_fwriteFloat>
					FAT_fwriteString(&file, ",");
    2950:	6e e0       	ldi	r22, 0x0E	; 14
    2952:	72 e0       	ldi	r23, 0x02	; 2
    2954:	88 e5       	ldi	r24, 0x58	; 88
    2956:	94 e0       	ldi	r25, 0x04	; 4
    2958:	0e 94 6f 12 	call	0x24de	; 0x24de <FAT_fwriteString>
					FAT_fwriteFloat(&file, -30.004, 3);
    295c:	23 e0       	ldi	r18, 0x03	; 3
    295e:	41 e3       	ldi	r20, 0x31	; 49
    2960:	58 e0       	ldi	r21, 0x08	; 8
    2962:	60 ef       	ldi	r22, 0xF0	; 240
    2964:	71 ec       	ldi	r23, 0xC1	; 193
    2966:	88 e5       	ldi	r24, 0x58	; 88
    2968:	94 e0       	ldi	r25, 0x04	; 4
    296a:	0e 94 86 12 	call	0x250c	; 0x250c <FAT_fwriteFloat>
					FAT_fwriteString(&file, ",");
    296e:	6e e0       	ldi	r22, 0x0E	; 14
    2970:	72 e0       	ldi	r23, 0x02	; 2
    2972:	88 e5       	ldi	r24, 0x58	; 88
    2974:	94 e0       	ldi	r25, 0x04	; 4
    2976:	0e 94 6f 12 	call	0x24de	; 0x24de <FAT_fwriteString>
					FAT_fwriteFloat(&file, 0.023, 3);
    297a:	23 e0       	ldi	r18, 0x03	; 3
    297c:	4f e7       	ldi	r20, 0x7F	; 127
    297e:	5a e6       	ldi	r21, 0x6A	; 106
    2980:	6c eb       	ldi	r22, 0xBC	; 188
    2982:	7c e3       	ldi	r23, 0x3C	; 60
    2984:	88 e5       	ldi	r24, 0x58	; 88
    2986:	94 e0       	ldi	r25, 0x04	; 4
    2988:	0e 94 86 12 	call	0x250c	; 0x250c <FAT_fwriteFloat>
					
					// Synchronize the writing buffer with the card
					FAT_fsync(&file);
    298c:	88 e5       	ldi	r24, 0x58	; 88
    298e:	94 e0       	ldi	r25, 0x04	; 4
    2990:	0e 94 e5 10 	call	0x21ca	; 0x21ca <FAT_fsync>
					Uart_PutString("OK");
    2994:	80 e1       	ldi	r24, 0x10	; 16
    2996:	92 e0       	ldi	r25, 0x02	; 2
    2998:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
    299c:	36 c0       	rjmp	.+108    	; 0x2a0a <main+0x21a>
				}
			}
			else if (return_code == MR_DEVICE_INIT_FAIL)
    299e:	81 30       	cpi	r24, 0x01	; 1
    29a0:	29 f4       	brne	.+10     	; 0x29ac <main+0x1bc>
			{
				Uart_PutString("MR_DEVICE_INIT_FAIL;");
    29a2:	83 e1       	ldi	r24, 0x13	; 19
    29a4:	92 e0       	ldi	r25, 0x02	; 2
    29a6:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
    29aa:	2f c0       	rjmp	.+94     	; 0x2a0a <main+0x21a>
			}
			else if (return_code == MR_ERR)
    29ac:	82 30       	cpi	r24, 0x02	; 2
    29ae:	29 f4       	brne	.+10     	; 0x29ba <main+0x1ca>
			{
				Uart_PutString("MR_ERR;");
    29b0:	88 e2       	ldi	r24, 0x28	; 40
    29b2:	92 e0       	ldi	r25, 0x02	; 2
    29b4:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
    29b8:	28 c0       	rjmp	.+80     	; 0x2a0a <main+0x21a>
			}
			else if (return_code == MR_NO_PARTITION)
    29ba:	83 30       	cpi	r24, 0x03	; 3
    29bc:	29 f4       	brne	.+10     	; 0x29c8 <main+0x1d8>
			{
				Uart_PutString("MR_NO_PARTITION;");
    29be:	80 e3       	ldi	r24, 0x30	; 48
    29c0:	92 e0       	ldi	r25, 0x02	; 2
    29c2:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
    29c6:	21 c0       	rjmp	.+66     	; 0x2a0a <main+0x21a>
			}
			else if (return_code == MR_FAT_ERR)
    29c8:	84 30       	cpi	r24, 0x04	; 4
    29ca:	69 f4       	brne	.+26     	; 0x29e6 <main+0x1f6>
			{
				Uart_PutString("MR_FAT_ERR;");
    29cc:	81 e4       	ldi	r24, 0x41	; 65
    29ce:	92 e0       	ldi	r25, 0x02	; 2
    29d0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
				Uart_PutString(msgUart0);
    29d4:	8f e7       	ldi	r24, 0x7F	; 127
    29d6:	94 e0       	ldi	r25, 0x04	; 4
    29d8:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
				Uart_PutString(msgUart1);
    29dc:	8b ec       	ldi	r24, 0xCB	; 203
    29de:	94 e0       	ldi	r25, 0x04	; 4
    29e0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
    29e4:	12 c0       	rjmp	.+36     	; 0x2a0a <main+0x21a>
			}
			else if (return_code == MR_UNSUPPORTED_FS)
    29e6:	85 30       	cpi	r24, 0x05	; 5
    29e8:	29 f4       	brne	.+10     	; 0x29f4 <main+0x204>
			{
				Uart_PutString("MR_UNSUPPORTED_FS;");
    29ea:	8d e4       	ldi	r24, 0x4D	; 77
    29ec:	92 e0       	ldi	r25, 0x02	; 2
    29ee:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
    29f2:	0b c0       	rjmp	.+22     	; 0x2a0a <main+0x21a>
			}
			else if (return_code == MR_UNSUPPORTED_BS)
    29f4:	86 30       	cpi	r24, 0x06	; 6
    29f6:	29 f4       	brne	.+10     	; 0x2a02 <main+0x212>
			{
				Uart_PutString("MR_UNSUPPORTED_BS;");
    29f8:	80 e6       	ldi	r24, 0x60	; 96
    29fa:	92 e0       	ldi	r25, 0x02	; 2
    29fc:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
    2a00:	04 c0       	rjmp	.+8      	; 0x2a0a <main+0x21a>
			}
			else
			{
				Uart_PutString("rien mount;");
    2a02:	83 e7       	ldi	r24, 0x73	; 115
    2a04:	92 e0       	ldi	r25, 0x02	; 2
    2a06:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
			}
			
			Uart_PutString("---------------------;");
    2a0a:	8f e7       	ldi	r24, 0x7F	; 127
    2a0c:	92 e0       	ldi	r25, 0x02	; 2
    2a0e:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Uart_PutString>
			
			while (PINC & (1 << PINC0))
    2a12:	30 99       	sbic	0x06, 0	; 6
    2a14:	fe cf       	rjmp	.-4      	; 0x2a12 <main+0x222>
	
	while (1)
	{
		if (test == 1)
		{
			test = 0;
    2a16:	80 e0       	ldi	r24, 0x00	; 0
			{
				;
			}
		}
		
		if (PINC & (1 << PINC0))
    2a18:	30 99       	sbic	0x06, 0	; 6
    2a1a:	f3 ce       	rjmp	.-538    	; 0x2802 <main+0x12>
    2a1c:	f3 ce       	rjmp	.-538    	; 0x2804 <main+0x14>

00002a1e <__subsf3>:
    2a1e:	50 58       	subi	r21, 0x80	; 128

00002a20 <__addsf3>:
    2a20:	bb 27       	eor	r27, r27
    2a22:	aa 27       	eor	r26, r26
    2a24:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <__addsf3x>
    2a28:	0c 94 a1 16 	jmp	0x2d42	; 0x2d42 <__fp_round>
    2a2c:	0e 94 93 16 	call	0x2d26	; 0x2d26 <__fp_pscA>
    2a30:	38 f0       	brcs	.+14     	; 0x2a40 <__addsf3+0x20>
    2a32:	0e 94 9a 16 	call	0x2d34	; 0x2d34 <__fp_pscB>
    2a36:	20 f0       	brcs	.+8      	; 0x2a40 <__addsf3+0x20>
    2a38:	39 f4       	brne	.+14     	; 0x2a48 <__addsf3+0x28>
    2a3a:	9f 3f       	cpi	r25, 0xFF	; 255
    2a3c:	19 f4       	brne	.+6      	; 0x2a44 <__addsf3+0x24>
    2a3e:	26 f4       	brtc	.+8      	; 0x2a48 <__addsf3+0x28>
    2a40:	0c 94 90 16 	jmp	0x2d20	; 0x2d20 <__fp_nan>
    2a44:	0e f4       	brtc	.+2      	; 0x2a48 <__addsf3+0x28>
    2a46:	e0 95       	com	r30
    2a48:	e7 fb       	bst	r30, 7
    2a4a:	0c 94 8a 16 	jmp	0x2d14	; 0x2d14 <__fp_inf>

00002a4e <__addsf3x>:
    2a4e:	e9 2f       	mov	r30, r25
    2a50:	0e 94 b2 16 	call	0x2d64	; 0x2d64 <__fp_split3>
    2a54:	58 f3       	brcs	.-42     	; 0x2a2c <__addsf3+0xc>
    2a56:	ba 17       	cp	r27, r26
    2a58:	62 07       	cpc	r22, r18
    2a5a:	73 07       	cpc	r23, r19
    2a5c:	84 07       	cpc	r24, r20
    2a5e:	95 07       	cpc	r25, r21
    2a60:	20 f0       	brcs	.+8      	; 0x2a6a <__addsf3x+0x1c>
    2a62:	79 f4       	brne	.+30     	; 0x2a82 <__addsf3x+0x34>
    2a64:	a6 f5       	brtc	.+104    	; 0x2ace <__addsf3x+0x80>
    2a66:	0c 94 d4 16 	jmp	0x2da8	; 0x2da8 <__fp_zero>
    2a6a:	0e f4       	brtc	.+2      	; 0x2a6e <__addsf3x+0x20>
    2a6c:	e0 95       	com	r30
    2a6e:	0b 2e       	mov	r0, r27
    2a70:	ba 2f       	mov	r27, r26
    2a72:	a0 2d       	mov	r26, r0
    2a74:	0b 01       	movw	r0, r22
    2a76:	b9 01       	movw	r22, r18
    2a78:	90 01       	movw	r18, r0
    2a7a:	0c 01       	movw	r0, r24
    2a7c:	ca 01       	movw	r24, r20
    2a7e:	a0 01       	movw	r20, r0
    2a80:	11 24       	eor	r1, r1
    2a82:	ff 27       	eor	r31, r31
    2a84:	59 1b       	sub	r21, r25
    2a86:	99 f0       	breq	.+38     	; 0x2aae <__addsf3x+0x60>
    2a88:	59 3f       	cpi	r21, 0xF9	; 249
    2a8a:	50 f4       	brcc	.+20     	; 0x2aa0 <__addsf3x+0x52>
    2a8c:	50 3e       	cpi	r21, 0xE0	; 224
    2a8e:	68 f1       	brcs	.+90     	; 0x2aea <__addsf3x+0x9c>
    2a90:	1a 16       	cp	r1, r26
    2a92:	f0 40       	sbci	r31, 0x00	; 0
    2a94:	a2 2f       	mov	r26, r18
    2a96:	23 2f       	mov	r18, r19
    2a98:	34 2f       	mov	r19, r20
    2a9a:	44 27       	eor	r20, r20
    2a9c:	58 5f       	subi	r21, 0xF8	; 248
    2a9e:	f3 cf       	rjmp	.-26     	; 0x2a86 <__addsf3x+0x38>
    2aa0:	46 95       	lsr	r20
    2aa2:	37 95       	ror	r19
    2aa4:	27 95       	ror	r18
    2aa6:	a7 95       	ror	r26
    2aa8:	f0 40       	sbci	r31, 0x00	; 0
    2aaa:	53 95       	inc	r21
    2aac:	c9 f7       	brne	.-14     	; 0x2aa0 <__addsf3x+0x52>
    2aae:	7e f4       	brtc	.+30     	; 0x2ace <__addsf3x+0x80>
    2ab0:	1f 16       	cp	r1, r31
    2ab2:	ba 0b       	sbc	r27, r26
    2ab4:	62 0b       	sbc	r22, r18
    2ab6:	73 0b       	sbc	r23, r19
    2ab8:	84 0b       	sbc	r24, r20
    2aba:	ba f0       	brmi	.+46     	; 0x2aea <__addsf3x+0x9c>
    2abc:	91 50       	subi	r25, 0x01	; 1
    2abe:	a1 f0       	breq	.+40     	; 0x2ae8 <__addsf3x+0x9a>
    2ac0:	ff 0f       	add	r31, r31
    2ac2:	bb 1f       	adc	r27, r27
    2ac4:	66 1f       	adc	r22, r22
    2ac6:	77 1f       	adc	r23, r23
    2ac8:	88 1f       	adc	r24, r24
    2aca:	c2 f7       	brpl	.-16     	; 0x2abc <__addsf3x+0x6e>
    2acc:	0e c0       	rjmp	.+28     	; 0x2aea <__addsf3x+0x9c>
    2ace:	ba 0f       	add	r27, r26
    2ad0:	62 1f       	adc	r22, r18
    2ad2:	73 1f       	adc	r23, r19
    2ad4:	84 1f       	adc	r24, r20
    2ad6:	48 f4       	brcc	.+18     	; 0x2aea <__addsf3x+0x9c>
    2ad8:	87 95       	ror	r24
    2ada:	77 95       	ror	r23
    2adc:	67 95       	ror	r22
    2ade:	b7 95       	ror	r27
    2ae0:	f7 95       	ror	r31
    2ae2:	9e 3f       	cpi	r25, 0xFE	; 254
    2ae4:	08 f0       	brcs	.+2      	; 0x2ae8 <__addsf3x+0x9a>
    2ae6:	b0 cf       	rjmp	.-160    	; 0x2a48 <__addsf3+0x28>
    2ae8:	93 95       	inc	r25
    2aea:	88 0f       	add	r24, r24
    2aec:	08 f0       	brcs	.+2      	; 0x2af0 <__addsf3x+0xa2>
    2aee:	99 27       	eor	r25, r25
    2af0:	ee 0f       	add	r30, r30
    2af2:	97 95       	ror	r25
    2af4:	87 95       	ror	r24
    2af6:	08 95       	ret

00002af8 <__cmpsf2>:
    2af8:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <__fp_cmp>
    2afc:	08 f4       	brcc	.+2      	; 0x2b00 <__cmpsf2+0x8>
    2afe:	81 e0       	ldi	r24, 0x01	; 1
    2b00:	08 95       	ret

00002b02 <__divsf3>:
    2b02:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <__divsf3x>
    2b06:	0c 94 a1 16 	jmp	0x2d42	; 0x2d42 <__fp_round>
    2b0a:	0e 94 9a 16 	call	0x2d34	; 0x2d34 <__fp_pscB>
    2b0e:	58 f0       	brcs	.+22     	; 0x2b26 <__divsf3+0x24>
    2b10:	0e 94 93 16 	call	0x2d26	; 0x2d26 <__fp_pscA>
    2b14:	40 f0       	brcs	.+16     	; 0x2b26 <__divsf3+0x24>
    2b16:	29 f4       	brne	.+10     	; 0x2b22 <__divsf3+0x20>
    2b18:	5f 3f       	cpi	r21, 0xFF	; 255
    2b1a:	29 f0       	breq	.+10     	; 0x2b26 <__divsf3+0x24>
    2b1c:	0c 94 8a 16 	jmp	0x2d14	; 0x2d14 <__fp_inf>
    2b20:	51 11       	cpse	r21, r1
    2b22:	0c 94 d5 16 	jmp	0x2daa	; 0x2daa <__fp_szero>
    2b26:	0c 94 90 16 	jmp	0x2d20	; 0x2d20 <__fp_nan>

00002b2a <__divsf3x>:
    2b2a:	0e 94 b2 16 	call	0x2d64	; 0x2d64 <__fp_split3>
    2b2e:	68 f3       	brcs	.-38     	; 0x2b0a <__divsf3+0x8>

00002b30 <__divsf3_pse>:
    2b30:	99 23       	and	r25, r25
    2b32:	b1 f3       	breq	.-20     	; 0x2b20 <__divsf3+0x1e>
    2b34:	55 23       	and	r21, r21
    2b36:	91 f3       	breq	.-28     	; 0x2b1c <__divsf3+0x1a>
    2b38:	95 1b       	sub	r25, r21
    2b3a:	55 0b       	sbc	r21, r21
    2b3c:	bb 27       	eor	r27, r27
    2b3e:	aa 27       	eor	r26, r26
    2b40:	62 17       	cp	r22, r18
    2b42:	73 07       	cpc	r23, r19
    2b44:	84 07       	cpc	r24, r20
    2b46:	38 f0       	brcs	.+14     	; 0x2b56 <__divsf3_pse+0x26>
    2b48:	9f 5f       	subi	r25, 0xFF	; 255
    2b4a:	5f 4f       	sbci	r21, 0xFF	; 255
    2b4c:	22 0f       	add	r18, r18
    2b4e:	33 1f       	adc	r19, r19
    2b50:	44 1f       	adc	r20, r20
    2b52:	aa 1f       	adc	r26, r26
    2b54:	a9 f3       	breq	.-22     	; 0x2b40 <__divsf3_pse+0x10>
    2b56:	35 d0       	rcall	.+106    	; 0x2bc2 <__divsf3_pse+0x92>
    2b58:	0e 2e       	mov	r0, r30
    2b5a:	3a f0       	brmi	.+14     	; 0x2b6a <__divsf3_pse+0x3a>
    2b5c:	e0 e8       	ldi	r30, 0x80	; 128
    2b5e:	32 d0       	rcall	.+100    	; 0x2bc4 <__divsf3_pse+0x94>
    2b60:	91 50       	subi	r25, 0x01	; 1
    2b62:	50 40       	sbci	r21, 0x00	; 0
    2b64:	e6 95       	lsr	r30
    2b66:	00 1c       	adc	r0, r0
    2b68:	ca f7       	brpl	.-14     	; 0x2b5c <__divsf3_pse+0x2c>
    2b6a:	2b d0       	rcall	.+86     	; 0x2bc2 <__divsf3_pse+0x92>
    2b6c:	fe 2f       	mov	r31, r30
    2b6e:	29 d0       	rcall	.+82     	; 0x2bc2 <__divsf3_pse+0x92>
    2b70:	66 0f       	add	r22, r22
    2b72:	77 1f       	adc	r23, r23
    2b74:	88 1f       	adc	r24, r24
    2b76:	bb 1f       	adc	r27, r27
    2b78:	26 17       	cp	r18, r22
    2b7a:	37 07       	cpc	r19, r23
    2b7c:	48 07       	cpc	r20, r24
    2b7e:	ab 07       	cpc	r26, r27
    2b80:	b0 e8       	ldi	r27, 0x80	; 128
    2b82:	09 f0       	breq	.+2      	; 0x2b86 <__divsf3_pse+0x56>
    2b84:	bb 0b       	sbc	r27, r27
    2b86:	80 2d       	mov	r24, r0
    2b88:	bf 01       	movw	r22, r30
    2b8a:	ff 27       	eor	r31, r31
    2b8c:	93 58       	subi	r25, 0x83	; 131
    2b8e:	5f 4f       	sbci	r21, 0xFF	; 255
    2b90:	3a f0       	brmi	.+14     	; 0x2ba0 <__divsf3_pse+0x70>
    2b92:	9e 3f       	cpi	r25, 0xFE	; 254
    2b94:	51 05       	cpc	r21, r1
    2b96:	78 f0       	brcs	.+30     	; 0x2bb6 <__divsf3_pse+0x86>
    2b98:	0c 94 8a 16 	jmp	0x2d14	; 0x2d14 <__fp_inf>
    2b9c:	0c 94 d5 16 	jmp	0x2daa	; 0x2daa <__fp_szero>
    2ba0:	5f 3f       	cpi	r21, 0xFF	; 255
    2ba2:	e4 f3       	brlt	.-8      	; 0x2b9c <__divsf3_pse+0x6c>
    2ba4:	98 3e       	cpi	r25, 0xE8	; 232
    2ba6:	d4 f3       	brlt	.-12     	; 0x2b9c <__divsf3_pse+0x6c>
    2ba8:	86 95       	lsr	r24
    2baa:	77 95       	ror	r23
    2bac:	67 95       	ror	r22
    2bae:	b7 95       	ror	r27
    2bb0:	f7 95       	ror	r31
    2bb2:	9f 5f       	subi	r25, 0xFF	; 255
    2bb4:	c9 f7       	brne	.-14     	; 0x2ba8 <__divsf3_pse+0x78>
    2bb6:	88 0f       	add	r24, r24
    2bb8:	91 1d       	adc	r25, r1
    2bba:	96 95       	lsr	r25
    2bbc:	87 95       	ror	r24
    2bbe:	97 f9       	bld	r25, 7
    2bc0:	08 95       	ret
    2bc2:	e1 e0       	ldi	r30, 0x01	; 1
    2bc4:	66 0f       	add	r22, r22
    2bc6:	77 1f       	adc	r23, r23
    2bc8:	88 1f       	adc	r24, r24
    2bca:	bb 1f       	adc	r27, r27
    2bcc:	62 17       	cp	r22, r18
    2bce:	73 07       	cpc	r23, r19
    2bd0:	84 07       	cpc	r24, r20
    2bd2:	ba 07       	cpc	r27, r26
    2bd4:	20 f0       	brcs	.+8      	; 0x2bde <__divsf3_pse+0xae>
    2bd6:	62 1b       	sub	r22, r18
    2bd8:	73 0b       	sbc	r23, r19
    2bda:	84 0b       	sbc	r24, r20
    2bdc:	ba 0b       	sbc	r27, r26
    2bde:	ee 1f       	adc	r30, r30
    2be0:	88 f7       	brcc	.-30     	; 0x2bc4 <__divsf3_pse+0x94>
    2be2:	e0 95       	com	r30
    2be4:	08 95       	ret

00002be6 <__fixsfsi>:
    2be6:	0e 94 fa 15 	call	0x2bf4	; 0x2bf4 <__fixunssfsi>
    2bea:	68 94       	set
    2bec:	b1 11       	cpse	r27, r1
    2bee:	0c 94 d5 16 	jmp	0x2daa	; 0x2daa <__fp_szero>
    2bf2:	08 95       	ret

00002bf4 <__fixunssfsi>:
    2bf4:	0e 94 ba 16 	call	0x2d74	; 0x2d74 <__fp_splitA>
    2bf8:	88 f0       	brcs	.+34     	; 0x2c1c <__fixunssfsi+0x28>
    2bfa:	9f 57       	subi	r25, 0x7F	; 127
    2bfc:	98 f0       	brcs	.+38     	; 0x2c24 <__fixunssfsi+0x30>
    2bfe:	b9 2f       	mov	r27, r25
    2c00:	99 27       	eor	r25, r25
    2c02:	b7 51       	subi	r27, 0x17	; 23
    2c04:	b0 f0       	brcs	.+44     	; 0x2c32 <__fixunssfsi+0x3e>
    2c06:	e1 f0       	breq	.+56     	; 0x2c40 <__fixunssfsi+0x4c>
    2c08:	66 0f       	add	r22, r22
    2c0a:	77 1f       	adc	r23, r23
    2c0c:	88 1f       	adc	r24, r24
    2c0e:	99 1f       	adc	r25, r25
    2c10:	1a f0       	brmi	.+6      	; 0x2c18 <__fixunssfsi+0x24>
    2c12:	ba 95       	dec	r27
    2c14:	c9 f7       	brne	.-14     	; 0x2c08 <__fixunssfsi+0x14>
    2c16:	14 c0       	rjmp	.+40     	; 0x2c40 <__fixunssfsi+0x4c>
    2c18:	b1 30       	cpi	r27, 0x01	; 1
    2c1a:	91 f0       	breq	.+36     	; 0x2c40 <__fixunssfsi+0x4c>
    2c1c:	0e 94 d4 16 	call	0x2da8	; 0x2da8 <__fp_zero>
    2c20:	b1 e0       	ldi	r27, 0x01	; 1
    2c22:	08 95       	ret
    2c24:	0c 94 d4 16 	jmp	0x2da8	; 0x2da8 <__fp_zero>
    2c28:	67 2f       	mov	r22, r23
    2c2a:	78 2f       	mov	r23, r24
    2c2c:	88 27       	eor	r24, r24
    2c2e:	b8 5f       	subi	r27, 0xF8	; 248
    2c30:	39 f0       	breq	.+14     	; 0x2c40 <__fixunssfsi+0x4c>
    2c32:	b9 3f       	cpi	r27, 0xF9	; 249
    2c34:	cc f3       	brlt	.-14     	; 0x2c28 <__fixunssfsi+0x34>
    2c36:	86 95       	lsr	r24
    2c38:	77 95       	ror	r23
    2c3a:	67 95       	ror	r22
    2c3c:	b3 95       	inc	r27
    2c3e:	d9 f7       	brne	.-10     	; 0x2c36 <__fixunssfsi+0x42>
    2c40:	3e f4       	brtc	.+14     	; 0x2c50 <__fixunssfsi+0x5c>
    2c42:	90 95       	com	r25
    2c44:	80 95       	com	r24
    2c46:	70 95       	com	r23
    2c48:	61 95       	neg	r22
    2c4a:	7f 4f       	sbci	r23, 0xFF	; 255
    2c4c:	8f 4f       	sbci	r24, 0xFF	; 255
    2c4e:	9f 4f       	sbci	r25, 0xFF	; 255
    2c50:	08 95       	ret

00002c52 <__floatunsisf>:
    2c52:	e8 94       	clt
    2c54:	09 c0       	rjmp	.+18     	; 0x2c68 <__floatsisf+0x12>

00002c56 <__floatsisf>:
    2c56:	97 fb       	bst	r25, 7
    2c58:	3e f4       	brtc	.+14     	; 0x2c68 <__floatsisf+0x12>
    2c5a:	90 95       	com	r25
    2c5c:	80 95       	com	r24
    2c5e:	70 95       	com	r23
    2c60:	61 95       	neg	r22
    2c62:	7f 4f       	sbci	r23, 0xFF	; 255
    2c64:	8f 4f       	sbci	r24, 0xFF	; 255
    2c66:	9f 4f       	sbci	r25, 0xFF	; 255
    2c68:	99 23       	and	r25, r25
    2c6a:	a9 f0       	breq	.+42     	; 0x2c96 <__floatsisf+0x40>
    2c6c:	f9 2f       	mov	r31, r25
    2c6e:	96 e9       	ldi	r25, 0x96	; 150
    2c70:	bb 27       	eor	r27, r27
    2c72:	93 95       	inc	r25
    2c74:	f6 95       	lsr	r31
    2c76:	87 95       	ror	r24
    2c78:	77 95       	ror	r23
    2c7a:	67 95       	ror	r22
    2c7c:	b7 95       	ror	r27
    2c7e:	f1 11       	cpse	r31, r1
    2c80:	f8 cf       	rjmp	.-16     	; 0x2c72 <__floatsisf+0x1c>
    2c82:	fa f4       	brpl	.+62     	; 0x2cc2 <__floatsisf+0x6c>
    2c84:	bb 0f       	add	r27, r27
    2c86:	11 f4       	brne	.+4      	; 0x2c8c <__floatsisf+0x36>
    2c88:	60 ff       	sbrs	r22, 0
    2c8a:	1b c0       	rjmp	.+54     	; 0x2cc2 <__floatsisf+0x6c>
    2c8c:	6f 5f       	subi	r22, 0xFF	; 255
    2c8e:	7f 4f       	sbci	r23, 0xFF	; 255
    2c90:	8f 4f       	sbci	r24, 0xFF	; 255
    2c92:	9f 4f       	sbci	r25, 0xFF	; 255
    2c94:	16 c0       	rjmp	.+44     	; 0x2cc2 <__floatsisf+0x6c>
    2c96:	88 23       	and	r24, r24
    2c98:	11 f0       	breq	.+4      	; 0x2c9e <__floatsisf+0x48>
    2c9a:	96 e9       	ldi	r25, 0x96	; 150
    2c9c:	11 c0       	rjmp	.+34     	; 0x2cc0 <__floatsisf+0x6a>
    2c9e:	77 23       	and	r23, r23
    2ca0:	21 f0       	breq	.+8      	; 0x2caa <__floatsisf+0x54>
    2ca2:	9e e8       	ldi	r25, 0x8E	; 142
    2ca4:	87 2f       	mov	r24, r23
    2ca6:	76 2f       	mov	r23, r22
    2ca8:	05 c0       	rjmp	.+10     	; 0x2cb4 <__floatsisf+0x5e>
    2caa:	66 23       	and	r22, r22
    2cac:	71 f0       	breq	.+28     	; 0x2cca <__floatsisf+0x74>
    2cae:	96 e8       	ldi	r25, 0x86	; 134
    2cb0:	86 2f       	mov	r24, r22
    2cb2:	70 e0       	ldi	r23, 0x00	; 0
    2cb4:	60 e0       	ldi	r22, 0x00	; 0
    2cb6:	2a f0       	brmi	.+10     	; 0x2cc2 <__floatsisf+0x6c>
    2cb8:	9a 95       	dec	r25
    2cba:	66 0f       	add	r22, r22
    2cbc:	77 1f       	adc	r23, r23
    2cbe:	88 1f       	adc	r24, r24
    2cc0:	da f7       	brpl	.-10     	; 0x2cb8 <__floatsisf+0x62>
    2cc2:	88 0f       	add	r24, r24
    2cc4:	96 95       	lsr	r25
    2cc6:	87 95       	ror	r24
    2cc8:	97 f9       	bld	r25, 7
    2cca:	08 95       	ret

00002ccc <__fp_cmp>:
    2ccc:	99 0f       	add	r25, r25
    2cce:	00 08       	sbc	r0, r0
    2cd0:	55 0f       	add	r21, r21
    2cd2:	aa 0b       	sbc	r26, r26
    2cd4:	e0 e8       	ldi	r30, 0x80	; 128
    2cd6:	fe ef       	ldi	r31, 0xFE	; 254
    2cd8:	16 16       	cp	r1, r22
    2cda:	17 06       	cpc	r1, r23
    2cdc:	e8 07       	cpc	r30, r24
    2cde:	f9 07       	cpc	r31, r25
    2ce0:	c0 f0       	brcs	.+48     	; 0x2d12 <__fp_cmp+0x46>
    2ce2:	12 16       	cp	r1, r18
    2ce4:	13 06       	cpc	r1, r19
    2ce6:	e4 07       	cpc	r30, r20
    2ce8:	f5 07       	cpc	r31, r21
    2cea:	98 f0       	brcs	.+38     	; 0x2d12 <__fp_cmp+0x46>
    2cec:	62 1b       	sub	r22, r18
    2cee:	73 0b       	sbc	r23, r19
    2cf0:	84 0b       	sbc	r24, r20
    2cf2:	95 0b       	sbc	r25, r21
    2cf4:	39 f4       	brne	.+14     	; 0x2d04 <__fp_cmp+0x38>
    2cf6:	0a 26       	eor	r0, r26
    2cf8:	61 f0       	breq	.+24     	; 0x2d12 <__fp_cmp+0x46>
    2cfa:	23 2b       	or	r18, r19
    2cfc:	24 2b       	or	r18, r20
    2cfe:	25 2b       	or	r18, r21
    2d00:	21 f4       	brne	.+8      	; 0x2d0a <__fp_cmp+0x3e>
    2d02:	08 95       	ret
    2d04:	0a 26       	eor	r0, r26
    2d06:	09 f4       	brne	.+2      	; 0x2d0a <__fp_cmp+0x3e>
    2d08:	a1 40       	sbci	r26, 0x01	; 1
    2d0a:	a6 95       	lsr	r26
    2d0c:	8f ef       	ldi	r24, 0xFF	; 255
    2d0e:	81 1d       	adc	r24, r1
    2d10:	81 1d       	adc	r24, r1
    2d12:	08 95       	ret

00002d14 <__fp_inf>:
    2d14:	97 f9       	bld	r25, 7
    2d16:	9f 67       	ori	r25, 0x7F	; 127
    2d18:	80 e8       	ldi	r24, 0x80	; 128
    2d1a:	70 e0       	ldi	r23, 0x00	; 0
    2d1c:	60 e0       	ldi	r22, 0x00	; 0
    2d1e:	08 95       	ret

00002d20 <__fp_nan>:
    2d20:	9f ef       	ldi	r25, 0xFF	; 255
    2d22:	80 ec       	ldi	r24, 0xC0	; 192
    2d24:	08 95       	ret

00002d26 <__fp_pscA>:
    2d26:	00 24       	eor	r0, r0
    2d28:	0a 94       	dec	r0
    2d2a:	16 16       	cp	r1, r22
    2d2c:	17 06       	cpc	r1, r23
    2d2e:	18 06       	cpc	r1, r24
    2d30:	09 06       	cpc	r0, r25
    2d32:	08 95       	ret

00002d34 <__fp_pscB>:
    2d34:	00 24       	eor	r0, r0
    2d36:	0a 94       	dec	r0
    2d38:	12 16       	cp	r1, r18
    2d3a:	13 06       	cpc	r1, r19
    2d3c:	14 06       	cpc	r1, r20
    2d3e:	05 06       	cpc	r0, r21
    2d40:	08 95       	ret

00002d42 <__fp_round>:
    2d42:	09 2e       	mov	r0, r25
    2d44:	03 94       	inc	r0
    2d46:	00 0c       	add	r0, r0
    2d48:	11 f4       	brne	.+4      	; 0x2d4e <__fp_round+0xc>
    2d4a:	88 23       	and	r24, r24
    2d4c:	52 f0       	brmi	.+20     	; 0x2d62 <__fp_round+0x20>
    2d4e:	bb 0f       	add	r27, r27
    2d50:	40 f4       	brcc	.+16     	; 0x2d62 <__fp_round+0x20>
    2d52:	bf 2b       	or	r27, r31
    2d54:	11 f4       	brne	.+4      	; 0x2d5a <__fp_round+0x18>
    2d56:	60 ff       	sbrs	r22, 0
    2d58:	04 c0       	rjmp	.+8      	; 0x2d62 <__fp_round+0x20>
    2d5a:	6f 5f       	subi	r22, 0xFF	; 255
    2d5c:	7f 4f       	sbci	r23, 0xFF	; 255
    2d5e:	8f 4f       	sbci	r24, 0xFF	; 255
    2d60:	9f 4f       	sbci	r25, 0xFF	; 255
    2d62:	08 95       	ret

00002d64 <__fp_split3>:
    2d64:	57 fd       	sbrc	r21, 7
    2d66:	90 58       	subi	r25, 0x80	; 128
    2d68:	44 0f       	add	r20, r20
    2d6a:	55 1f       	adc	r21, r21
    2d6c:	59 f0       	breq	.+22     	; 0x2d84 <__fp_splitA+0x10>
    2d6e:	5f 3f       	cpi	r21, 0xFF	; 255
    2d70:	71 f0       	breq	.+28     	; 0x2d8e <__fp_splitA+0x1a>
    2d72:	47 95       	ror	r20

00002d74 <__fp_splitA>:
    2d74:	88 0f       	add	r24, r24
    2d76:	97 fb       	bst	r25, 7
    2d78:	99 1f       	adc	r25, r25
    2d7a:	61 f0       	breq	.+24     	; 0x2d94 <__fp_splitA+0x20>
    2d7c:	9f 3f       	cpi	r25, 0xFF	; 255
    2d7e:	79 f0       	breq	.+30     	; 0x2d9e <__fp_splitA+0x2a>
    2d80:	87 95       	ror	r24
    2d82:	08 95       	ret
    2d84:	12 16       	cp	r1, r18
    2d86:	13 06       	cpc	r1, r19
    2d88:	14 06       	cpc	r1, r20
    2d8a:	55 1f       	adc	r21, r21
    2d8c:	f2 cf       	rjmp	.-28     	; 0x2d72 <__fp_split3+0xe>
    2d8e:	46 95       	lsr	r20
    2d90:	f1 df       	rcall	.-30     	; 0x2d74 <__fp_splitA>
    2d92:	08 c0       	rjmp	.+16     	; 0x2da4 <__fp_splitA+0x30>
    2d94:	16 16       	cp	r1, r22
    2d96:	17 06       	cpc	r1, r23
    2d98:	18 06       	cpc	r1, r24
    2d9a:	99 1f       	adc	r25, r25
    2d9c:	f1 cf       	rjmp	.-30     	; 0x2d80 <__fp_splitA+0xc>
    2d9e:	86 95       	lsr	r24
    2da0:	71 05       	cpc	r23, r1
    2da2:	61 05       	cpc	r22, r1
    2da4:	08 94       	sec
    2da6:	08 95       	ret

00002da8 <__fp_zero>:
    2da8:	e8 94       	clt

00002daa <__fp_szero>:
    2daa:	bb 27       	eor	r27, r27
    2dac:	66 27       	eor	r22, r22
    2dae:	77 27       	eor	r23, r23
    2db0:	cb 01       	movw	r24, r22
    2db2:	97 f9       	bld	r25, 7
    2db4:	08 95       	ret

00002db6 <__gesf2>:
    2db6:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <__fp_cmp>
    2dba:	08 f4       	brcc	.+2      	; 0x2dbe <__gesf2+0x8>
    2dbc:	8f ef       	ldi	r24, 0xFF	; 255
    2dbe:	08 95       	ret

00002dc0 <__mulsf3>:
    2dc0:	0e 94 f3 16 	call	0x2de6	; 0x2de6 <__mulsf3x>
    2dc4:	0c 94 a1 16 	jmp	0x2d42	; 0x2d42 <__fp_round>
    2dc8:	0e 94 93 16 	call	0x2d26	; 0x2d26 <__fp_pscA>
    2dcc:	38 f0       	brcs	.+14     	; 0x2ddc <__mulsf3+0x1c>
    2dce:	0e 94 9a 16 	call	0x2d34	; 0x2d34 <__fp_pscB>
    2dd2:	20 f0       	brcs	.+8      	; 0x2ddc <__mulsf3+0x1c>
    2dd4:	95 23       	and	r25, r21
    2dd6:	11 f0       	breq	.+4      	; 0x2ddc <__mulsf3+0x1c>
    2dd8:	0c 94 8a 16 	jmp	0x2d14	; 0x2d14 <__fp_inf>
    2ddc:	0c 94 90 16 	jmp	0x2d20	; 0x2d20 <__fp_nan>
    2de0:	11 24       	eor	r1, r1
    2de2:	0c 94 d5 16 	jmp	0x2daa	; 0x2daa <__fp_szero>

00002de6 <__mulsf3x>:
    2de6:	0e 94 b2 16 	call	0x2d64	; 0x2d64 <__fp_split3>
    2dea:	70 f3       	brcs	.-36     	; 0x2dc8 <__mulsf3+0x8>

00002dec <__mulsf3_pse>:
    2dec:	95 9f       	mul	r25, r21
    2dee:	c1 f3       	breq	.-16     	; 0x2de0 <__mulsf3+0x20>
    2df0:	95 0f       	add	r25, r21
    2df2:	50 e0       	ldi	r21, 0x00	; 0
    2df4:	55 1f       	adc	r21, r21
    2df6:	62 9f       	mul	r22, r18
    2df8:	f0 01       	movw	r30, r0
    2dfa:	72 9f       	mul	r23, r18
    2dfc:	bb 27       	eor	r27, r27
    2dfe:	f0 0d       	add	r31, r0
    2e00:	b1 1d       	adc	r27, r1
    2e02:	63 9f       	mul	r22, r19
    2e04:	aa 27       	eor	r26, r26
    2e06:	f0 0d       	add	r31, r0
    2e08:	b1 1d       	adc	r27, r1
    2e0a:	aa 1f       	adc	r26, r26
    2e0c:	64 9f       	mul	r22, r20
    2e0e:	66 27       	eor	r22, r22
    2e10:	b0 0d       	add	r27, r0
    2e12:	a1 1d       	adc	r26, r1
    2e14:	66 1f       	adc	r22, r22
    2e16:	82 9f       	mul	r24, r18
    2e18:	22 27       	eor	r18, r18
    2e1a:	b0 0d       	add	r27, r0
    2e1c:	a1 1d       	adc	r26, r1
    2e1e:	62 1f       	adc	r22, r18
    2e20:	73 9f       	mul	r23, r19
    2e22:	b0 0d       	add	r27, r0
    2e24:	a1 1d       	adc	r26, r1
    2e26:	62 1f       	adc	r22, r18
    2e28:	83 9f       	mul	r24, r19
    2e2a:	a0 0d       	add	r26, r0
    2e2c:	61 1d       	adc	r22, r1
    2e2e:	22 1f       	adc	r18, r18
    2e30:	74 9f       	mul	r23, r20
    2e32:	33 27       	eor	r19, r19
    2e34:	a0 0d       	add	r26, r0
    2e36:	61 1d       	adc	r22, r1
    2e38:	23 1f       	adc	r18, r19
    2e3a:	84 9f       	mul	r24, r20
    2e3c:	60 0d       	add	r22, r0
    2e3e:	21 1d       	adc	r18, r1
    2e40:	82 2f       	mov	r24, r18
    2e42:	76 2f       	mov	r23, r22
    2e44:	6a 2f       	mov	r22, r26
    2e46:	11 24       	eor	r1, r1
    2e48:	9f 57       	subi	r25, 0x7F	; 127
    2e4a:	50 40       	sbci	r21, 0x00	; 0
    2e4c:	9a f0       	brmi	.+38     	; 0x2e74 <__mulsf3_pse+0x88>
    2e4e:	f1 f0       	breq	.+60     	; 0x2e8c <__mulsf3_pse+0xa0>
    2e50:	88 23       	and	r24, r24
    2e52:	4a f0       	brmi	.+18     	; 0x2e66 <__mulsf3_pse+0x7a>
    2e54:	ee 0f       	add	r30, r30
    2e56:	ff 1f       	adc	r31, r31
    2e58:	bb 1f       	adc	r27, r27
    2e5a:	66 1f       	adc	r22, r22
    2e5c:	77 1f       	adc	r23, r23
    2e5e:	88 1f       	adc	r24, r24
    2e60:	91 50       	subi	r25, 0x01	; 1
    2e62:	50 40       	sbci	r21, 0x00	; 0
    2e64:	a9 f7       	brne	.-22     	; 0x2e50 <__mulsf3_pse+0x64>
    2e66:	9e 3f       	cpi	r25, 0xFE	; 254
    2e68:	51 05       	cpc	r21, r1
    2e6a:	80 f0       	brcs	.+32     	; 0x2e8c <__mulsf3_pse+0xa0>
    2e6c:	0c 94 8a 16 	jmp	0x2d14	; 0x2d14 <__fp_inf>
    2e70:	0c 94 d5 16 	jmp	0x2daa	; 0x2daa <__fp_szero>
    2e74:	5f 3f       	cpi	r21, 0xFF	; 255
    2e76:	e4 f3       	brlt	.-8      	; 0x2e70 <__mulsf3_pse+0x84>
    2e78:	98 3e       	cpi	r25, 0xE8	; 232
    2e7a:	d4 f3       	brlt	.-12     	; 0x2e70 <__mulsf3_pse+0x84>
    2e7c:	86 95       	lsr	r24
    2e7e:	77 95       	ror	r23
    2e80:	67 95       	ror	r22
    2e82:	b7 95       	ror	r27
    2e84:	f7 95       	ror	r31
    2e86:	e7 95       	ror	r30
    2e88:	9f 5f       	subi	r25, 0xFF	; 255
    2e8a:	c1 f7       	brne	.-16     	; 0x2e7c <__mulsf3_pse+0x90>
    2e8c:	fe 2b       	or	r31, r30
    2e8e:	88 0f       	add	r24, r24
    2e90:	91 1d       	adc	r25, r1
    2e92:	96 95       	lsr	r25
    2e94:	87 95       	ror	r24
    2e96:	97 f9       	bld	r25, 7
    2e98:	08 95       	ret

00002e9a <__mulsi3>:
    2e9a:	db 01       	movw	r26, r22
    2e9c:	8f 93       	push	r24
    2e9e:	9f 93       	push	r25
    2ea0:	0e 94 b2 17 	call	0x2f64	; 0x2f64 <__muluhisi3>
    2ea4:	bf 91       	pop	r27
    2ea6:	af 91       	pop	r26
    2ea8:	a2 9f       	mul	r26, r18
    2eaa:	80 0d       	add	r24, r0
    2eac:	91 1d       	adc	r25, r1
    2eae:	a3 9f       	mul	r26, r19
    2eb0:	90 0d       	add	r25, r0
    2eb2:	b2 9f       	mul	r27, r18
    2eb4:	90 0d       	add	r25, r0
    2eb6:	11 24       	eor	r1, r1
    2eb8:	08 95       	ret

00002eba <__udivmodhi4>:
    2eba:	aa 1b       	sub	r26, r26
    2ebc:	bb 1b       	sub	r27, r27
    2ebe:	51 e1       	ldi	r21, 0x11	; 17
    2ec0:	07 c0       	rjmp	.+14     	; 0x2ed0 <__udivmodhi4_ep>

00002ec2 <__udivmodhi4_loop>:
    2ec2:	aa 1f       	adc	r26, r26
    2ec4:	bb 1f       	adc	r27, r27
    2ec6:	a6 17       	cp	r26, r22
    2ec8:	b7 07       	cpc	r27, r23
    2eca:	10 f0       	brcs	.+4      	; 0x2ed0 <__udivmodhi4_ep>
    2ecc:	a6 1b       	sub	r26, r22
    2ece:	b7 0b       	sbc	r27, r23

00002ed0 <__udivmodhi4_ep>:
    2ed0:	88 1f       	adc	r24, r24
    2ed2:	99 1f       	adc	r25, r25
    2ed4:	5a 95       	dec	r21
    2ed6:	a9 f7       	brne	.-22     	; 0x2ec2 <__udivmodhi4_loop>
    2ed8:	80 95       	com	r24
    2eda:	90 95       	com	r25
    2edc:	bc 01       	movw	r22, r24
    2ede:	cd 01       	movw	r24, r26
    2ee0:	08 95       	ret

00002ee2 <__udivmodsi4>:
    2ee2:	a1 e2       	ldi	r26, 0x21	; 33
    2ee4:	1a 2e       	mov	r1, r26
    2ee6:	aa 1b       	sub	r26, r26
    2ee8:	bb 1b       	sub	r27, r27
    2eea:	fd 01       	movw	r30, r26
    2eec:	0d c0       	rjmp	.+26     	; 0x2f08 <__udivmodsi4_ep>

00002eee <__udivmodsi4_loop>:
    2eee:	aa 1f       	adc	r26, r26
    2ef0:	bb 1f       	adc	r27, r27
    2ef2:	ee 1f       	adc	r30, r30
    2ef4:	ff 1f       	adc	r31, r31
    2ef6:	a2 17       	cp	r26, r18
    2ef8:	b3 07       	cpc	r27, r19
    2efa:	e4 07       	cpc	r30, r20
    2efc:	f5 07       	cpc	r31, r21
    2efe:	20 f0       	brcs	.+8      	; 0x2f08 <__udivmodsi4_ep>
    2f00:	a2 1b       	sub	r26, r18
    2f02:	b3 0b       	sbc	r27, r19
    2f04:	e4 0b       	sbc	r30, r20
    2f06:	f5 0b       	sbc	r31, r21

00002f08 <__udivmodsi4_ep>:
    2f08:	66 1f       	adc	r22, r22
    2f0a:	77 1f       	adc	r23, r23
    2f0c:	88 1f       	adc	r24, r24
    2f0e:	99 1f       	adc	r25, r25
    2f10:	1a 94       	dec	r1
    2f12:	69 f7       	brne	.-38     	; 0x2eee <__udivmodsi4_loop>
    2f14:	60 95       	com	r22
    2f16:	70 95       	com	r23
    2f18:	80 95       	com	r24
    2f1a:	90 95       	com	r25
    2f1c:	9b 01       	movw	r18, r22
    2f1e:	ac 01       	movw	r20, r24
    2f20:	bd 01       	movw	r22, r26
    2f22:	cf 01       	movw	r24, r30
    2f24:	08 95       	ret

00002f26 <__divmodsi4>:
    2f26:	05 2e       	mov	r0, r21
    2f28:	97 fb       	bst	r25, 7
    2f2a:	1e f4       	brtc	.+6      	; 0x2f32 <__divmodsi4+0xc>
    2f2c:	00 94       	com	r0
    2f2e:	0e 94 aa 17 	call	0x2f54	; 0x2f54 <__negsi2>
    2f32:	57 fd       	sbrc	r21, 7
    2f34:	07 d0       	rcall	.+14     	; 0x2f44 <__divmodsi4_neg2>
    2f36:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <__udivmodsi4>
    2f3a:	07 fc       	sbrc	r0, 7
    2f3c:	03 d0       	rcall	.+6      	; 0x2f44 <__divmodsi4_neg2>
    2f3e:	4e f4       	brtc	.+18     	; 0x2f52 <__divmodsi4_exit>
    2f40:	0c 94 aa 17 	jmp	0x2f54	; 0x2f54 <__negsi2>

00002f44 <__divmodsi4_neg2>:
    2f44:	50 95       	com	r21
    2f46:	40 95       	com	r20
    2f48:	30 95       	com	r19
    2f4a:	21 95       	neg	r18
    2f4c:	3f 4f       	sbci	r19, 0xFF	; 255
    2f4e:	4f 4f       	sbci	r20, 0xFF	; 255
    2f50:	5f 4f       	sbci	r21, 0xFF	; 255

00002f52 <__divmodsi4_exit>:
    2f52:	08 95       	ret

00002f54 <__negsi2>:
    2f54:	90 95       	com	r25
    2f56:	80 95       	com	r24
    2f58:	70 95       	com	r23
    2f5a:	61 95       	neg	r22
    2f5c:	7f 4f       	sbci	r23, 0xFF	; 255
    2f5e:	8f 4f       	sbci	r24, 0xFF	; 255
    2f60:	9f 4f       	sbci	r25, 0xFF	; 255
    2f62:	08 95       	ret

00002f64 <__muluhisi3>:
    2f64:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <__umulhisi3>
    2f68:	a5 9f       	mul	r26, r21
    2f6a:	90 0d       	add	r25, r0
    2f6c:	b4 9f       	mul	r27, r20
    2f6e:	90 0d       	add	r25, r0
    2f70:	a4 9f       	mul	r26, r20
    2f72:	80 0d       	add	r24, r0
    2f74:	91 1d       	adc	r25, r1
    2f76:	11 24       	eor	r1, r1
    2f78:	08 95       	ret

00002f7a <__umulhisi3>:
    2f7a:	a2 9f       	mul	r26, r18
    2f7c:	b0 01       	movw	r22, r0
    2f7e:	b3 9f       	mul	r27, r19
    2f80:	c0 01       	movw	r24, r0
    2f82:	a3 9f       	mul	r26, r19
    2f84:	70 0d       	add	r23, r0
    2f86:	81 1d       	adc	r24, r1
    2f88:	11 24       	eor	r1, r1
    2f8a:	91 1d       	adc	r25, r1
    2f8c:	b2 9f       	mul	r27, r18
    2f8e:	70 0d       	add	r23, r0
    2f90:	81 1d       	adc	r24, r1
    2f92:	11 24       	eor	r1, r1
    2f94:	91 1d       	adc	r25, r1
    2f96:	08 95       	ret

00002f98 <sprintf>:
    2f98:	ae e0       	ldi	r26, 0x0E	; 14
    2f9a:	b0 e0       	ldi	r27, 0x00	; 0
    2f9c:	e2 ed       	ldi	r30, 0xD2	; 210
    2f9e:	f7 e1       	ldi	r31, 0x17	; 23
    2fa0:	0c 94 8d 1a 	jmp	0x351a	; 0x351a <__prologue_saves__+0x1c>
    2fa4:	0d 89       	ldd	r16, Y+21	; 0x15
    2fa6:	1e 89       	ldd	r17, Y+22	; 0x16
    2fa8:	86 e0       	ldi	r24, 0x06	; 6
    2faa:	8c 83       	std	Y+4, r24	; 0x04
    2fac:	1a 83       	std	Y+2, r17	; 0x02
    2fae:	09 83       	std	Y+1, r16	; 0x01
    2fb0:	8f ef       	ldi	r24, 0xFF	; 255
    2fb2:	9f e7       	ldi	r25, 0x7F	; 127
    2fb4:	9e 83       	std	Y+6, r25	; 0x06
    2fb6:	8d 83       	std	Y+5, r24	; 0x05
    2fb8:	ae 01       	movw	r20, r28
    2fba:	47 5e       	subi	r20, 0xE7	; 231
    2fbc:	5f 4f       	sbci	r21, 0xFF	; 255
    2fbe:	6f 89       	ldd	r22, Y+23	; 0x17
    2fc0:	78 8d       	ldd	r23, Y+24	; 0x18
    2fc2:	ce 01       	movw	r24, r28
    2fc4:	01 96       	adiw	r24, 0x01	; 1
    2fc6:	0e 94 ee 17 	call	0x2fdc	; 0x2fdc <vfprintf>
    2fca:	ef 81       	ldd	r30, Y+7	; 0x07
    2fcc:	f8 85       	ldd	r31, Y+8	; 0x08
    2fce:	e0 0f       	add	r30, r16
    2fd0:	f1 1f       	adc	r31, r17
    2fd2:	10 82       	st	Z, r1
    2fd4:	2e 96       	adiw	r28, 0x0e	; 14
    2fd6:	e4 e0       	ldi	r30, 0x04	; 4
    2fd8:	0c 94 a9 1a 	jmp	0x3552	; 0x3552 <__epilogue_restores__+0x1c>

00002fdc <vfprintf>:
    2fdc:	ab e0       	ldi	r26, 0x0B	; 11
    2fde:	b0 e0       	ldi	r27, 0x00	; 0
    2fe0:	e4 ef       	ldi	r30, 0xF4	; 244
    2fe2:	f7 e1       	ldi	r31, 0x17	; 23
    2fe4:	0c 94 7f 1a 	jmp	0x34fe	; 0x34fe <__prologue_saves__>
    2fe8:	6c 01       	movw	r12, r24
    2fea:	7b 01       	movw	r14, r22
    2fec:	8a 01       	movw	r16, r20
    2fee:	fc 01       	movw	r30, r24
    2ff0:	17 82       	std	Z+7, r1	; 0x07
    2ff2:	16 82       	std	Z+6, r1	; 0x06
    2ff4:	83 81       	ldd	r24, Z+3	; 0x03
    2ff6:	81 ff       	sbrs	r24, 1
    2ff8:	cc c1       	rjmp	.+920    	; 0x3392 <vfprintf+0x3b6>
    2ffa:	ce 01       	movw	r24, r28
    2ffc:	01 96       	adiw	r24, 0x01	; 1
    2ffe:	3c 01       	movw	r6, r24
    3000:	f6 01       	movw	r30, r12
    3002:	93 81       	ldd	r25, Z+3	; 0x03
    3004:	f7 01       	movw	r30, r14
    3006:	93 fd       	sbrc	r25, 3
    3008:	85 91       	lpm	r24, Z+
    300a:	93 ff       	sbrs	r25, 3
    300c:	81 91       	ld	r24, Z+
    300e:	7f 01       	movw	r14, r30
    3010:	88 23       	and	r24, r24
    3012:	09 f4       	brne	.+2      	; 0x3016 <vfprintf+0x3a>
    3014:	ba c1       	rjmp	.+884    	; 0x338a <vfprintf+0x3ae>
    3016:	85 32       	cpi	r24, 0x25	; 37
    3018:	39 f4       	brne	.+14     	; 0x3028 <vfprintf+0x4c>
    301a:	93 fd       	sbrc	r25, 3
    301c:	85 91       	lpm	r24, Z+
    301e:	93 ff       	sbrs	r25, 3
    3020:	81 91       	ld	r24, Z+
    3022:	7f 01       	movw	r14, r30
    3024:	85 32       	cpi	r24, 0x25	; 37
    3026:	29 f4       	brne	.+10     	; 0x3032 <vfprintf+0x56>
    3028:	b6 01       	movw	r22, r12
    302a:	90 e0       	ldi	r25, 0x00	; 0
    302c:	0e 94 e5 19 	call	0x33ca	; 0x33ca <fputc>
    3030:	e7 cf       	rjmp	.-50     	; 0x3000 <vfprintf+0x24>
    3032:	91 2c       	mov	r9, r1
    3034:	21 2c       	mov	r2, r1
    3036:	31 2c       	mov	r3, r1
    3038:	ff e1       	ldi	r31, 0x1F	; 31
    303a:	f3 15       	cp	r31, r3
    303c:	d8 f0       	brcs	.+54     	; 0x3074 <vfprintf+0x98>
    303e:	8b 32       	cpi	r24, 0x2B	; 43
    3040:	79 f0       	breq	.+30     	; 0x3060 <vfprintf+0x84>
    3042:	38 f4       	brcc	.+14     	; 0x3052 <vfprintf+0x76>
    3044:	80 32       	cpi	r24, 0x20	; 32
    3046:	79 f0       	breq	.+30     	; 0x3066 <vfprintf+0x8a>
    3048:	83 32       	cpi	r24, 0x23	; 35
    304a:	a1 f4       	brne	.+40     	; 0x3074 <vfprintf+0x98>
    304c:	23 2d       	mov	r18, r3
    304e:	20 61       	ori	r18, 0x10	; 16
    3050:	1d c0       	rjmp	.+58     	; 0x308c <vfprintf+0xb0>
    3052:	8d 32       	cpi	r24, 0x2D	; 45
    3054:	61 f0       	breq	.+24     	; 0x306e <vfprintf+0x92>
    3056:	80 33       	cpi	r24, 0x30	; 48
    3058:	69 f4       	brne	.+26     	; 0x3074 <vfprintf+0x98>
    305a:	23 2d       	mov	r18, r3
    305c:	21 60       	ori	r18, 0x01	; 1
    305e:	16 c0       	rjmp	.+44     	; 0x308c <vfprintf+0xb0>
    3060:	83 2d       	mov	r24, r3
    3062:	82 60       	ori	r24, 0x02	; 2
    3064:	38 2e       	mov	r3, r24
    3066:	e3 2d       	mov	r30, r3
    3068:	e4 60       	ori	r30, 0x04	; 4
    306a:	3e 2e       	mov	r3, r30
    306c:	2a c0       	rjmp	.+84     	; 0x30c2 <vfprintf+0xe6>
    306e:	f3 2d       	mov	r31, r3
    3070:	f8 60       	ori	r31, 0x08	; 8
    3072:	1d c0       	rjmp	.+58     	; 0x30ae <vfprintf+0xd2>
    3074:	37 fc       	sbrc	r3, 7
    3076:	2d c0       	rjmp	.+90     	; 0x30d2 <vfprintf+0xf6>
    3078:	20 ed       	ldi	r18, 0xD0	; 208
    307a:	28 0f       	add	r18, r24
    307c:	2a 30       	cpi	r18, 0x0A	; 10
    307e:	40 f0       	brcs	.+16     	; 0x3090 <vfprintf+0xb4>
    3080:	8e 32       	cpi	r24, 0x2E	; 46
    3082:	b9 f4       	brne	.+46     	; 0x30b2 <vfprintf+0xd6>
    3084:	36 fc       	sbrc	r3, 6
    3086:	81 c1       	rjmp	.+770    	; 0x338a <vfprintf+0x3ae>
    3088:	23 2d       	mov	r18, r3
    308a:	20 64       	ori	r18, 0x40	; 64
    308c:	32 2e       	mov	r3, r18
    308e:	19 c0       	rjmp	.+50     	; 0x30c2 <vfprintf+0xe6>
    3090:	36 fe       	sbrs	r3, 6
    3092:	06 c0       	rjmp	.+12     	; 0x30a0 <vfprintf+0xc4>
    3094:	8a e0       	ldi	r24, 0x0A	; 10
    3096:	98 9e       	mul	r9, r24
    3098:	20 0d       	add	r18, r0
    309a:	11 24       	eor	r1, r1
    309c:	92 2e       	mov	r9, r18
    309e:	11 c0       	rjmp	.+34     	; 0x30c2 <vfprintf+0xe6>
    30a0:	ea e0       	ldi	r30, 0x0A	; 10
    30a2:	2e 9e       	mul	r2, r30
    30a4:	20 0d       	add	r18, r0
    30a6:	11 24       	eor	r1, r1
    30a8:	22 2e       	mov	r2, r18
    30aa:	f3 2d       	mov	r31, r3
    30ac:	f0 62       	ori	r31, 0x20	; 32
    30ae:	3f 2e       	mov	r3, r31
    30b0:	08 c0       	rjmp	.+16     	; 0x30c2 <vfprintf+0xe6>
    30b2:	8c 36       	cpi	r24, 0x6C	; 108
    30b4:	21 f4       	brne	.+8      	; 0x30be <vfprintf+0xe2>
    30b6:	83 2d       	mov	r24, r3
    30b8:	80 68       	ori	r24, 0x80	; 128
    30ba:	38 2e       	mov	r3, r24
    30bc:	02 c0       	rjmp	.+4      	; 0x30c2 <vfprintf+0xe6>
    30be:	88 36       	cpi	r24, 0x68	; 104
    30c0:	41 f4       	brne	.+16     	; 0x30d2 <vfprintf+0xf6>
    30c2:	f7 01       	movw	r30, r14
    30c4:	93 fd       	sbrc	r25, 3
    30c6:	85 91       	lpm	r24, Z+
    30c8:	93 ff       	sbrs	r25, 3
    30ca:	81 91       	ld	r24, Z+
    30cc:	7f 01       	movw	r14, r30
    30ce:	81 11       	cpse	r24, r1
    30d0:	b3 cf       	rjmp	.-154    	; 0x3038 <vfprintf+0x5c>
    30d2:	98 2f       	mov	r25, r24
    30d4:	9f 7d       	andi	r25, 0xDF	; 223
    30d6:	95 54       	subi	r25, 0x45	; 69
    30d8:	93 30       	cpi	r25, 0x03	; 3
    30da:	28 f4       	brcc	.+10     	; 0x30e6 <vfprintf+0x10a>
    30dc:	0c 5f       	subi	r16, 0xFC	; 252
    30de:	1f 4f       	sbci	r17, 0xFF	; 255
    30e0:	9f e3       	ldi	r25, 0x3F	; 63
    30e2:	99 83       	std	Y+1, r25	; 0x01
    30e4:	0d c0       	rjmp	.+26     	; 0x3100 <vfprintf+0x124>
    30e6:	83 36       	cpi	r24, 0x63	; 99
    30e8:	31 f0       	breq	.+12     	; 0x30f6 <vfprintf+0x11a>
    30ea:	83 37       	cpi	r24, 0x73	; 115
    30ec:	71 f0       	breq	.+28     	; 0x310a <vfprintf+0x12e>
    30ee:	83 35       	cpi	r24, 0x53	; 83
    30f0:	09 f0       	breq	.+2      	; 0x30f4 <vfprintf+0x118>
    30f2:	59 c0       	rjmp	.+178    	; 0x31a6 <vfprintf+0x1ca>
    30f4:	21 c0       	rjmp	.+66     	; 0x3138 <vfprintf+0x15c>
    30f6:	f8 01       	movw	r30, r16
    30f8:	80 81       	ld	r24, Z
    30fa:	89 83       	std	Y+1, r24	; 0x01
    30fc:	0e 5f       	subi	r16, 0xFE	; 254
    30fe:	1f 4f       	sbci	r17, 0xFF	; 255
    3100:	88 24       	eor	r8, r8
    3102:	83 94       	inc	r8
    3104:	91 2c       	mov	r9, r1
    3106:	53 01       	movw	r10, r6
    3108:	13 c0       	rjmp	.+38     	; 0x3130 <vfprintf+0x154>
    310a:	28 01       	movw	r4, r16
    310c:	f2 e0       	ldi	r31, 0x02	; 2
    310e:	4f 0e       	add	r4, r31
    3110:	51 1c       	adc	r5, r1
    3112:	f8 01       	movw	r30, r16
    3114:	a0 80       	ld	r10, Z
    3116:	b1 80       	ldd	r11, Z+1	; 0x01
    3118:	36 fe       	sbrs	r3, 6
    311a:	03 c0       	rjmp	.+6      	; 0x3122 <vfprintf+0x146>
    311c:	69 2d       	mov	r22, r9
    311e:	70 e0       	ldi	r23, 0x00	; 0
    3120:	02 c0       	rjmp	.+4      	; 0x3126 <vfprintf+0x14a>
    3122:	6f ef       	ldi	r22, 0xFF	; 255
    3124:	7f ef       	ldi	r23, 0xFF	; 255
    3126:	c5 01       	movw	r24, r10
    3128:	0e 94 da 19 	call	0x33b4	; 0x33b4 <strnlen>
    312c:	4c 01       	movw	r8, r24
    312e:	82 01       	movw	r16, r4
    3130:	f3 2d       	mov	r31, r3
    3132:	ff 77       	andi	r31, 0x7F	; 127
    3134:	3f 2e       	mov	r3, r31
    3136:	16 c0       	rjmp	.+44     	; 0x3164 <vfprintf+0x188>
    3138:	28 01       	movw	r4, r16
    313a:	22 e0       	ldi	r18, 0x02	; 2
    313c:	42 0e       	add	r4, r18
    313e:	51 1c       	adc	r5, r1
    3140:	f8 01       	movw	r30, r16
    3142:	a0 80       	ld	r10, Z
    3144:	b1 80       	ldd	r11, Z+1	; 0x01
    3146:	36 fe       	sbrs	r3, 6
    3148:	03 c0       	rjmp	.+6      	; 0x3150 <vfprintf+0x174>
    314a:	69 2d       	mov	r22, r9
    314c:	70 e0       	ldi	r23, 0x00	; 0
    314e:	02 c0       	rjmp	.+4      	; 0x3154 <vfprintf+0x178>
    3150:	6f ef       	ldi	r22, 0xFF	; 255
    3152:	7f ef       	ldi	r23, 0xFF	; 255
    3154:	c5 01       	movw	r24, r10
    3156:	0e 94 cf 19 	call	0x339e	; 0x339e <strnlen_P>
    315a:	4c 01       	movw	r8, r24
    315c:	f3 2d       	mov	r31, r3
    315e:	f0 68       	ori	r31, 0x80	; 128
    3160:	3f 2e       	mov	r3, r31
    3162:	82 01       	movw	r16, r4
    3164:	33 fc       	sbrc	r3, 3
    3166:	1b c0       	rjmp	.+54     	; 0x319e <vfprintf+0x1c2>
    3168:	82 2d       	mov	r24, r2
    316a:	90 e0       	ldi	r25, 0x00	; 0
    316c:	88 16       	cp	r8, r24
    316e:	99 06       	cpc	r9, r25
    3170:	b0 f4       	brcc	.+44     	; 0x319e <vfprintf+0x1c2>
    3172:	b6 01       	movw	r22, r12
    3174:	80 e2       	ldi	r24, 0x20	; 32
    3176:	90 e0       	ldi	r25, 0x00	; 0
    3178:	0e 94 e5 19 	call	0x33ca	; 0x33ca <fputc>
    317c:	2a 94       	dec	r2
    317e:	f4 cf       	rjmp	.-24     	; 0x3168 <vfprintf+0x18c>
    3180:	f5 01       	movw	r30, r10
    3182:	37 fc       	sbrc	r3, 7
    3184:	85 91       	lpm	r24, Z+
    3186:	37 fe       	sbrs	r3, 7
    3188:	81 91       	ld	r24, Z+
    318a:	5f 01       	movw	r10, r30
    318c:	b6 01       	movw	r22, r12
    318e:	90 e0       	ldi	r25, 0x00	; 0
    3190:	0e 94 e5 19 	call	0x33ca	; 0x33ca <fputc>
    3194:	21 10       	cpse	r2, r1
    3196:	2a 94       	dec	r2
    3198:	21 e0       	ldi	r18, 0x01	; 1
    319a:	82 1a       	sub	r8, r18
    319c:	91 08       	sbc	r9, r1
    319e:	81 14       	cp	r8, r1
    31a0:	91 04       	cpc	r9, r1
    31a2:	71 f7       	brne	.-36     	; 0x3180 <vfprintf+0x1a4>
    31a4:	e8 c0       	rjmp	.+464    	; 0x3376 <vfprintf+0x39a>
    31a6:	84 36       	cpi	r24, 0x64	; 100
    31a8:	11 f0       	breq	.+4      	; 0x31ae <vfprintf+0x1d2>
    31aa:	89 36       	cpi	r24, 0x69	; 105
    31ac:	41 f5       	brne	.+80     	; 0x31fe <vfprintf+0x222>
    31ae:	f8 01       	movw	r30, r16
    31b0:	37 fe       	sbrs	r3, 7
    31b2:	07 c0       	rjmp	.+14     	; 0x31c2 <vfprintf+0x1e6>
    31b4:	60 81       	ld	r22, Z
    31b6:	71 81       	ldd	r23, Z+1	; 0x01
    31b8:	82 81       	ldd	r24, Z+2	; 0x02
    31ba:	93 81       	ldd	r25, Z+3	; 0x03
    31bc:	0c 5f       	subi	r16, 0xFC	; 252
    31be:	1f 4f       	sbci	r17, 0xFF	; 255
    31c0:	08 c0       	rjmp	.+16     	; 0x31d2 <vfprintf+0x1f6>
    31c2:	60 81       	ld	r22, Z
    31c4:	71 81       	ldd	r23, Z+1	; 0x01
    31c6:	07 2e       	mov	r0, r23
    31c8:	00 0c       	add	r0, r0
    31ca:	88 0b       	sbc	r24, r24
    31cc:	99 0b       	sbc	r25, r25
    31ce:	0e 5f       	subi	r16, 0xFE	; 254
    31d0:	1f 4f       	sbci	r17, 0xFF	; 255
    31d2:	f3 2d       	mov	r31, r3
    31d4:	ff 76       	andi	r31, 0x6F	; 111
    31d6:	3f 2e       	mov	r3, r31
    31d8:	97 ff       	sbrs	r25, 7
    31da:	09 c0       	rjmp	.+18     	; 0x31ee <vfprintf+0x212>
    31dc:	90 95       	com	r25
    31de:	80 95       	com	r24
    31e0:	70 95       	com	r23
    31e2:	61 95       	neg	r22
    31e4:	7f 4f       	sbci	r23, 0xFF	; 255
    31e6:	8f 4f       	sbci	r24, 0xFF	; 255
    31e8:	9f 4f       	sbci	r25, 0xFF	; 255
    31ea:	f0 68       	ori	r31, 0x80	; 128
    31ec:	3f 2e       	mov	r3, r31
    31ee:	2a e0       	ldi	r18, 0x0A	; 10
    31f0:	30 e0       	ldi	r19, 0x00	; 0
    31f2:	a3 01       	movw	r20, r6
    31f4:	0e 94 21 1a 	call	0x3442	; 0x3442 <__ultoa_invert>
    31f8:	88 2e       	mov	r8, r24
    31fa:	86 18       	sub	r8, r6
    31fc:	45 c0       	rjmp	.+138    	; 0x3288 <vfprintf+0x2ac>
    31fe:	85 37       	cpi	r24, 0x75	; 117
    3200:	31 f4       	brne	.+12     	; 0x320e <vfprintf+0x232>
    3202:	23 2d       	mov	r18, r3
    3204:	2f 7e       	andi	r18, 0xEF	; 239
    3206:	b2 2e       	mov	r11, r18
    3208:	2a e0       	ldi	r18, 0x0A	; 10
    320a:	30 e0       	ldi	r19, 0x00	; 0
    320c:	25 c0       	rjmp	.+74     	; 0x3258 <vfprintf+0x27c>
    320e:	93 2d       	mov	r25, r3
    3210:	99 7f       	andi	r25, 0xF9	; 249
    3212:	b9 2e       	mov	r11, r25
    3214:	8f 36       	cpi	r24, 0x6F	; 111
    3216:	c1 f0       	breq	.+48     	; 0x3248 <vfprintf+0x26c>
    3218:	18 f4       	brcc	.+6      	; 0x3220 <vfprintf+0x244>
    321a:	88 35       	cpi	r24, 0x58	; 88
    321c:	79 f0       	breq	.+30     	; 0x323c <vfprintf+0x260>
    321e:	b5 c0       	rjmp	.+362    	; 0x338a <vfprintf+0x3ae>
    3220:	80 37       	cpi	r24, 0x70	; 112
    3222:	19 f0       	breq	.+6      	; 0x322a <vfprintf+0x24e>
    3224:	88 37       	cpi	r24, 0x78	; 120
    3226:	21 f0       	breq	.+8      	; 0x3230 <vfprintf+0x254>
    3228:	b0 c0       	rjmp	.+352    	; 0x338a <vfprintf+0x3ae>
    322a:	e9 2f       	mov	r30, r25
    322c:	e0 61       	ori	r30, 0x10	; 16
    322e:	be 2e       	mov	r11, r30
    3230:	b4 fe       	sbrs	r11, 4
    3232:	0d c0       	rjmp	.+26     	; 0x324e <vfprintf+0x272>
    3234:	fb 2d       	mov	r31, r11
    3236:	f4 60       	ori	r31, 0x04	; 4
    3238:	bf 2e       	mov	r11, r31
    323a:	09 c0       	rjmp	.+18     	; 0x324e <vfprintf+0x272>
    323c:	34 fe       	sbrs	r3, 4
    323e:	0a c0       	rjmp	.+20     	; 0x3254 <vfprintf+0x278>
    3240:	29 2f       	mov	r18, r25
    3242:	26 60       	ori	r18, 0x06	; 6
    3244:	b2 2e       	mov	r11, r18
    3246:	06 c0       	rjmp	.+12     	; 0x3254 <vfprintf+0x278>
    3248:	28 e0       	ldi	r18, 0x08	; 8
    324a:	30 e0       	ldi	r19, 0x00	; 0
    324c:	05 c0       	rjmp	.+10     	; 0x3258 <vfprintf+0x27c>
    324e:	20 e1       	ldi	r18, 0x10	; 16
    3250:	30 e0       	ldi	r19, 0x00	; 0
    3252:	02 c0       	rjmp	.+4      	; 0x3258 <vfprintf+0x27c>
    3254:	20 e1       	ldi	r18, 0x10	; 16
    3256:	32 e0       	ldi	r19, 0x02	; 2
    3258:	f8 01       	movw	r30, r16
    325a:	b7 fe       	sbrs	r11, 7
    325c:	07 c0       	rjmp	.+14     	; 0x326c <vfprintf+0x290>
    325e:	60 81       	ld	r22, Z
    3260:	71 81       	ldd	r23, Z+1	; 0x01
    3262:	82 81       	ldd	r24, Z+2	; 0x02
    3264:	93 81       	ldd	r25, Z+3	; 0x03
    3266:	0c 5f       	subi	r16, 0xFC	; 252
    3268:	1f 4f       	sbci	r17, 0xFF	; 255
    326a:	06 c0       	rjmp	.+12     	; 0x3278 <vfprintf+0x29c>
    326c:	60 81       	ld	r22, Z
    326e:	71 81       	ldd	r23, Z+1	; 0x01
    3270:	80 e0       	ldi	r24, 0x00	; 0
    3272:	90 e0       	ldi	r25, 0x00	; 0
    3274:	0e 5f       	subi	r16, 0xFE	; 254
    3276:	1f 4f       	sbci	r17, 0xFF	; 255
    3278:	a3 01       	movw	r20, r6
    327a:	0e 94 21 1a 	call	0x3442	; 0x3442 <__ultoa_invert>
    327e:	88 2e       	mov	r8, r24
    3280:	86 18       	sub	r8, r6
    3282:	fb 2d       	mov	r31, r11
    3284:	ff 77       	andi	r31, 0x7F	; 127
    3286:	3f 2e       	mov	r3, r31
    3288:	36 fe       	sbrs	r3, 6
    328a:	0d c0       	rjmp	.+26     	; 0x32a6 <vfprintf+0x2ca>
    328c:	23 2d       	mov	r18, r3
    328e:	2e 7f       	andi	r18, 0xFE	; 254
    3290:	a2 2e       	mov	r10, r18
    3292:	89 14       	cp	r8, r9
    3294:	58 f4       	brcc	.+22     	; 0x32ac <vfprintf+0x2d0>
    3296:	34 fe       	sbrs	r3, 4
    3298:	0b c0       	rjmp	.+22     	; 0x32b0 <vfprintf+0x2d4>
    329a:	32 fc       	sbrc	r3, 2
    329c:	09 c0       	rjmp	.+18     	; 0x32b0 <vfprintf+0x2d4>
    329e:	83 2d       	mov	r24, r3
    32a0:	8e 7e       	andi	r24, 0xEE	; 238
    32a2:	a8 2e       	mov	r10, r24
    32a4:	05 c0       	rjmp	.+10     	; 0x32b0 <vfprintf+0x2d4>
    32a6:	b8 2c       	mov	r11, r8
    32a8:	a3 2c       	mov	r10, r3
    32aa:	03 c0       	rjmp	.+6      	; 0x32b2 <vfprintf+0x2d6>
    32ac:	b8 2c       	mov	r11, r8
    32ae:	01 c0       	rjmp	.+2      	; 0x32b2 <vfprintf+0x2d6>
    32b0:	b9 2c       	mov	r11, r9
    32b2:	a4 fe       	sbrs	r10, 4
    32b4:	0f c0       	rjmp	.+30     	; 0x32d4 <vfprintf+0x2f8>
    32b6:	fe 01       	movw	r30, r28
    32b8:	e8 0d       	add	r30, r8
    32ba:	f1 1d       	adc	r31, r1
    32bc:	80 81       	ld	r24, Z
    32be:	80 33       	cpi	r24, 0x30	; 48
    32c0:	21 f4       	brne	.+8      	; 0x32ca <vfprintf+0x2ee>
    32c2:	9a 2d       	mov	r25, r10
    32c4:	99 7e       	andi	r25, 0xE9	; 233
    32c6:	a9 2e       	mov	r10, r25
    32c8:	09 c0       	rjmp	.+18     	; 0x32dc <vfprintf+0x300>
    32ca:	a2 fe       	sbrs	r10, 2
    32cc:	06 c0       	rjmp	.+12     	; 0x32da <vfprintf+0x2fe>
    32ce:	b3 94       	inc	r11
    32d0:	b3 94       	inc	r11
    32d2:	04 c0       	rjmp	.+8      	; 0x32dc <vfprintf+0x300>
    32d4:	8a 2d       	mov	r24, r10
    32d6:	86 78       	andi	r24, 0x86	; 134
    32d8:	09 f0       	breq	.+2      	; 0x32dc <vfprintf+0x300>
    32da:	b3 94       	inc	r11
    32dc:	a3 fc       	sbrc	r10, 3
    32de:	11 c0       	rjmp	.+34     	; 0x3302 <vfprintf+0x326>
    32e0:	a0 fe       	sbrs	r10, 0
    32e2:	06 c0       	rjmp	.+12     	; 0x32f0 <vfprintf+0x314>
    32e4:	b2 14       	cp	r11, r2
    32e6:	88 f4       	brcc	.+34     	; 0x330a <vfprintf+0x32e>
    32e8:	28 0c       	add	r2, r8
    32ea:	92 2c       	mov	r9, r2
    32ec:	9b 18       	sub	r9, r11
    32ee:	0e c0       	rjmp	.+28     	; 0x330c <vfprintf+0x330>
    32f0:	b2 14       	cp	r11, r2
    32f2:	60 f4       	brcc	.+24     	; 0x330c <vfprintf+0x330>
    32f4:	b6 01       	movw	r22, r12
    32f6:	80 e2       	ldi	r24, 0x20	; 32
    32f8:	90 e0       	ldi	r25, 0x00	; 0
    32fa:	0e 94 e5 19 	call	0x33ca	; 0x33ca <fputc>
    32fe:	b3 94       	inc	r11
    3300:	f7 cf       	rjmp	.-18     	; 0x32f0 <vfprintf+0x314>
    3302:	b2 14       	cp	r11, r2
    3304:	18 f4       	brcc	.+6      	; 0x330c <vfprintf+0x330>
    3306:	2b 18       	sub	r2, r11
    3308:	02 c0       	rjmp	.+4      	; 0x330e <vfprintf+0x332>
    330a:	98 2c       	mov	r9, r8
    330c:	21 2c       	mov	r2, r1
    330e:	a4 fe       	sbrs	r10, 4
    3310:	10 c0       	rjmp	.+32     	; 0x3332 <vfprintf+0x356>
    3312:	b6 01       	movw	r22, r12
    3314:	80 e3       	ldi	r24, 0x30	; 48
    3316:	90 e0       	ldi	r25, 0x00	; 0
    3318:	0e 94 e5 19 	call	0x33ca	; 0x33ca <fputc>
    331c:	a2 fe       	sbrs	r10, 2
    331e:	17 c0       	rjmp	.+46     	; 0x334e <vfprintf+0x372>
    3320:	a1 fc       	sbrc	r10, 1
    3322:	03 c0       	rjmp	.+6      	; 0x332a <vfprintf+0x34e>
    3324:	88 e7       	ldi	r24, 0x78	; 120
    3326:	90 e0       	ldi	r25, 0x00	; 0
    3328:	02 c0       	rjmp	.+4      	; 0x332e <vfprintf+0x352>
    332a:	88 e5       	ldi	r24, 0x58	; 88
    332c:	90 e0       	ldi	r25, 0x00	; 0
    332e:	b6 01       	movw	r22, r12
    3330:	0c c0       	rjmp	.+24     	; 0x334a <vfprintf+0x36e>
    3332:	8a 2d       	mov	r24, r10
    3334:	86 78       	andi	r24, 0x86	; 134
    3336:	59 f0       	breq	.+22     	; 0x334e <vfprintf+0x372>
    3338:	a1 fe       	sbrs	r10, 1
    333a:	02 c0       	rjmp	.+4      	; 0x3340 <vfprintf+0x364>
    333c:	8b e2       	ldi	r24, 0x2B	; 43
    333e:	01 c0       	rjmp	.+2      	; 0x3342 <vfprintf+0x366>
    3340:	80 e2       	ldi	r24, 0x20	; 32
    3342:	a7 fc       	sbrc	r10, 7
    3344:	8d e2       	ldi	r24, 0x2D	; 45
    3346:	b6 01       	movw	r22, r12
    3348:	90 e0       	ldi	r25, 0x00	; 0
    334a:	0e 94 e5 19 	call	0x33ca	; 0x33ca <fputc>
    334e:	89 14       	cp	r8, r9
    3350:	38 f4       	brcc	.+14     	; 0x3360 <vfprintf+0x384>
    3352:	b6 01       	movw	r22, r12
    3354:	80 e3       	ldi	r24, 0x30	; 48
    3356:	90 e0       	ldi	r25, 0x00	; 0
    3358:	0e 94 e5 19 	call	0x33ca	; 0x33ca <fputc>
    335c:	9a 94       	dec	r9
    335e:	f7 cf       	rjmp	.-18     	; 0x334e <vfprintf+0x372>
    3360:	8a 94       	dec	r8
    3362:	f3 01       	movw	r30, r6
    3364:	e8 0d       	add	r30, r8
    3366:	f1 1d       	adc	r31, r1
    3368:	80 81       	ld	r24, Z
    336a:	b6 01       	movw	r22, r12
    336c:	90 e0       	ldi	r25, 0x00	; 0
    336e:	0e 94 e5 19 	call	0x33ca	; 0x33ca <fputc>
    3372:	81 10       	cpse	r8, r1
    3374:	f5 cf       	rjmp	.-22     	; 0x3360 <vfprintf+0x384>
    3376:	22 20       	and	r2, r2
    3378:	09 f4       	brne	.+2      	; 0x337c <vfprintf+0x3a0>
    337a:	42 ce       	rjmp	.-892    	; 0x3000 <vfprintf+0x24>
    337c:	b6 01       	movw	r22, r12
    337e:	80 e2       	ldi	r24, 0x20	; 32
    3380:	90 e0       	ldi	r25, 0x00	; 0
    3382:	0e 94 e5 19 	call	0x33ca	; 0x33ca <fputc>
    3386:	2a 94       	dec	r2
    3388:	f6 cf       	rjmp	.-20     	; 0x3376 <vfprintf+0x39a>
    338a:	f6 01       	movw	r30, r12
    338c:	86 81       	ldd	r24, Z+6	; 0x06
    338e:	97 81       	ldd	r25, Z+7	; 0x07
    3390:	02 c0       	rjmp	.+4      	; 0x3396 <vfprintf+0x3ba>
    3392:	8f ef       	ldi	r24, 0xFF	; 255
    3394:	9f ef       	ldi	r25, 0xFF	; 255
    3396:	2b 96       	adiw	r28, 0x0b	; 11
    3398:	e2 e1       	ldi	r30, 0x12	; 18
    339a:	0c 94 9b 1a 	jmp	0x3536	; 0x3536 <__epilogue_restores__>

0000339e <strnlen_P>:
    339e:	fc 01       	movw	r30, r24
    33a0:	05 90       	lpm	r0, Z+
    33a2:	61 50       	subi	r22, 0x01	; 1
    33a4:	70 40       	sbci	r23, 0x00	; 0
    33a6:	01 10       	cpse	r0, r1
    33a8:	d8 f7       	brcc	.-10     	; 0x33a0 <strnlen_P+0x2>
    33aa:	80 95       	com	r24
    33ac:	90 95       	com	r25
    33ae:	8e 0f       	add	r24, r30
    33b0:	9f 1f       	adc	r25, r31
    33b2:	08 95       	ret

000033b4 <strnlen>:
    33b4:	fc 01       	movw	r30, r24
    33b6:	61 50       	subi	r22, 0x01	; 1
    33b8:	70 40       	sbci	r23, 0x00	; 0
    33ba:	01 90       	ld	r0, Z+
    33bc:	01 10       	cpse	r0, r1
    33be:	d8 f7       	brcc	.-10     	; 0x33b6 <strnlen+0x2>
    33c0:	80 95       	com	r24
    33c2:	90 95       	com	r25
    33c4:	8e 0f       	add	r24, r30
    33c6:	9f 1f       	adc	r25, r31
    33c8:	08 95       	ret

000033ca <fputc>:
    33ca:	0f 93       	push	r16
    33cc:	1f 93       	push	r17
    33ce:	cf 93       	push	r28
    33d0:	df 93       	push	r29
    33d2:	fb 01       	movw	r30, r22
    33d4:	23 81       	ldd	r18, Z+3	; 0x03
    33d6:	21 fd       	sbrc	r18, 1
    33d8:	03 c0       	rjmp	.+6      	; 0x33e0 <fputc+0x16>
    33da:	8f ef       	ldi	r24, 0xFF	; 255
    33dc:	9f ef       	ldi	r25, 0xFF	; 255
    33de:	2c c0       	rjmp	.+88     	; 0x3438 <fputc+0x6e>
    33e0:	22 ff       	sbrs	r18, 2
    33e2:	16 c0       	rjmp	.+44     	; 0x3410 <fputc+0x46>
    33e4:	46 81       	ldd	r20, Z+6	; 0x06
    33e6:	57 81       	ldd	r21, Z+7	; 0x07
    33e8:	24 81       	ldd	r18, Z+4	; 0x04
    33ea:	35 81       	ldd	r19, Z+5	; 0x05
    33ec:	42 17       	cp	r20, r18
    33ee:	53 07       	cpc	r21, r19
    33f0:	44 f4       	brge	.+16     	; 0x3402 <fputc+0x38>
    33f2:	a0 81       	ld	r26, Z
    33f4:	b1 81       	ldd	r27, Z+1	; 0x01
    33f6:	9d 01       	movw	r18, r26
    33f8:	2f 5f       	subi	r18, 0xFF	; 255
    33fa:	3f 4f       	sbci	r19, 0xFF	; 255
    33fc:	31 83       	std	Z+1, r19	; 0x01
    33fe:	20 83       	st	Z, r18
    3400:	8c 93       	st	X, r24
    3402:	26 81       	ldd	r18, Z+6	; 0x06
    3404:	37 81       	ldd	r19, Z+7	; 0x07
    3406:	2f 5f       	subi	r18, 0xFF	; 255
    3408:	3f 4f       	sbci	r19, 0xFF	; 255
    340a:	37 83       	std	Z+7, r19	; 0x07
    340c:	26 83       	std	Z+6, r18	; 0x06
    340e:	14 c0       	rjmp	.+40     	; 0x3438 <fputc+0x6e>
    3410:	8b 01       	movw	r16, r22
    3412:	ec 01       	movw	r28, r24
    3414:	fb 01       	movw	r30, r22
    3416:	00 84       	ldd	r0, Z+8	; 0x08
    3418:	f1 85       	ldd	r31, Z+9	; 0x09
    341a:	e0 2d       	mov	r30, r0
    341c:	09 95       	icall
    341e:	89 2b       	or	r24, r25
    3420:	e1 f6       	brne	.-72     	; 0x33da <fputc+0x10>
    3422:	d8 01       	movw	r26, r16
    3424:	16 96       	adiw	r26, 0x06	; 6
    3426:	8d 91       	ld	r24, X+
    3428:	9c 91       	ld	r25, X
    342a:	17 97       	sbiw	r26, 0x07	; 7
    342c:	01 96       	adiw	r24, 0x01	; 1
    342e:	17 96       	adiw	r26, 0x07	; 7
    3430:	9c 93       	st	X, r25
    3432:	8e 93       	st	-X, r24
    3434:	16 97       	sbiw	r26, 0x06	; 6
    3436:	ce 01       	movw	r24, r28
    3438:	df 91       	pop	r29
    343a:	cf 91       	pop	r28
    343c:	1f 91       	pop	r17
    343e:	0f 91       	pop	r16
    3440:	08 95       	ret

00003442 <__ultoa_invert>:
    3442:	fa 01       	movw	r30, r20
    3444:	aa 27       	eor	r26, r26
    3446:	28 30       	cpi	r18, 0x08	; 8
    3448:	51 f1       	breq	.+84     	; 0x349e <__ultoa_invert+0x5c>
    344a:	20 31       	cpi	r18, 0x10	; 16
    344c:	81 f1       	breq	.+96     	; 0x34ae <__ultoa_invert+0x6c>
    344e:	e8 94       	clt
    3450:	6f 93       	push	r22
    3452:	6e 7f       	andi	r22, 0xFE	; 254
    3454:	6e 5f       	subi	r22, 0xFE	; 254
    3456:	7f 4f       	sbci	r23, 0xFF	; 255
    3458:	8f 4f       	sbci	r24, 0xFF	; 255
    345a:	9f 4f       	sbci	r25, 0xFF	; 255
    345c:	af 4f       	sbci	r26, 0xFF	; 255
    345e:	b1 e0       	ldi	r27, 0x01	; 1
    3460:	3e d0       	rcall	.+124    	; 0x34de <__ultoa_invert+0x9c>
    3462:	b4 e0       	ldi	r27, 0x04	; 4
    3464:	3c d0       	rcall	.+120    	; 0x34de <__ultoa_invert+0x9c>
    3466:	67 0f       	add	r22, r23
    3468:	78 1f       	adc	r23, r24
    346a:	89 1f       	adc	r24, r25
    346c:	9a 1f       	adc	r25, r26
    346e:	a1 1d       	adc	r26, r1
    3470:	68 0f       	add	r22, r24
    3472:	79 1f       	adc	r23, r25
    3474:	8a 1f       	adc	r24, r26
    3476:	91 1d       	adc	r25, r1
    3478:	a1 1d       	adc	r26, r1
    347a:	6a 0f       	add	r22, r26
    347c:	71 1d       	adc	r23, r1
    347e:	81 1d       	adc	r24, r1
    3480:	91 1d       	adc	r25, r1
    3482:	a1 1d       	adc	r26, r1
    3484:	20 d0       	rcall	.+64     	; 0x34c6 <__ultoa_invert+0x84>
    3486:	09 f4       	brne	.+2      	; 0x348a <__ultoa_invert+0x48>
    3488:	68 94       	set
    348a:	3f 91       	pop	r19
    348c:	2a e0       	ldi	r18, 0x0A	; 10
    348e:	26 9f       	mul	r18, r22
    3490:	11 24       	eor	r1, r1
    3492:	30 19       	sub	r19, r0
    3494:	30 5d       	subi	r19, 0xD0	; 208
    3496:	31 93       	st	Z+, r19
    3498:	de f6       	brtc	.-74     	; 0x3450 <__ultoa_invert+0xe>
    349a:	cf 01       	movw	r24, r30
    349c:	08 95       	ret
    349e:	46 2f       	mov	r20, r22
    34a0:	47 70       	andi	r20, 0x07	; 7
    34a2:	40 5d       	subi	r20, 0xD0	; 208
    34a4:	41 93       	st	Z+, r20
    34a6:	b3 e0       	ldi	r27, 0x03	; 3
    34a8:	0f d0       	rcall	.+30     	; 0x34c8 <__ultoa_invert+0x86>
    34aa:	c9 f7       	brne	.-14     	; 0x349e <__ultoa_invert+0x5c>
    34ac:	f6 cf       	rjmp	.-20     	; 0x349a <__ultoa_invert+0x58>
    34ae:	46 2f       	mov	r20, r22
    34b0:	4f 70       	andi	r20, 0x0F	; 15
    34b2:	40 5d       	subi	r20, 0xD0	; 208
    34b4:	4a 33       	cpi	r20, 0x3A	; 58
    34b6:	18 f0       	brcs	.+6      	; 0x34be <__ultoa_invert+0x7c>
    34b8:	49 5d       	subi	r20, 0xD9	; 217
    34ba:	31 fd       	sbrc	r19, 1
    34bc:	40 52       	subi	r20, 0x20	; 32
    34be:	41 93       	st	Z+, r20
    34c0:	02 d0       	rcall	.+4      	; 0x34c6 <__ultoa_invert+0x84>
    34c2:	a9 f7       	brne	.-22     	; 0x34ae <__ultoa_invert+0x6c>
    34c4:	ea cf       	rjmp	.-44     	; 0x349a <__ultoa_invert+0x58>
    34c6:	b4 e0       	ldi	r27, 0x04	; 4
    34c8:	a6 95       	lsr	r26
    34ca:	97 95       	ror	r25
    34cc:	87 95       	ror	r24
    34ce:	77 95       	ror	r23
    34d0:	67 95       	ror	r22
    34d2:	ba 95       	dec	r27
    34d4:	c9 f7       	brne	.-14     	; 0x34c8 <__ultoa_invert+0x86>
    34d6:	00 97       	sbiw	r24, 0x00	; 0
    34d8:	61 05       	cpc	r22, r1
    34da:	71 05       	cpc	r23, r1
    34dc:	08 95       	ret
    34de:	9b 01       	movw	r18, r22
    34e0:	ac 01       	movw	r20, r24
    34e2:	0a 2e       	mov	r0, r26
    34e4:	06 94       	lsr	r0
    34e6:	57 95       	ror	r21
    34e8:	47 95       	ror	r20
    34ea:	37 95       	ror	r19
    34ec:	27 95       	ror	r18
    34ee:	ba 95       	dec	r27
    34f0:	c9 f7       	brne	.-14     	; 0x34e4 <__ultoa_invert+0xa2>
    34f2:	62 0f       	add	r22, r18
    34f4:	73 1f       	adc	r23, r19
    34f6:	84 1f       	adc	r24, r20
    34f8:	95 1f       	adc	r25, r21
    34fa:	a0 1d       	adc	r26, r0
    34fc:	08 95       	ret

000034fe <__prologue_saves__>:
    34fe:	2f 92       	push	r2
    3500:	3f 92       	push	r3
    3502:	4f 92       	push	r4
    3504:	5f 92       	push	r5
    3506:	6f 92       	push	r6
    3508:	7f 92       	push	r7
    350a:	8f 92       	push	r8
    350c:	9f 92       	push	r9
    350e:	af 92       	push	r10
    3510:	bf 92       	push	r11
    3512:	cf 92       	push	r12
    3514:	df 92       	push	r13
    3516:	ef 92       	push	r14
    3518:	ff 92       	push	r15
    351a:	0f 93       	push	r16
    351c:	1f 93       	push	r17
    351e:	cf 93       	push	r28
    3520:	df 93       	push	r29
    3522:	cd b7       	in	r28, 0x3d	; 61
    3524:	de b7       	in	r29, 0x3e	; 62
    3526:	ca 1b       	sub	r28, r26
    3528:	db 0b       	sbc	r29, r27
    352a:	0f b6       	in	r0, 0x3f	; 63
    352c:	f8 94       	cli
    352e:	de bf       	out	0x3e, r29	; 62
    3530:	0f be       	out	0x3f, r0	; 63
    3532:	cd bf       	out	0x3d, r28	; 61
    3534:	09 94       	ijmp

00003536 <__epilogue_restores__>:
    3536:	2a 88       	ldd	r2, Y+18	; 0x12
    3538:	39 88       	ldd	r3, Y+17	; 0x11
    353a:	48 88       	ldd	r4, Y+16	; 0x10
    353c:	5f 84       	ldd	r5, Y+15	; 0x0f
    353e:	6e 84       	ldd	r6, Y+14	; 0x0e
    3540:	7d 84       	ldd	r7, Y+13	; 0x0d
    3542:	8c 84       	ldd	r8, Y+12	; 0x0c
    3544:	9b 84       	ldd	r9, Y+11	; 0x0b
    3546:	aa 84       	ldd	r10, Y+10	; 0x0a
    3548:	b9 84       	ldd	r11, Y+9	; 0x09
    354a:	c8 84       	ldd	r12, Y+8	; 0x08
    354c:	df 80       	ldd	r13, Y+7	; 0x07
    354e:	ee 80       	ldd	r14, Y+6	; 0x06
    3550:	fd 80       	ldd	r15, Y+5	; 0x05
    3552:	0c 81       	ldd	r16, Y+4	; 0x04
    3554:	1b 81       	ldd	r17, Y+3	; 0x03
    3556:	aa 81       	ldd	r26, Y+2	; 0x02
    3558:	b9 81       	ldd	r27, Y+1	; 0x01
    355a:	ce 0f       	add	r28, r30
    355c:	d1 1d       	adc	r29, r1
    355e:	0f b6       	in	r0, 0x3f	; 63
    3560:	f8 94       	cli
    3562:	de bf       	out	0x3e, r29	; 62
    3564:	0f be       	out	0x3f, r0	; 63
    3566:	cd bf       	out	0x3d, r28	; 61
    3568:	ed 01       	movw	r28, r26
    356a:	08 95       	ret

0000356c <_exit>:
    356c:	f8 94       	cli

0000356e <__stop_program>:
    356e:	ff cf       	rjmp	.-2      	; 0x356e <__stop_program>
